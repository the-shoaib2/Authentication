{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { refreshToken } from './ApiService';\nconst RefreshHandler = ({\n  setIsAuthenticated\n}) => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      try {\n        const result = await refreshToken();\n        if (result.success) {\n          localStorage.setItem('token', result.accessToken);\n          localStorage.setItem('refreshToken', result.refreshToken);\n          if (location.pathname === '/' || location.pathname === '/login' || location.pathname === '/signup') {\n            navigate('/home', {\n              replace: false\n            });\n          }\n        } else {\n          setIsAuthenticated(false);\n        }\n      } catch (error) {\n        console.error(\"Error refreshing token:\", error);\n        setIsAuthenticated(false);\n      }\n    }, 1000); // Refresh every 15 minutes\n\n    return () => clearInterval(interval);\n  }, [setIsAuthenticated, location, navigate]);\n  return null;\n};\n_s(RefreshHandler, \"fPjCxODVr6jVvib6o2c9VLE4s84=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = RefreshHandler;\nexport default RefreshHandler;\nvar _c;\n$RefreshReg$(_c, \"RefreshHandler\");","map":{"version":3,"names":["useEffect","useLocation","useNavigate","refreshToken","RefreshHandler","setIsAuthenticated","_s","location","navigate","interval","setInterval","result","success","localStorage","setItem","accessToken","pathname","replace","error","console","clearInterval","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication - Copy/frontend/src/utils/RefreshHandler.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { refreshToken } from './ApiService';\r\n\r\nconst RefreshHandler = ({ setIsAuthenticated }) => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            try {\r\n                const result = await refreshToken();\r\n                if (result.success) {\r\n                    localStorage.setItem('token', result.accessToken);\r\n                    localStorage.setItem('refreshToken', result.refreshToken);\r\n\r\n                    if (location.pathname === '/' ||\r\n                        location.pathname === '/login' ||\r\n                        location.pathname === '/signup'\r\n                    ) {\r\n\r\n                        navigate('/home', { replace: false });\r\n\r\n                    }\r\n                } else {\r\n                    setIsAuthenticated(false);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error refreshing token:\", error);\r\n                setIsAuthenticated(false);\r\n            }\r\n        }, 1000); // Refresh every 15 minutes\r\n\r\n        return () => clearInterval(interval);\r\n    }, [setIsAuthenticated,location, navigate]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default RefreshHandler;\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,YAAY,QAAQ,cAAc;AAE3C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ,MAAMS,QAAQ,GAAGC,WAAW,CAAC,YAAY;MACrC,IAAI;QACA,MAAMC,MAAM,GAAG,MAAMR,YAAY,CAAC,CAAC;QACnC,IAAIQ,MAAM,CAACC,OAAO,EAAE;UAChBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,MAAM,CAACI,WAAW,CAAC;UACjDF,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEH,MAAM,CAACR,YAAY,CAAC;UAEzD,IAAII,QAAQ,CAACS,QAAQ,KAAK,GAAG,IACzBT,QAAQ,CAACS,QAAQ,KAAK,QAAQ,IAC9BT,QAAQ,CAACS,QAAQ,KAAK,SAAS,EACjC;YAEER,QAAQ,CAAC,OAAO,EAAE;cAAES,OAAO,EAAE;YAAM,CAAC,CAAC;UAEzC;QACJ,CAAC,MAAM;UACHZ,kBAAkB,CAAC,KAAK,CAAC;QAC7B;MACJ,CAAC,CAAC,OAAOa,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/Cb,kBAAkB,CAAC,KAAK,CAAC;MAC7B;IACJ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMe,aAAa,CAACX,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACJ,kBAAkB,EAACE,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EAE3C,OAAO,IAAI;AACf,CAAC;AAACF,EAAA,CAjCIF,cAAc;EAAA,QACCH,WAAW,EACXC,WAAW;AAAA;AAAAmB,EAAA,GAF1BjB,cAAc;AAmCpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}