{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication - Copy\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// frontend/src/contexts/AuthContext.js\n// AuthContext.js\nimport React, { createContext, useState } from 'react';\nimport axiosInstance from '../utils/axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState({\n    isAuthenticated: false,\n    user: null\n  });\n  const login = async (emailOrUsername, password) => {\n    const response = await axiosInstance.post(\"/auth/login\", {\n      emailOrUsername,\n      password\n    });\n    if (response.data.success) {\n      localStorage.setItem('token', response.data.accessToken);\n      setAuth({\n        isAuthenticated: true,\n        user: response.data.user\n      });\n    }\n    return response.data;\n  };\n  const logout = async () => {\n    const response = await axiosInstance.post(\"/auth/logout\", {}, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      withCredentials: true\n    });\n    if (response.status === 200) {\n      clearAuthData();\n      setAuth({\n        isAuthenticated: false,\n        user: null\n      });\n    }\n    return response;\n  };\n  const fetchLoggedInUser = async () => {\n    const response = await axiosInstance.get('/Users/me');\n    return response.data;\n  };\n  const checkAuthentication = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) return false;\n    // Optionally, you can add a token validation logic here\n    return true;\n  };\n  const clearAuthData = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    const cookies = document.cookie.split(\"; \");\n    for (let cookie of cookies) {\n      const eqPos = cookie.indexOf(\"=\");\n      const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n      document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      login,\n      logout,\n      fetchLoggedInUser,\n      checkAuthentication\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n_s(AuthProvider, \"xz7IUuyylG44VfJ4TnLbxZUfkc4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","axiosInstance","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuth","isAuthenticated","user","login","emailOrUsername","password","response","post","data","success","localStorage","setItem","accessToken","logout","headers","Authorization","getItem","withCredentials","status","clearAuthData","fetchLoggedInUser","get","checkAuthentication","token","removeItem","cookies","document","cookie","split","eqPos","indexOf","name","substr","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication - Copy/frontend/src/contexts/AuthContext.js"],"sourcesContent":["// frontend/src/contexts/AuthContext.js\r\n// AuthContext.js\r\nimport React, { createContext, useState } from 'react';\r\nimport axiosInstance from '../utils/axiosConfig';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n\tconst [auth, setAuth] = useState({\r\n\t\tisAuthenticated: false,\r\n\t\tuser: null,\r\n\t});\r\n\r\n\tconst login = async (emailOrUsername, password) => {\r\n\t\tconst response = await axiosInstance.post(\"/auth/login\", {\r\n\t\t\temailOrUsername,\r\n\t\t\tpassword\r\n\t\t});\r\n\t\tif (response.data.success) {\r\n\t\t\tlocalStorage.setItem('token', response.data.accessToken);\r\n\t\t\tsetAuth({ isAuthenticated: true, user: response.data.user });\r\n\t\t}\r\n\t\treturn response.data;\r\n\t};\r\n\r\n\tconst logout = async () => {\r\n\t\tconst response = await axiosInstance.post(\"/auth/logout\", {}, {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t},\r\n\t\t\twithCredentials: true,\r\n\t\t});\r\n\t\tif (response.status === 200) {\r\n\t\t\tclearAuthData();\r\n\t\t\tsetAuth({ isAuthenticated: false, user: null });\r\n\t\t}\r\n\t\treturn response;\r\n\t};\r\n\r\n\tconst fetchLoggedInUser = async () => {\r\n\t\tconst response = await axiosInstance.get('/Users/me');\r\n\t\treturn response.data;\r\n\t};\r\n\r\n\tconst checkAuthentication = async () => {\r\n\t\tconst token = localStorage.getItem('token');\r\n\t\tif (!token) return false;\r\n\t\t// Optionally, you can add a token validation logic here\r\n\t\treturn true;\r\n\t};\r\n\r\n\tconst clearAuthData = () => {\r\n\t\tlocalStorage.removeItem('token');\r\n\t\tlocalStorage.removeItem('refreshToken');\r\n\t\tconst cookies = document.cookie.split(\"; \");\r\n\t\tfor (let cookie of cookies) {\r\n\t\t\tconst eqPos = cookie.indexOf(\"=\");\r\n\t\t\tconst name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\r\n\t\t\tdocument.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<AuthContext.Provider value={{ auth, login, logout, fetchLoggedInUser, checkAuthentication }}>\r\n\t\t\t{children}\r\n\t\t</AuthContext.Provider>\r\n\t);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}