{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\pages\\\\Signup.js\",\n  _s = $RefreshSig$();\n// //Signup.js\n\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\n// import '../utils/ReactToastifyCustom.css';\n// import '../utils/style/animations.css';\n// import '../utils/loading.css';\n\n// function Signup() {\n//     const [name, setName] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [confirmPassword, setConfirmPassword] = useState('');\n//     const [loading, setLoading] = useState(false);\n//     const [fadeIn, setFadeIn] = useState(true);\n//     const [fadeOut, setFadeOut] = useState(false);\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         const timeoutId = setTimeout(() => {\n//             setFadeIn(false);\n//         }, 500);\n//         return () => clearTimeout(timeoutId);\n//     }, []);\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n\n//         if (password !== confirmPassword) {\n//             handleError('Passwords do not match');\n//             return;\n//         }\n\n//         setLoading(true);\n//         setFadeOut(false);\n\n//         setTimeout(async () => {\n//             setFadeOut(true);\n//             setTimeout(async () => {\n//                 try {\n//                     const response = await fetch(\"http://localhost:8080/auth/signup\", {\n//                         method: 'POST',\n//                         headers: {\n//                             'Content-Type': 'application/json',\n//                         },\n//                         body: JSON.stringify({ name, email, password }),\n//                     });\n//                     const result = await response.json();\n//                     if (response.ok) {\n//                         handleSuccess('Signup successful! Redirecting...');\n//                         setTimeout(() => navigate('/login'), 500);\n//                     } else {\n//                         handleError(result.message || 'An error occurred during signup. Please try again.');\n//                     }\n//                 } catch (err) {\n//                     handleError('Network error. Please check your connection and try again.');\n//                 } finally {\n//                     setLoading(false);\n//                 }\n//             }, 250);\n//         }, 1000);\n//     };\n\n//     return (\n//         <div className={`signup-container container ${fadeIn ? 'fade-in' : ''}`}>\n//             <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\n//             <h1>Sign up</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <div className='form-group'>\n//                     <input\n//                         type='text'\n//                         id='name'\n//                         placeholder=''\n//                         value={name}\n//                         onChange={(e) => setName(e.target.value)}\n//                         required\n//                     />\n//                     <label htmlFor='name' className='form-label'>Name</label>\n//                 </div>\n//                 <div className='form-group'>\n//                     <input\n//                         type='email'\n//                         id='email'\n//                         placeholder=''\n//                         value={email}\n//                         onChange={(e) => setEmail(e.target.value)}\n//                         required\n//                     />\n//                     <label htmlFor='email' className='form-label'>Email</label>\n//                 </div>\n\n//                 <div className='form-group-container'>\n//                     <div className='form-group'>\n//                         <input\n//                             type='password'\n//                             id='password'\n//                             placeholder=''\n//                             value={password}\n//                             onChange={(e) => setPassword(e.target.value)}\n//                             required\n//                         />\n//                         <label htmlFor='password' className='form-label'>Password</label>\n//                     </div>\n\n//                     <div className='form-group'>\n//                         <input\n//                             type='password'\n//                             id='confirmPassword'\n//                             placeholder=''\n//                             value={confirmPassword}\n//                             onChange={(e) => setConfirmPassword(e.target.value)}\n//                             required\n//                         />\n//                         <label htmlFor='confirmPassword' className='form-label'>Confirm Password</label>\n//                     </div>\n//                 </div>\n\n//                 <button className='signup-button' type='submit'>Sign up</button>\n//                 <span>Already have an account? <Link to=\"/login\" className='pages-link'>Login</Link></span>\n//             </form>\n\n//             <span className=\"terms\">\n//                 By creating an account, you agree to our \n//                 <Link to=\"/terms\" className='terms-pages-link'> Terms of Use</Link>, \n//                 <Link to=\"/privacy-policy\" className='terms-pages-link'> Privacy Policy</Link>.\n//             </span>\n\n//             <ToastContainer />\n//             {loading && (\n//                 <div className={`loading-overlay ${fadeOut ? 'hidden' : ''}`}>\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default Signup;\n\n// Signup.js\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\nimport '../utils/ReactToastifyCustom.css';\nimport '../utils/style/animations.css';\nimport '../utils/loading.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [fadeIn, setFadeIn] = useState(true);\n  const [fadeOut, setFadeOut] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setFadeIn(false);\n    }, 500);\n    return () => clearTimeout(timeoutId);\n  }, []);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      handleError('Passwords do not match');\n      return;\n    }\n    setLoading(true);\n    setFadeOut(false);\n    setTimeout(async () => {\n      setFadeOut(true);\n      setTimeout(async () => {\n        try {\n          const response = await fetch(\"http://localhost:8080/auth/signup\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              name,\n              email,\n              password\n            })\n          });\n          const result = await response.json();\n          if (response.ok) {\n            handleSuccess('Signup successful! Please verify your email.');\n            navigate('/verify-signup'); // Redirect to the verification page\n          } else {\n            handleError(result.message || 'An error occurred during signup. Please try again.');\n          }\n        } catch (err) {\n          handleError('Network error. Please check your connection and try again.');\n        } finally {\n          setLoading(false);\n        }\n      }, 250);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `signup-container container ${fadeIn ? 'fade-in' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `loading-overlay ${fadeOut ? 'hidden' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/apple-loading.gif\",\n        alt: \"Loading...\",\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 9\n  }, this);\n}\n_s(Signup, \"N+nzBi6Q8v0ERfjLkwRfWxtbJSQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","Link","handleSuccess","handleError","ToastContainer","jsxDEV","_jsxDEV","Signup","_s","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","loading","setLoading","fadeIn","setFadeIn","fadeOut","setFadeOut","navigate","useEffect","timeoutId","setTimeout","clearTimeout","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","ok","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/pages/Signup.js"],"sourcesContent":["// //Signup.js\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate, Link } from 'react-router-dom';\r\n// import { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\r\n// import '../utils/ReactToastifyCustom.css';\r\n// import '../utils/style/animations.css';\r\n// import '../utils/loading.css';\r\n\r\n// function Signup() {\r\n//     const [name, setName] = useState('');\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [confirmPassword, setConfirmPassword] = useState('');\r\n//     const [loading, setLoading] = useState(false);\r\n//     const [fadeIn, setFadeIn] = useState(true);\r\n//     const [fadeOut, setFadeOut] = useState(false);\r\n//     const navigate = useNavigate();\r\n\r\n//     useEffect(() => {\r\n//         const timeoutId = setTimeout(() => {\r\n//             setFadeIn(false);\r\n//         }, 500);\r\n//         return () => clearTimeout(timeoutId);\r\n//     }, []);\r\n\r\n//     const handleSubmit = async (event) => {\r\n//         event.preventDefault();\r\n\r\n//         if (password !== confirmPassword) {\r\n//             handleError('Passwords do not match');\r\n//             return;\r\n//         }\r\n\r\n\r\n//         setLoading(true);\r\n//         setFadeOut(false);\r\n\r\n//         setTimeout(async () => {\r\n//             setFadeOut(true);\r\n//             setTimeout(async () => {\r\n//                 try {\r\n//                     const response = await fetch(\"http://localhost:8080/auth/signup\", {\r\n//                         method: 'POST',\r\n//                         headers: {\r\n//                             'Content-Type': 'application/json',\r\n//                         },\r\n//                         body: JSON.stringify({ name, email, password }),\r\n//                     });\r\n//                     const result = await response.json();\r\n//                     if (response.ok) {\r\n//                         handleSuccess('Signup successful! Redirecting...');\r\n//                         setTimeout(() => navigate('/login'), 500);\r\n//                     } else {\r\n//                         handleError(result.message || 'An error occurred during signup. Please try again.');\r\n//                     }\r\n//                 } catch (err) {\r\n//                     handleError('Network error. Please check your connection and try again.');\r\n//                 } finally {\r\n//                     setLoading(false);\r\n//                 }\r\n//             }, 250);\r\n//         }, 1000);\r\n//     };\r\n\r\n//     return (\r\n//         <div className={`signup-container container ${fadeIn ? 'fade-in' : ''}`}>\r\n//             <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\r\n//             <h1>Sign up</h1>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className='form-group'>\r\n//                     <input\r\n//                         type='text'\r\n//                         id='name'\r\n//                         placeholder=''\r\n//                         value={name}\r\n//                         onChange={(e) => setName(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                     <label htmlFor='name' className='form-label'>Name</label>\r\n//                 </div>\r\n//                 <div className='form-group'>\r\n//                     <input\r\n//                         type='email'\r\n//                         id='email'\r\n//                         placeholder=''\r\n//                         value={email}\r\n//                         onChange={(e) => setEmail(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                     <label htmlFor='email' className='form-label'>Email</label>\r\n//                 </div>\r\n\r\n//                 <div className='form-group-container'>\r\n//                     <div className='form-group'>\r\n//                         <input\r\n//                             type='password'\r\n//                             id='password'\r\n//                             placeholder=''\r\n//                             value={password}\r\n//                             onChange={(e) => setPassword(e.target.value)}\r\n//                             required\r\n//                         />\r\n//                         <label htmlFor='password' className='form-label'>Password</label>\r\n//                     </div>\r\n\r\n//                     <div className='form-group'>\r\n//                         <input\r\n//                             type='password'\r\n//                             id='confirmPassword'\r\n//                             placeholder=''\r\n//                             value={confirmPassword}\r\n//                             onChange={(e) => setConfirmPassword(e.target.value)}\r\n//                             required\r\n//                         />\r\n//                         <label htmlFor='confirmPassword' className='form-label'>Confirm Password</label>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <button className='signup-button' type='submit'>Sign up</button>\r\n//                 <span>Already have an account? <Link to=\"/login\" className='pages-link'>Login</Link></span>\r\n//             </form>\r\n\r\n//             <span className=\"terms\">\r\n//                 By creating an account, you agree to our \r\n//                 <Link to=\"/terms\" className='terms-pages-link'> Terms of Use</Link>, \r\n//                 <Link to=\"/privacy-policy\" className='terms-pages-link'> Privacy Policy</Link>.\r\n//             </span>\r\n\r\n//             <ToastContainer />\r\n//             {loading && (\r\n//                 <div className={`loading-overlay ${fadeOut ? 'hidden' : ''}`}>\r\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Signup;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Signup.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\r\nimport '../utils/ReactToastifyCustom.css';\r\nimport '../utils/style/animations.css';\r\nimport '../utils/loading.css';\r\n\r\nfunction Signup() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [fadeIn, setFadeIn] = useState(true);\r\n    const [fadeOut, setFadeOut] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(() => {\r\n            setFadeIn(false);\r\n        }, 500);\r\n        return () => clearTimeout(timeoutId);\r\n    }, []);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (password !== confirmPassword) {\r\n            handleError('Passwords do not match');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setFadeOut(false);\r\n\r\n        setTimeout(async () => {\r\n            setFadeOut(true);\r\n            setTimeout(async () => {\r\n                try {\r\n                    const response = await fetch(\"http://localhost:8080/auth/signup\", {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: JSON.stringify({ name, email, password }),\r\n                    });\r\n                    const result = await response.json();\r\n                    if (response.ok) {\r\n                        handleSuccess('Signup successful! Please verify your email.');\r\n                        navigate('/verify-signup'); // Redirect to the verification page\r\n                    } else {\r\n                        handleError(result.message || 'An error occurred during signup. Please try again.');\r\n                    }\r\n                } catch (err) {\r\n                    handleError('Network error. Please check your connection and try again.');\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            }, 250);\r\n        }, 1000);\r\n    };\r\n\r\n    return (\r\n        <div className={`signup-container container ${fadeIn ? 'fade-in' : ''}`}>\r\n            {/* Form here */}\r\n            <ToastContainer />\r\n            {loading && (\r\n                <div className={`loading-overlay ${fadeOut ? 'hidden' : ''}`}>\r\n                    <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAUA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,SAASC,aAAa,EAAEC,WAAW,EAAEC,cAAc,QAAQ,wBAAwB;AACnF,OAAO,kCAAkC;AACzC,OAAO,+BAA+B;AACtC,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMwB,QAAQ,GAAGvB,WAAW,CAAC,CAAC;EAE9BwB,SAAS,CAAC,MAAM;IACZ,MAAMC,SAAS,GAAGC,UAAU,CAAC,MAAM;MAC/BN,SAAS,CAAC,KAAK,CAAC;IACpB,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAMO,YAAY,CAACF,SAAS,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAIjB,QAAQ,KAAKE,eAAe,EAAE;MAC9BZ,WAAW,CAAC,wBAAwB,CAAC;MACrC;IACJ;IAEAe,UAAU,CAAC,IAAI,CAAC;IAChBI,UAAU,CAAC,KAAK,CAAC;IAEjBI,UAAU,CAAC,YAAY;MACnBJ,UAAU,CAAC,IAAI,CAAC;MAChBI,UAAU,CAAC,YAAY;QACnB,IAAI;UACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;YAC9DC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACL,cAAc,EAAE;YACpB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAE5B,IAAI;cAAEE,KAAK;cAAEE;YAAS,CAAC;UAClD,CAAC,CAAC;UACF,MAAMyB,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;UACpC,IAAIR,QAAQ,CAACS,EAAE,EAAE;YACbtC,aAAa,CAAC,8CAA8C,CAAC;YAC7DqB,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC;UAChC,CAAC,MAAM;YACHpB,WAAW,CAACmC,MAAM,CAACG,OAAO,IAAI,oDAAoD,CAAC;UACvF;QACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;UACVvC,WAAW,CAAC,4DAA4D,CAAC;QAC7E,CAAC,SAAS;UACNe,UAAU,CAAC,KAAK,CAAC;QACrB;MACJ,CAAC,EAAE,GAAG,CAAC;IACX,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EAED,oBACIZ,OAAA;IAAKqC,SAAS,EAAE,8BAA8BxB,MAAM,GAAG,SAAS,GAAG,EAAE,EAAG;IAAAyB,QAAA,gBAEpEtC,OAAA,CAACF,cAAc;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjB/B,OAAO,iBACJX,OAAA;MAAKqC,SAAS,EAAE,mBAAmBtB,OAAO,GAAG,QAAQ,GAAG,EAAE,EAAG;MAAAuB,QAAA,eACzDtC,OAAA;QAAK2C,GAAG,EAAC,oBAAoB;QAACC,GAAG,EAAC,YAAY;QAACP,SAAS,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACxC,EAAA,CAlEQD,MAAM;EAAA,QAQMP,WAAW;AAAA;AAAAmD,EAAA,GARvB5C,MAAM;AAoEf,eAAeA,MAAM;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}