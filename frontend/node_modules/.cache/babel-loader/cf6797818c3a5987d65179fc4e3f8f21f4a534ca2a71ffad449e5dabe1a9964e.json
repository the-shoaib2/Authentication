{"ast":null,"code":"// // frontend/src/pages/Signup.jsx\n\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import {\n//   handleSuccess,\n//   handleError,\n//   ToastContainer,\n// } from \"../utils/ReactToastify\";\n// import \"../utils/ReactToastifyCustom.css\";\n// import \"../utils/style/animations.css\";\n// import \"../utils/loading.css\";\n\n// function Signup() {\n//   const [formData, setFormData] = useState({\n//     firstName: \"\",\n//     lastName: \"\",\n//     email: \"\",\n//     password: \"\",\n//     confirmPassword: \"\",\n//     phone: \"\",\n//     dob: {\n//       day: \"\",\n//       month: \"\",\n//       year: \"\",\n//     },\n//     gender: \"\",\n//   });\n//   const [loading, setLoading] = useState(false);\n//   const [fadeIn, setFadeIn] = useState(true);\n//   const [fadeOut, setFadeOut] = useState(false);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const timeoutId = setTimeout(() => {\n//       setFadeIn(false);\n//     }, 500);\n//     return () => clearTimeout(timeoutId);\n//   }, []);\n\n//   const handleChange = (e) => {\n//     const { id, value } = e.target;\n//     setFormData((prevState) => ({\n//       ...prevState,\n//       [id]: value,\n//     }));\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     if (formData.password !== formData.confirmPassword) {\n//       handleError(\"Passwords do not match\");\n//       return;\n//     }\n\n//     setLoading(true);\n//     setFadeOut(false);\n\n//     setTimeout(async () => {\n//       setFadeOut(true);\n//       setTimeout(async () => {\n//         try {\n//           const response = await fetch(\"http://localhost:8080/auth/signup\", {\n//             method: \"POST\",\n//             headers: {\n//               \"Content-Type\": \"application/json\",\n//             },\n//             body: JSON.stringify({\n//               firstName: formData.firstName,\n//               lastName: formData.lastName,\n//               email: formData.email,\n//               password: formData.password,\n//               confirmPassword: formData.confirmPassword,\n//               phone: formData.phone,\n//               dob: formData.dob,\n//               gender: formData.gender,\n//             }),\n//           });\n\n//           const result = await response.json();\n//           if (response.ok) {\n//             // Instead of setting tokens and navigating to home, redirect to verify code page\n//             handleSuccess(\"Signup successful! Please verify your email.\");\n//             setTimeout(() => navigate('/verify-email', { state: { token: result.verificationToken } }), 500);\n//           } else {\n//             if (result.errors) {\n//               const errorMessages = result.errors\n//                 .map((err) => `${err.field}: ${err.message}`)\n//                 .join(\", \");\n//               handleError(errorMessages);\n//             } else {\n//               handleError(result.message);\n//             }\n//           }\n//         } catch (err) {\n//           handleError(\"Network error. Please check your connection and try again.\");\n//         } finally {\n//           setLoading(false);\n//         }\n//       }, 250);\n//     }, 1000);\n//   };\n\n//   return (\n//     <div className={`signup-container container ${fadeIn ? \"fade-in\" : \"\"}`}>\n//       <img src=\"/app-icon.ico\" alt=\"App Icon\" className=\"app-icon\" />\n//       <h1>Sign up</h1>\n//       <form onSubmit={handleSubmit}>\n//         {/* Form fields and labels */}\n//         <div className=\"form-group-container\">\n//           <div className=\"singup-form-group form-group\">\n//             <input\n//               type=\"text\"\n//               id=\"firstName\"\n//               placeholder=\"\"\n//               value={formData.firstName}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label htmlFor=\"firstName\" className=\"form-label\">\n//               First Name\n//             </label>\n//           </div>\n//           <div className=\"singup-form-group form-group\">\n//             <input\n//               type=\"text\"\n//               id=\"lastName\"\n//               placeholder=\"\"\n//               value={formData.lastName}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label htmlFor=\"lastName\" className=\"form-label\">\n//               Last Name\n//             </label>\n//           </div>\n//         </div>\n\n//         <div className=\"singup-form-group form-group\">\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             placeholder=\"\"\n//             value={formData.email}\n//             onChange={handleChange}\n//             required\n//           />\n//           <label htmlFor=\"email\" className=\"form-label\">\n//             Email\n//           </label>\n//         </div>\n\n//         <div className=\"form-group-container\">\n//           <div className=\"form-group\">\n//             <input\n//               className=\"phone-input\"\n//               type=\"tel\"\n//               id=\"phone\"\n//               placeholder=\"\"\n//               value={formData.phone}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label htmlFor=\"phone\" className=\"form-label\">\n//               Phone Number\n//             </label>\n//           </div>\n//           <div className=\"form-group\">\n//             <select\n//               id=\"gender\"\n//               value={formData.gender}\n//               onChange={handleChange}\n//               required\n//             >\n//               <option value=\"\" disabled>\n//                 Select Gender\n//               </option>\n//               <option value=\"male\">Male</option>\n//               <option value=\"female\">Female</option>\n//               <option value=\"other\">Other</option>\n//             </select>\n//           </div>\n//         </div>\n\n//         <div className=\"form-group-container\">\n//           <div className=\"form-group\">\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               placeholder=\"\"\n//               value={formData.password}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label htmlFor=\"password\" className=\"form-label\">\n//               Password\n//             </label>\n//           </div>\n//           <div className=\"form-group\">\n//             <input\n//               type=\"password\"\n//               id=\"confirmPassword\"\n//               placeholder=\"\"\n//               value={formData.confirmPassword}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label htmlFor=\"confirmPassword\" className=\"form-label\">\n//               Confirm Password\n//             </label>\n//           </div>\n//         </div>\n\n//         <div className=\"form-group-container dob\">\n//           <div className=\"form-group\">\n//             <select\n//               id=\"dobDay\"\n//               value={formData.dob.day}\n//               onChange={(e) =>\n//                 setFormData((prevState) => ({\n//                   ...prevState,\n//                   dob: { ...prevState.dob, day: e.target.value },\n//                 }))\n//               }\n//               required\n//             >\n//               <option value=\"\" disabled>\n//                 Day\n//               </option>\n//               {Array.from({ length: 31 }, (_, i) => (\n//                 <option key={i + 1} value={i + 1}>\n//                   {i + 1}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n//           <div className=\"form-group\">\n//             <select\n//               id=\"dobMonth\"\n//               value={formData.dob.month}\n//               onChange={(e) =>\n//                 setFormData((prevState) => ({\n//                   ...prevState,\n//                   dob: { ...prevState.dob, month: e.target.value },\n//                 }))\n//               }\n//               required\n//             >\n//               <option value=\"\" disabled>\n//                 Month\n//               </option>\n//               {Array.from({ length: 12 }, (_, i) => (\n//                 <option key={i + 1} value={i + 1}>\n//                   {new Date(0, i).toLocaleString(\"default\", { month: \"long\" })}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n//           <div className=\"form-group\">\n//             <select\n//               id=\"dobYear\"\n//               value={formData.dob.year}\n//               onChange={(e) =>\n//                 setFormData((prevState) => ({\n//                   ...prevState,\n//                   dob: { ...prevState.dob, year: e.target.value },\n//                 }))\n//               }\n//               required\n//             >\n//               <option value=\"\" disabled>\n//                 Year\n//               </option>\n//               {Array.from({ length: 100 }, (_, i) => (\n//                 <option key={2024 - i} value={2024 - i}>\n//                   {2024 - i}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n//         </div>\n\n//         <button className=\"signup-button\" type=\"submit\">\n//           Sign up\n//         </button>\n//         <span>\n//           Already have an account?{\" \"}\n//           <Link to=\"/login\" className=\"pages-link\">\n//             Login\n//           </Link>\n//         </span>\n//       </form>\n//       <span className=\"terms\">\n//         By creating an account, you agree to our\n//         <Link to=\"/terms\" className=\"terms-pages-link\">\n//           {\" \"}\n//           Terms of Use\n//         </Link>\n//         ,\n//         <Link to=\"/privacy-policy\" className=\"terms-pages-link\">\n//           {\" \"}\n//           Privacy Policy\n//         </Link>\n//         .\n//       </span>\n//       <ToastContainer />\n//       {loading && (\n//                 <div className={`loading-overlay ${fadeOut ? 'hidden' : ''}`}>\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\n//                 </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Signup;","map":{"version":3,"names":[],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/pages/Signup.jsx"],"sourcesContent":["// // frontend/src/pages/Signup.jsx\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { useNavigate, Link } from \"react-router-dom\";\r\n// import {\r\n//   handleSuccess,\r\n//   handleError,\r\n//   ToastContainer,\r\n// } from \"../utils/ReactToastify\";\r\n// import \"../utils/ReactToastifyCustom.css\";\r\n// import \"../utils/style/animations.css\";\r\n// import \"../utils/loading.css\";\r\n\r\n// function Signup() {\r\n//   const [formData, setFormData] = useState({\r\n//     firstName: \"\",\r\n//     lastName: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//     confirmPassword: \"\",\r\n//     phone: \"\",\r\n//     dob: {\r\n//       day: \"\",\r\n//       month: \"\",\r\n//       year: \"\",\r\n//     },\r\n//     gender: \"\",\r\n//   });\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [fadeIn, setFadeIn] = useState(true);\r\n//   const [fadeOut, setFadeOut] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const timeoutId = setTimeout(() => {\r\n//       setFadeIn(false);\r\n//     }, 500);\r\n//     return () => clearTimeout(timeoutId);\r\n//   }, []);\r\n\r\n//   const handleChange = (e) => {\r\n//     const { id, value } = e.target;\r\n//     setFormData((prevState) => ({\r\n//       ...prevState,\r\n//       [id]: value,\r\n//     }));\r\n//   };\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     if (formData.password !== formData.confirmPassword) {\r\n//       handleError(\"Passwords do not match\");\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     setFadeOut(false);\r\n\r\n//     setTimeout(async () => {\r\n//       setFadeOut(true);\r\n//       setTimeout(async () => {\r\n//         try {\r\n//           const response = await fetch(\"http://localhost:8080/auth/signup\", {\r\n//             method: \"POST\",\r\n//             headers: {\r\n//               \"Content-Type\": \"application/json\",\r\n//             },\r\n//             body: JSON.stringify({\r\n//               firstName: formData.firstName,\r\n//               lastName: formData.lastName,\r\n//               email: formData.email,\r\n//               password: formData.password,\r\n//               confirmPassword: formData.confirmPassword,\r\n//               phone: formData.phone,\r\n//               dob: formData.dob,\r\n//               gender: formData.gender,\r\n//             }),\r\n//           });\r\n\r\n//           const result = await response.json();\r\n//           if (response.ok) {\r\n//             // Instead of setting tokens and navigating to home, redirect to verify code page\r\n//             handleSuccess(\"Signup successful! Please verify your email.\");\r\n//             setTimeout(() => navigate('/verify-email', { state: { token: result.verificationToken } }), 500);\r\n//           } else {\r\n//             if (result.errors) {\r\n//               const errorMessages = result.errors\r\n//                 .map((err) => `${err.field}: ${err.message}`)\r\n//                 .join(\", \");\r\n//               handleError(errorMessages);\r\n//             } else {\r\n//               handleError(result.message);\r\n//             }\r\n//           }\r\n//         } catch (err) {\r\n//           handleError(\"Network error. Please check your connection and try again.\");\r\n//         } finally {\r\n//           setLoading(false);\r\n//         }\r\n//       }, 250);\r\n//     }, 1000);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={`signup-container container ${fadeIn ? \"fade-in\" : \"\"}`}>\r\n//       <img src=\"/app-icon.ico\" alt=\"App Icon\" className=\"app-icon\" />\r\n//       <h1>Sign up</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         {/* Form fields and labels */}\r\n//         <div className=\"form-group-container\">\r\n//           <div className=\"singup-form-group form-group\">\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"firstName\"\r\n//               placeholder=\"\"\r\n//               value={formData.firstName}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"firstName\" className=\"form-label\">\r\n//               First Name\r\n//             </label>\r\n//           </div>\r\n//           <div className=\"singup-form-group form-group\">\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"lastName\"\r\n//               placeholder=\"\"\r\n//               value={formData.lastName}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"lastName\" className=\"form-label\">\r\n//               Last Name\r\n//             </label>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"singup-form-group form-group\">\r\n//           <input\r\n//             type=\"email\"\r\n//             id=\"email\"\r\n//             placeholder=\"\"\r\n//             value={formData.email}\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n//           <label htmlFor=\"email\" className=\"form-label\">\r\n//             Email\r\n//           </label>\r\n//         </div>\r\n\r\n//         <div className=\"form-group-container\">\r\n//           <div className=\"form-group\">\r\n//             <input\r\n//               className=\"phone-input\"\r\n//               type=\"tel\"\r\n//               id=\"phone\"\r\n//               placeholder=\"\"\r\n//               value={formData.phone}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"phone\" className=\"form-label\">\r\n//               Phone Number\r\n//             </label>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <select\r\n//               id=\"gender\"\r\n//               value={formData.gender}\r\n//               onChange={handleChange}\r\n//               required\r\n//             >\r\n//               <option value=\"\" disabled>\r\n//                 Select Gender\r\n//               </option>\r\n//               <option value=\"male\">Male</option>\r\n//               <option value=\"female\">Female</option>\r\n//               <option value=\"other\">Other</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"form-group-container\">\r\n//           <div className=\"form-group\">\r\n//             <input\r\n//               type=\"password\"\r\n//               id=\"password\"\r\n//               placeholder=\"\"\r\n//               value={formData.password}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"password\" className=\"form-label\">\r\n//               Password\r\n//             </label>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <input\r\n//               type=\"password\"\r\n//               id=\"confirmPassword\"\r\n//               placeholder=\"\"\r\n//               value={formData.confirmPassword}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"confirmPassword\" className=\"form-label\">\r\n//               Confirm Password\r\n//             </label>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"form-group-container dob\">\r\n//           <div className=\"form-group\">\r\n//             <select\r\n//               id=\"dobDay\"\r\n//               value={formData.dob.day}\r\n//               onChange={(e) =>\r\n//                 setFormData((prevState) => ({\r\n//                   ...prevState,\r\n//                   dob: { ...prevState.dob, day: e.target.value },\r\n//                 }))\r\n//               }\r\n//               required\r\n//             >\r\n//               <option value=\"\" disabled>\r\n//                 Day\r\n//               </option>\r\n//               {Array.from({ length: 31 }, (_, i) => (\r\n//                 <option key={i + 1} value={i + 1}>\r\n//                   {i + 1}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <select\r\n//               id=\"dobMonth\"\r\n//               value={formData.dob.month}\r\n//               onChange={(e) =>\r\n//                 setFormData((prevState) => ({\r\n//                   ...prevState,\r\n//                   dob: { ...prevState.dob, month: e.target.value },\r\n//                 }))\r\n//               }\r\n//               required\r\n//             >\r\n//               <option value=\"\" disabled>\r\n//                 Month\r\n//               </option>\r\n//               {Array.from({ length: 12 }, (_, i) => (\r\n//                 <option key={i + 1} value={i + 1}>\r\n//                   {new Date(0, i).toLocaleString(\"default\", { month: \"long\" })}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <select\r\n//               id=\"dobYear\"\r\n//               value={formData.dob.year}\r\n//               onChange={(e) =>\r\n//                 setFormData((prevState) => ({\r\n//                   ...prevState,\r\n//                   dob: { ...prevState.dob, year: e.target.value },\r\n//                 }))\r\n//               }\r\n//               required\r\n//             >\r\n//               <option value=\"\" disabled>\r\n//                 Year\r\n//               </option>\r\n//               {Array.from({ length: 100 }, (_, i) => (\r\n//                 <option key={2024 - i} value={2024 - i}>\r\n//                   {2024 - i}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <button className=\"signup-button\" type=\"submit\">\r\n//           Sign up\r\n//         </button>\r\n//         <span>\r\n//           Already have an account?{\" \"}\r\n//           <Link to=\"/login\" className=\"pages-link\">\r\n//             Login\r\n//           </Link>\r\n//         </span>\r\n//       </form>\r\n//       <span className=\"terms\">\r\n//         By creating an account, you agree to our\r\n//         <Link to=\"/terms\" className=\"terms-pages-link\">\r\n//           {\" \"}\r\n//           Terms of Use\r\n//         </Link>\r\n//         ,\r\n//         <Link to=\"/privacy-policy\" className=\"terms-pages-link\">\r\n//           {\" \"}\r\n//           Privacy Policy\r\n//         </Link>\r\n//         .\r\n//       </span>\r\n//       <ToastContainer />\r\n//       {loading && (\r\n//                 <div className={`loading-overlay ${fadeOut ? 'hidden' : ''}`}>\r\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\r\n//                 </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Signup;\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}