{"ast":null,"code":"// api.js\nconst API_BASE_URL = \"http://localhost:8080\";\nexport const apiRequest = async (endpoint, method = 'GET', body = null, auth = true) => {\n  const token = localStorage.getItem('token');\n  const headers = {\n    'Content-Type': 'application/json',\n    ...(auth && {\n      'Authorization': `Bearer ${token}`\n    })\n  };\n  try {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      method,\n      headers,\n      body: body ? JSON.stringify(body) : null\n    });\n    if (response.status === 401) {\n      // Unauthorized\n      await refreshToken();\n      return apiRequest(endpoint, method, body, auth); // Retry after refreshing token\n    }\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'An error occurred');\n    }\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const refreshToken = async () => {\n  const refreshToken = localStorage.getItem('refreshToken');\n  try {\n    const response = await fetch(`${API_BASE_URL}/auth/refresh-token`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        refreshToken\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      localStorage.setItem('token', data.accessToken);\n      return data.accessToken;\n    } else {\n      throw new Error(data.message || 'Failed to refresh token');\n    }\n  } catch (error) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    window.location.href = '/login'; // Redirect to login if token refresh fails\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","apiRequest","endpoint","method","body","auth","token","localStorage","getItem","headers","response","fetch","JSON","stringify","status","refreshToken","data","json","ok","Error","message","error","setItem","accessToken","removeItem","window","location","href"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/utils/api.js"],"sourcesContent":["// api.js\r\nconst API_BASE_URL = \"http://localhost:8080\";\r\n\r\nexport const apiRequest = async (endpoint, method = 'GET', body = null, auth = true) => {\r\n    const token = localStorage.getItem('token');\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        ...(auth && { 'Authorization': `Bearer ${token}` })\r\n    };\r\n\r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n            method,\r\n            headers,\r\n            body: body ? JSON.stringify(body) : null,\r\n        });\r\n\r\n        if (response.status === 401) { // Unauthorized\r\n            await refreshToken();\r\n            return apiRequest(endpoint, method, body, auth); // Retry after refreshing token\r\n        }\r\n\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n            throw new Error(data.message || 'An error occurred');\r\n        }\r\n        return data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const refreshToken = async () => {\r\n    const refreshToken = localStorage.getItem('refreshToken');\r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/auth/refresh-token`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ refreshToken }),\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n            localStorage.setItem('token', data.accessToken);\r\n            return data.accessToken;\r\n        } else {\r\n            throw new Error(data.message || 'Failed to refresh token');\r\n        }\r\n    } catch (error) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('refreshToken');\r\n        window.location.href = '/login'; // Redirect to login if token refresh fails\r\n        throw error;\r\n    }\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,uBAAuB;AAE5C,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,MAAM,GAAG,KAAK,EAAEC,IAAI,GAAG,IAAI,EAAEC,IAAI,GAAG,IAAI,KAAK;EACpF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,OAAO,GAAG;IACZ,cAAc,EAAE,kBAAkB;IAClC,IAAIJ,IAAI,IAAI;MAAE,eAAe,EAAE,UAAUC,KAAK;IAAG,CAAC;EACtD,CAAC;EAED,IAAI;IACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,YAAY,GAAGE,QAAQ,EAAE,EAAE;MACvDC,MAAM;MACNM,OAAO;MACPL,IAAI,EAAEA,IAAI,GAAGQ,IAAI,CAACC,SAAS,CAACT,IAAI,CAAC,GAAG;IACxC,CAAC,CAAC;IAEF,IAAIM,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MAAE;MAC3B,MAAMC,YAAY,CAAC,CAAC;MACpB,OAAOd,UAAU,CAACC,QAAQ,EAAEC,MAAM,EAAEC,IAAI,EAAEC,IAAI,CAAC,CAAC,CAAC;IACrD;IAEA,MAAMW,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,mBAAmB,CAAC;IACxD;IACA,OAAOJ,IAAI;EACf,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMN,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMA,YAAY,GAAGR,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EACzD,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,YAAY,qBAAqB,EAAE;MAC/DG,MAAM,EAAE,MAAM;MACdM,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CL,IAAI,EAAEQ,IAAI,CAACC,SAAS,CAAC;QAAEE;MAAa,CAAC;IACzC,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,IAAIP,QAAQ,CAACQ,EAAE,EAAE;MACbX,YAAY,CAACe,OAAO,CAAC,OAAO,EAAEN,IAAI,CAACO,WAAW,CAAC;MAC/C,OAAOP,IAAI,CAACO,WAAW;IAC3B,CAAC,MAAM;MACH,MAAM,IAAIJ,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,yBAAyB,CAAC;IAC9D;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZd,YAAY,CAACiB,UAAU,CAAC,OAAO,CAAC;IAChCjB,YAAY,CAACiB,UAAU,CAAC,cAAc,CAAC;IACvCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;IACjC,MAAMN,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}