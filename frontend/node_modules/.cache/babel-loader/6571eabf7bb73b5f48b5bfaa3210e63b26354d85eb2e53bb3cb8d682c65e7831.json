{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\components\\\\ForgotPassword\\\\SentOtpForgotPassword.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { handleSuccess, handleError, ToastContainer } from '../../utils/ReactToastify';\nimport '../../utils/ReactToastifyCustom.css';\nimport '../../utils/style/SentOtpForgotPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OtpInput = ({\n  length = 6,\n  onOtpSubmit = () => {}\n}) => {\n  _s();\n  const [otp, setOtp] = useState(new Array(length).fill(\"\"));\n  const [isComplete, setIsComplete] = useState(false);\n  const inputRefs = useRef([]);\n  useEffect(() => {\n    if (inputRefs.current[0]) {\n      inputRefs.current[0].focus();\n    }\n  }, []);\n  const handleChange = (index, e) => {\n    const value = e.target.value;\n    if (isNaN(value) || value.length > 1) return;\n    const newOtp = [...otp];\n    newOtp[index] = value.slice(-1);\n    setOtp(newOtp);\n    const combinedOtp = newOtp.join(\"\");\n    setIsComplete(combinedOtp.length === length);\n    if (value && index < length - 1) {\n      inputRefs.current[index + 1].focus();\n    }\n  };\n  const handleClick = index => {\n    inputRefs.current[index].setSelectionRange(1, 1);\n    inputRefs.current[index].select();\n  };\n  const handleKeyDown = (index, e) => {\n    if (e.key === \"Backspace\") {\n      if (!otp[index] && index > 0) {\n        inputRefs.current[index - 1].focus();\n      }\n    } else if (e.key === \"ArrowRight\") {\n      if (index < length - 1) {\n        inputRefs.current[index + 1].focus();\n      }\n    } else if (e.key === \"ArrowLeft\") {\n      if (index > 0) {\n        inputRefs.current[index].select();\n        inputRefs.current[index - 1].focus();\n      }\n    } else if (e.key === \"Enter\") {\n      // Check if all fields are filled\n      const isComplete = otp.every(digit => digit !== \"\");\n      if (index < length - 1) {\n        // Move to the next input field\n        inputRefs.current[index + 1].focus();\n      }\n\n      // If on the last index and all fields are filled, submit the OTP\n      if (index === length - 1 && isComplete) {\n        onOtpSubmit(otp.join(\"\"));\n      }\n    }\n  };\n  const handlePaste = e => {\n    e.preventDefault();\n    const pasteData = e.clipboardData.getData('text').slice(0, length);\n    if (pasteData.length === length) {\n      setOtp(pasteData.split(''));\n      onOtpSubmit(pasteData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-input-wrapper\",\n    children: otp.map((value, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: input => inputRefs.current[index] = input,\n      value: value,\n      onChange: e => handleChange(index, e),\n      onKeyDown: e => handleKeyDown(index, e),\n      onPaste: e => handlePaste(e),\n      className: \"otpField\",\n      maxLength: 1,\n      onClick: () => handleClick(index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(OtpInput, \"r/kgZVQDmyzBKq+7358C0CfmM4w=\");\n_c = OtpInput;\nfunction SentOtpForgotPassword() {\n  _s2();\n  const [otp, setOtp] = useState('');\n  const [timer, setTimer] = useState(30);\n  const [isResendEnabled, setIsResendEnabled] = useState(false);\n  const [isComplete, setIsComplete] = useState(false);\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const countdown = timer > 0 ? setInterval(() => {\n      setTimer(prev => prev - 1);\n    }, 1000) : null;\n    if (timer === 0) {\n      setIsResendEnabled(true);\n    }\n    return () => {\n      if (countdown) clearInterval(countdown);\n    };\n  }, [timer]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8080/verification/forgot-password/verify-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: state.email,\n          otp\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        handleSuccess(result.message);\n        navigate('/forgot-password/reset-password', {\n          state: {\n            email: state.email\n          }\n        });\n      } else {\n        handleError(result.message);\n      }\n    } catch (err) {\n      handleError('Network error. Please check your connection and try again.');\n    }\n  };\n  const handleResendOtp = async () => {\n    try {\n      setIsResendEnabled(false);\n      setTimer(30); // Reset timer\n      // Add your resend OTP logic here\n    } catch (err) {\n      handleError('Failed to resend OTP. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"otp-title\",\n      children: \"Verify OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-timer\",\n      children: [\"Time Remaining: \", timer, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(OtpInput, {\n        length: 6,\n        onOtpSubmit: otp => {\n          setOtp(otp);\n          setIsComplete(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otp-buttons\",\n        children: timer === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"otp-btn resend\",\n          onClick: handleResendOtp,\n          children: \"Resend OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `otp-btn verify ${isComplete ? 'active' : ''}`,\n          disabled: !isComplete,\n          children: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n}\n_s2(SentOtpForgotPassword, \"HpnkmFkYIcU0wKdB/LHt21oHeE8=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c2 = SentOtpForgotPassword;\nexport default SentOtpForgotPassword;\nvar _c, _c2;\n$RefreshReg$(_c, \"OtpInput\");\n$RefreshReg$(_c2, \"SentOtpForgotPassword\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useLocation","handleSuccess","handleError","ToastContainer","jsxDEV","_jsxDEV","OtpInput","length","onOtpSubmit","_s","otp","setOtp","Array","fill","isComplete","setIsComplete","inputRefs","current","focus","handleChange","index","e","value","target","isNaN","newOtp","slice","combinedOtp","join","handleClick","setSelectionRange","select","handleKeyDown","key","every","digit","handlePaste","preventDefault","pasteData","clipboardData","getData","split","className","children","map","type","ref","input","onChange","onKeyDown","onPaste","maxLength","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","SentOtpForgotPassword","_s2","timer","setTimer","isResendEnabled","setIsResendEnabled","state","navigate","countdown","setInterval","prev","clearInterval","handleSubmit","event","response","fetch","method","headers","body","JSON","stringify","email","result","json","ok","message","err","handleResendOtp","onSubmit","disabled","_c2","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/components/ForgotPassword/SentOtpForgotPassword.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { handleSuccess, handleError, ToastContainer } from '../../utils/ReactToastify';\r\nimport '../../utils/ReactToastifyCustom.css';\r\nimport '../../utils/style/SentOtpForgotPassword.css';\r\n\r\nconst OtpInput = ({ length = 6, onOtpSubmit = () => { } }) => {\r\n    const [otp, setOtp] = useState(new Array(length).fill(\"\"));\r\n    const [isComplete, setIsComplete] = useState(false);\r\n    const inputRefs = useRef([]);\r\n\r\n    useEffect(() => {\r\n        if (inputRefs.current[0]) {\r\n            inputRefs.current[0].focus();\r\n        }\r\n    }, []);\r\n\r\n    const handleChange = (index, e) => {\r\n        const value = e.target.value;\r\n        if (isNaN(value) || value.length > 1) return;\r\n\r\n        const newOtp = [...otp];\r\n        newOtp[index] = value.slice(-1);\r\n        setOtp(newOtp);\r\n\r\n        const combinedOtp = newOtp.join(\"\");\r\n        setIsComplete(combinedOtp.length === length);\r\n\r\n        if (value && index < length - 1) {\r\n            inputRefs.current[index + 1].focus();\r\n        }\r\n    };\r\n\r\n    const handleClick = (index) => {\r\n        inputRefs.current[index].setSelectionRange(1, 1);\r\n        inputRefs.current[index].select();\r\n    };\r\n\r\n    const handleKeyDown = (index, e) => {\r\n        if (e.key === \"Backspace\") {\r\n            if (!otp[index] && index > 0) {\r\n                inputRefs.current[index - 1].focus();\r\n            }\r\n        } else if (e.key === \"ArrowRight\") {\r\n            if (index < length - 1) {\r\n                inputRefs.current[index + 1].focus();\r\n            }\r\n        } else if (e.key === \"ArrowLeft\") {\r\n            if (index > 0) {\r\n                inputRefs.current[index].select();\r\n\r\n                inputRefs.current[index - 1].focus();\r\n            }\r\n        } else if (e.key === \"Enter\") {\r\n            // Check if all fields are filled\r\n            const isComplete = otp.every((digit) => digit !== \"\");\r\n    \r\n            if (index < length - 1) {\r\n                // Move to the next input field\r\n                inputRefs.current[index + 1].focus();\r\n            } \r\n            \r\n            // If on the last index and all fields are filled, submit the OTP\r\n            if (index === length - 1 && isComplete) {\r\n                onOtpSubmit(otp.join(\"\"));\r\n            }\r\n        }\r\n    };\r\n    \r\n\r\n    const handlePaste = (e) => {\r\n        e.preventDefault();\r\n        const pasteData = e.clipboardData.getData('text').slice(0, length);\r\n        if (pasteData.length === length) {\r\n            setOtp(pasteData.split(''));\r\n            onOtpSubmit(pasteData);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"otp-input-wrapper\">\r\n            {otp.map((value, index) => (\r\n                <input\r\n                    key={index}\r\n                    type=\"text\"\r\n                    ref={(input) => (inputRefs.current[index] = input)}\r\n                    value={value}\r\n                    onChange={(e) => handleChange(index, e)}\r\n                    onKeyDown={(e) => handleKeyDown(index, e)}\r\n                    onPaste={(e) => handlePaste(e)}\r\n                    className=\"otpField\"\r\n                    maxLength={1}\r\n                    onClick={() => handleClick(index)}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction SentOtpForgotPassword() {\r\n    const [otp, setOtp] = useState('');\r\n    const [timer, setTimer] = useState(30);\r\n    const [isResendEnabled, setIsResendEnabled] = useState(false);\r\n    const [isComplete, setIsComplete] = useState(false);\r\n    const { state } = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const countdown = timer > 0 ? setInterval(() => {\r\n            setTimer((prev) => prev - 1);\r\n        }, 1000) : null;\r\n\r\n        if (timer === 0) {\r\n            setIsResendEnabled(true);\r\n        }\r\n\r\n        return () => {\r\n            if (countdown) clearInterval(countdown);\r\n        };\r\n    }, [timer]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await fetch('http://localhost:8080/verification/forgot-password/verify-otp', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email: state.email, otp }),\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            if (response.ok) {\r\n                handleSuccess(result.message);\r\n                navigate('/forgot-password/reset-password', { state: { email: state.email } });\r\n            } else {\r\n                handleError(result.message);\r\n            }\r\n        } catch (err) {\r\n            handleError('Network error. Please check your connection and try again.');\r\n        }\r\n    };\r\n\r\n    const handleResendOtp = async () => {\r\n        try {\r\n            setIsResendEnabled(false);\r\n            setTimer(30); // Reset timer\r\n            // Add your resend OTP logic here\r\n        } catch (err) {\r\n            handleError('Failed to resend OTP. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"otp-wrapper\">\r\n            <h1 className=\"otp-title\">Verify OTP</h1>\r\n            <div className=\"otp-timer\">\r\n                Time Remaining: {timer}s\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n                <OtpInput\r\n                    length={6}\r\n                    onOtpSubmit={(otp) => {\r\n                        setOtp(otp);\r\n                        setIsComplete(true);\r\n                    }}\r\n                />\r\n                <div className=\"otp-buttons\">\r\n                    {timer === 0 ? (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"otp-btn resend\"\r\n                            onClick={handleResendOtp}\r\n                        >\r\n                            Resend OTP\r\n                        </button>\r\n                    ) : (\r\n                        <button\r\n                            type=\"submit\"\r\n                            className={`otp-btn verify ${isComplete ? 'active' : ''}`}\r\n                            disabled={!isComplete}\r\n                        >\r\n                            Verify OTP\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SentOtpForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}