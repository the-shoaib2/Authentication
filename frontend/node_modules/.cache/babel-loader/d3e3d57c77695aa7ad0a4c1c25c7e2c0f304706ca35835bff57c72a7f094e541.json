{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\pages\\\\UserProfile.jsx\",\n  _s = $RefreshSig$();\n// // frontend/src/pages/UserProfile.js\n\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { handleError, handleSuccess } from '../utils/ReactToastify';\n// import { ToastContainer } from 'react-toastify';\n// import '../utils/ReactToastifyCustom.css';\n// import '../utils/style/profile.css';\n\n// function UserProfile() {\n//     const [user, setUser] = useState({});\n//     const [loading, setLoading] = useState(true);\n//     const [showLogoutModal, setShowLogoutModal] = useState(false);\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         fetchUserProfile();\n//     }, []);\n\n//     const fetchUserProfile = async () => {\n//         setLoading(true);\n//         try {\n//             const response = await fetch('http://localhost:8080/Users/me', {\n//                 headers: {\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`\n//                 }\n//             });\n//             const result = await response.json();\n//             if (response.ok) {\n//                 setUser(result);\n//             } else {\n//                 handleError(result.message || 'Failed to fetch user data. Please try again.');\n//                 navigate('/login');\n//             }\n//         } catch (err) {\n//             handleError('Network error. Please check your connection and try again.');\n//             navigate('/login');\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const handleLogout = async () => {\n//         try {\n//             const response = await fetch(\"http://localhost:8080/auth/logout\", {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`\n//                 },\n//                 body: JSON.stringify({ refreshToken: localStorage.getItem('refreshToken') })\n//             });\n//             if (response.ok) {\n//                 localStorage.removeItem('token');\n//                 localStorage.removeItem('refreshToken');\n//                 localStorage.removeItem('loggedInUser');\n//                 handleSuccess('Logged out successfully! Redirecting...');\n//                 setTimeout(() => navigate('/login'), 500);\n//             } else {\n//                 handleError('Failed to log out. Please try again.');\n//             }\n//         } catch (err) {\n//             handleError('Network error. Please check your connection and try again.');\n//         }\n//     };\n\n//     const openLogoutModal = () => {\n//         setShowLogoutModal(true);\n//     };\n\n//     const closeLogoutModal = () => {\n//         setShowLogoutModal(false);\n//     };\n\n//     return (\n//         <div className=\"profile-container\">\n//             {loading ? (\n//                 <div className=\"loading-overlay\">\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\n//                 </div>\n//             ) : (\n//                 <>\n//                     <button className=\"back-button icon-button\" onClick={() => navigate(-1)}>\n//                         <img src=\"/back-icon.png\" alt=\"Back\" />\n//                     </button>\n//                     <button className=\"edit-button icon-button\" onClick={() => navigate('/edit-profile')}>\n//                         <img src=\"/edit-icon.png\" alt=\"Edit\" />\n//                     </button>\n//                     <div className=\"user-info\">\n//                         <div className=\"avatar\">\n//                             <img src='/avater.png' className='profile-picture' alt='Profile' />\n//                         </div>\n//                         <h1 className=\"user-name\">{user.name}</h1>\n//                     </div>\n//                     <div className=\"details-container\">\n//                         <ul className=\"user-details\">\n//                             <li data-label=\"Name:\">{user.name}</li>\n//                             <li data-label=\"Email:\">{user.email}</li>\n//                             <li data-label=\"Username:\">{user.username}</li>\n//                             <li data-label=\"Joined:\">{new Date(user.createdAt).toLocaleDateString()}</li>\n//                         </ul>\n//                     </div>\n//                     <div className=\"details-container\">\n//                         <ul className=\"user-details\">\n//                             <li data-label=\"Name:\">{user.name}</li>\n//                             <li data-label=\"Email:\">{user.email}</li>\n//                             <li data-label=\"Username:\">{user.username}</li>\n//                             <li data-label=\"Joined:\">{new Date(user.createdAt).toLocaleDateString()}</li>\n//                         </ul>\n//                     </div>\n\n//                     <div className=\"details-container\">\n//                         <ul className=\"user-details\">\n//                             <li data-label=\"Name:\">{user.name}</li>\n//                             <li data-label=\"Email:\">{user.email}</li>\n//                             <li data-label=\"Username:\">{user.username}</li>\n//                             <li data-label=\"Joined:\">{new Date(user.createdAt).toLocaleDateString()}</li>\n//                         </ul>\n//                     </div>\n//                 </>\n//             )}\n//             <div className=\"actions\">\n//                 <button className=\"action-button\" onClick={openLogoutModal}>Logout</button>\n//             </div>\n//             {showLogoutModal && (\n//                 <div className=\"logout-modal\">\n//                     <div className=\"logout-modal-content\">\n//                         <p>Are you sure you want to logout?</p>\n//                         <div className=\"modal-actions\">\n//                             <button className=\"modal-cancel-button\" onClick={closeLogoutModal}>Cancel</button>\n//                             <button className=\"modal-logout-button\" onClick={handleLogout}>Logout</button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             )}\n//             <ToastContainer />\n//         </div>\n//     );\n// }\n\n// export default UserProfile;\n\n// frontend/src/pages/UserProfile.js\n\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { handleError, handleSuccess } from \"../utils/ReactToastify\";\n// import { ToastContainer } from \"react-toastify\";\n// import \"../utils/ReactToastifyCustom.css\";\n// import \"../utils/style/profile.css\";\n\n// function UserProfile() {\n//   const [user, setUser] = useState({});\n//   const [loading, setLoading] = useState(true);\n//   const [showLogoutModal, setShowLogoutModal] = useState(false);\n//   const [darkMode, setDarkMode] = useState(false);\n//   const [editProfile, setEditProfile] = useState(false);\n//   const [notifications, setNotifications] = useState({\n//     email: true,\n//     push: true,\n//     sms: false,\n//   });\n\n//   // State to manage the visibility of different sections\n//   const [showUserInfo, setShowUserInfo] = useState(false);\n//   const [showAccountSettings, setShowAccountSettings] = useState(false);\n//   const [showNotifications, setShowNotifications] = useState(false);\n//   const [showPrivacy, setShowPrivacy] = useState(false);\n//   const [showDataStorage, setShowDataStorage] = useState(false);\n//   const [showAppearance, setShowAppearance] = useState(false);\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     fetchUserProfile();\n//   }, []);\n\n//   const fetchUserProfile = async () => {\n//     setLoading(true);\n//     try {\n//       const response = await fetch(\"http://localhost:8080/Users/me\", {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n//         },\n//       });\n//       const result = await response.json();\n//       if (response.ok) {\n//         setUser(result);\n//       } else {\n//         handleError(\n//           result.message || \"Failed to fetch user data. Please try again.\"\n//         );\n//         navigate(\"/login\");\n//       }\n//     } catch (err) {\n//       handleError(\"Network error. Please check your connection and try again.\");\n//       navigate(\"/login\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleLogout = async () => {\n//     try {\n//       const response = await fetch(\"http://localhost:8080/auth/logout\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n//         },\n//         body: JSON.stringify({\n//           refreshToken: localStorage.getItem(\"refreshToken\"),\n//         }),\n//       });\n//       if (response.ok) {\n//         localStorage.removeItem(\"token\");\n//         localStorage.removeItem(\"refreshToken\");\n//         localStorage.removeItem(\"loggedInUser\");\n//         handleSuccess(\"Logged out successfully! Redirecting...\");\n//         setTimeout(() => navigate(\"/login\"), 500);\n//       } else {\n//         handleError(\"Failed to log out. Please try again.\");\n//       }\n//     } catch (err) {\n//       handleError(\"Network error. Please check your connection and try again.\");\n//     }\n//   };\n\n//   const openLogoutModal = () => {\n//     setShowLogoutModal(true);\n//   };\n\n//   const closeLogoutModal = () => {\n//     setShowLogoutModal(false);\n//   };\n\n//   const toggleDarkMode = () => {\n//     setDarkMode(!darkMode);\n//   };\n\n//   const handleNotificationChange = (type) => {\n//     setNotifications((prev) => ({\n//       ...prev,\n//       [type]: !prev[type],\n//     }));\n//   };\n\n//   return (\n//     <div className={`profile-container ${darkMode ? \"dark-mode\" : \"\"}`}>\n//       {loading ? (\n//         <div className=\"loading-overlay\">\n//           <img\n//             src=\"/apple-loading.gif\"\n//             alt=\"Loading...\"\n//             className=\"loading-spinner\"\n//           />\n//         </div>\n//       ) : (\n//         <>\n//           <button\n//             className=\"back-button icon-button\"\n//             onClick={() => navigate(-1)}\n//           >\n//             <img src=\"/back-icon.png\" alt=\"Back\" />\n//           </button>\n//           <button\n//             className=\"edit-button icon-button\"\n//             onClick={() => setEditProfile(true)}\n//           >\n//             <img src=\"/edit-icon.png\" alt=\"Edit\" />\n//           </button>\n//           <div className=\"user-info\">\n//             <div className=\"avatar\">\n//               <img\n//                 src=\"/avater.png\"\n//                 className=\"profile-picture\"\n//                 alt=\"Profile\"\n//               />\n//             </div>\n//             <h1 className=\"user-name\">{user.name}</h1>\n//           </div>\n\n//           {/* User Information */}\n//           <div className=\"details-container\">\n//             <button\n//               className=\"expand-button\"\n//               onClick={() => setShowUserInfo(!showUserInfo)}\n//             >\n//               {showUserInfo ? \"Hide\" : \"Show\"} User Information\n//             </button>\n//             {showUserInfo && (\n//               <ul className=\"user-details\">\n//                 <li data-label=\"Name:\">{user.name}</li>\n//                 <li data-label=\"Email:\">{user.email}</li>\n//                 <li data-label=\"Username:\">{user.username}</li>\n//                 <li data-label=\"Joined:\">\n//                   {new Date(user.createdAt).toLocaleDateString()}\n//                 </li>\n//                 <li data-label=\"Phone:\">{user.phone || \"N/A\"}</li>\n//                 <li data-label=\"Address:\">{user.address || \"N/A\"}</li>\n//               </ul>\n//             )}\n//           </div>\n\n//           {/* Account Settings */}\n//           <div className=\"details-container\">\n//             <button\n//               className=\"expand-button highlight\"\n//               onClick={() => setShowAccountSettings(!showAccountSettings)}\n//             >\n//               {showAccountSettings ? \"Hide\" : \"Show\"} Account Settings\n//             </button>\n\n//             {showAccountSettings && (\n//               <ul className=\"user-details\">\n//                 <li>Change Password</li>\n//                 <li>Update Email</li>\n//                 <li>Manage Two-Factor Authentication</li>\n//                 <li>Delete Account</li>\n//               </ul>\n//             )}\n//           </div>\n\n//           {/* Notifications */}\n//           <div className=\"details-container\">\n//             <button\n//               className=\"expand-button\"\n//               onClick={() => setShowNotifications(!showNotifications)}\n//             >\n//               {showNotifications ? \"Hide\" : \"Show\"} Notifications\n//             </button>\n//             {showNotifications && (\n//               <ul className=\"user-details\">\n//                 <li>\n//                   <label>\n//                     <input\n//                       type=\"checkbox\"\n//                       checked={notifications.email}\n//                       onChange={() => handleNotificationChange(\"email\")}\n//                     />\n//                     Email Notifications\n//                   </label>\n//                 </li>\n//                 <li>\n//                   <label>\n//                     <input\n//                       type=\"checkbox\"\n//                       checked={notifications.push}\n//                       onChange={() => handleNotificationChange(\"push\")}\n//                     />\n//                     Push Notifications\n//                   </label>\n//                 </li>\n//                 <li>\n//                   <label>\n//                     <input\n//                       type=\"checkbox\"\n//                       checked={notifications.sms}\n//                       onChange={() => handleNotificationChange(\"sms\")}\n//                     />\n//                     SMS Notifications\n//                   </label>\n//                 </li>\n//               </ul>\n//             )}\n//           </div>\n\n//           {/* Privacy */}\n//           <div className=\"details-container\">\n//             <button\n//               className=\"expand-button\"\n//               onClick={() => setShowPrivacy(!showPrivacy)}\n//             >\n//               {showPrivacy ? \"Hide\" : \"Show\"} Privacy\n//             </button>\n//             {showPrivacy && (\n//               <ul className=\"user-details\">\n//                 <li>Manage Blocked Users</li>\n//                 <li>Privacy Settings</li>\n//                 <li>Data Sharing Preferences</li>\n//                 <li>Two-Factor Authentication Status</li>\n//               </ul>\n//             )}\n//           </div>\n\n//           {/* Data & Storage */}\n//           <div className=\"details-container\">\n//             <button\n//               className=\"expand-button\"\n//               onClick={() => setShowDataStorage(!showDataStorage)}\n//             >\n//               {showDataStorage ? \"Hide\" : \"Show\"} Data & Storage\n//             </button>\n//             {showDataStorage && (\n//               <ul className=\"user-details\">\n//                 <li>Data Usage</li>\n//                 <li>Storage Space</li>\n//                 <li>Download Your Data</li>\n//                 <li>Backup Data</li>\n//               </ul>\n//             )}\n//           </div>\n\n//           {/* Appearance */}\n//           <div className=\"details-container\">\n//             <button\n//               className=\"expand-button\"\n//               onClick={() => setShowAppearance(!showAppearance)}\n//             >\n//               {showAppearance ? \"Hide\" : \"Show\"} Appearance\n//             </button>\n//             {showAppearance && (\n//               <ul className=\"user-details\">\n//                 <li>Theme: {darkMode ? \"Dark\" : \"Light\"}</li>\n//                 <li>\n//                   <button className=\"action-button\" onClick={toggleDarkMode}>\n//                     Toggle {darkMode ? \"Light\" : \"Dark\"} Mode\n//                   </button>\n//                 </li>\n//               </ul>\n//             )}\n//           </div>\n//         </>\n//       )}\n//       <div className=\"actions\">\n//         <button className=\"action-button\" onClick={openLogoutModal}>\n//           Logout\n//         </button>\n//       </div>\n//       {showLogoutModal && (\n//         <div className=\"logout-modal\">\n//           <div className=\"logout-modal-content\">\n//             <p>Are you sure you want to logout?</p>\n//             <div className=\"modal-actions\">\n//               <button\n//                 className=\"modal-cancel-button\"\n//                 onClick={closeLogoutModal}\n//               >\n//                 Cancel\n//               </button>\n//               <button className=\"modal-logout-button\" onClick={handleLogout}>\n//                 Logout\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//       <ToastContainer />\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { handleError, handleSuccess } from '../../utils/ReactToastify';\nimport { ToastContainer } from 'react-toastify';\nimport '../../utils/ReactToastifyCustom.css';\nimport '../../utils/style/profile.css';\nimport UserInfo from './UserInfo';\nimport AccountSettings from './AccountSettings';\nimport Notifications from './Notifications';\nimport Privacy from './Privacy';\nimport DataStorage from './DataStorage';\nimport Appearance from './Appearance';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserProfile() {\n  _s();\n  const [user, setUser] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [showLogoutModal, setShowLogoutModal] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [notifications, setNotifications] = useState({\n    email: true,\n    push: true,\n    sms: false\n  });\n\n  // State to manage the visibility of different sections\n  const [showUserInfo, setShowUserInfo] = useState(false);\n  const [showAccountSettings, setShowAccountSettings] = useState(false);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [showPrivacy, setShowPrivacy] = useState(false);\n  const [showDataStorage, setShowDataStorage] = useState(false);\n  const [showAppearance, setShowAppearance] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchUserProfile();\n  }, []);\n  const fetchUserProfile = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8080/Users/me', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setUser(result);\n      } else {\n        handleError(result.message || 'Failed to fetch user data. Please try again.');\n        navigate('/login');\n      }\n    } catch (err) {\n      handleError('Network error. Please check your connection and try again.');\n      navigate('/login');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/auth/logout', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          refreshToken: localStorage.getItem('refreshToken')\n        })\n      });\n      if (response.ok) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('refreshToken');\n        localStorage.removeItem('loggedInUser');\n        handleSuccess('Logged out successfully! Redirecting...');\n        setTimeout(() => navigate('/login'), 500);\n      } else {\n        handleError('Failed to log out. Please try again.');\n      }\n    } catch (err) {\n      handleError('Network error. Please check your connection and try again.');\n    }\n  };\n  const openLogoutModal = () => setShowLogoutModal(true);\n  const closeLogoutModal = () => setShowLogoutModal(false);\n  const toggleDarkMode = () => setDarkMode(!darkMode);\n  const handleNotificationChange = type => {\n    setNotifications(prev => ({\n      ...prev,\n      [type]: !prev[type]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `profile-container ${darkMode ? 'dark-mode' : ''}`,\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/apple-loading.gif\",\n        alt: \"Loading...\",\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button icon-button\",\n        onClick: () => navigate(-1),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/back-icon.png\",\n          alt: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-button icon-button\",\n        onClick: () => navigate('/edit-profile'),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/edit-icon.png\",\n          alt: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/avatar.png\",\n            alt: \"Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"username\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"email\",\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"logout-button\",\n            onClick: openLogoutModal,\n            children: \"Log Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sections-container\",\n        children: [/*#__PURE__*/_jsxDEV(UserInfo, {\n          user: user,\n          showUserInfo: showUserInfo,\n          toggleUserInfo: () => setShowUserInfo(!showUserInfo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AccountSettings, {\n          showAccountSettings: showAccountSettings,\n          toggleAccountSettings: () => setShowAccountSettings(!showAccountSettings)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Notifications, {\n          notifications: notifications,\n          handleNotificationChange: handleNotificationChange,\n          showNotifications: showNotifications,\n          toggleNotifications: () => setShowNotifications(!showNotifications)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Privacy, {\n          showPrivacy: showPrivacy,\n          togglePrivacy: () => setShowPrivacy(!showPrivacy)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DataStorage, {\n          showDataStorage: showDataStorage,\n          toggleDataStorage: () => setShowDataStorage(!showDataStorage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Appearance, {\n          darkMode: darkMode,\n          toggleDarkMode: toggleDarkMode,\n          showAppearance: showAppearance,\n          toggleAppearance: () => setShowAppearance(!showAppearance)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), showLogoutModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logout-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logout-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Confirm Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to log out?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"Yes, Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeLogoutModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 557,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProfile, \"Be1LeimLLAxPxS2kUYbw+SSi40U=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","handleError","handleSuccess","ToastContainer","UserInfo","AccountSettings","Notifications","Privacy","DataStorage","Appearance","jsxDEV","_jsxDEV","Fragment","_Fragment","UserProfile","_s","user","setUser","loading","setLoading","showLogoutModal","setShowLogoutModal","darkMode","setDarkMode","notifications","setNotifications","email","push","sms","showUserInfo","setShowUserInfo","showAccountSettings","setShowAccountSettings","showNotifications","setShowNotifications","showPrivacy","setShowPrivacy","showDataStorage","setShowDataStorage","showAppearance","setShowAppearance","navigate","fetchUserProfile","response","fetch","headers","localStorage","getItem","result","json","ok","message","err","handleLogout","method","body","JSON","stringify","refreshToken","removeItem","setTimeout","openLogoutModal","closeLogoutModal","toggleDarkMode","handleNotificationChange","type","prev","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","username","toggleUserInfo","toggleAccountSettings","toggleNotifications","togglePrivacy","toggleDataStorage","toggleAppearance","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/pages/UserProfile.jsx"],"sourcesContent":["// // frontend/src/pages/UserProfile.js\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { handleError, handleSuccess } from '../utils/ReactToastify';\r\n// import { ToastContainer } from 'react-toastify';\r\n// import '../utils/ReactToastifyCustom.css';\r\n// import '../utils/style/profile.css';\r\n\r\n// function UserProfile() {\r\n//     const [user, setUser] = useState({});\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [showLogoutModal, setShowLogoutModal] = useState(false);\r\n//     const navigate = useNavigate();\r\n\r\n//     useEffect(() => {\r\n//         fetchUserProfile();\r\n//     }, []);\r\n\r\n//     const fetchUserProfile = async () => {\r\n//         setLoading(true);\r\n//         try {\r\n//             const response = await fetch('http://localhost:8080/Users/me', {\r\n//                 headers: {\r\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n//                 }\r\n//             });\r\n//             const result = await response.json();\r\n//             if (response.ok) {\r\n//                 setUser(result);\r\n//             } else {\r\n//                 handleError(result.message || 'Failed to fetch user data. Please try again.');\r\n//                 navigate('/login');\r\n//             }\r\n//         } catch (err) {\r\n//             handleError('Network error. Please check your connection and try again.');\r\n//             navigate('/login');\r\n//         } finally {\r\n//             setLoading(false);\r\n//         }\r\n//     };\r\n\r\n//     const handleLogout = async () => {\r\n//         try {\r\n//             const response = await fetch(\"http://localhost:8080/auth/logout\", {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n//                 },\r\n//                 body: JSON.stringify({ refreshToken: localStorage.getItem('refreshToken') })\r\n//             });\r\n//             if (response.ok) {\r\n//                 localStorage.removeItem('token');\r\n//                 localStorage.removeItem('refreshToken');\r\n//                 localStorage.removeItem('loggedInUser');\r\n//                 handleSuccess('Logged out successfully! Redirecting...');\r\n//                 setTimeout(() => navigate('/login'), 500);\r\n//             } else {\r\n//                 handleError('Failed to log out. Please try again.');\r\n//             }\r\n//         } catch (err) {\r\n//             handleError('Network error. Please check your connection and try again.');\r\n//         }\r\n//     };\r\n\r\n//     const openLogoutModal = () => {\r\n//         setShowLogoutModal(true);\r\n//     };\r\n\r\n//     const closeLogoutModal = () => {\r\n//         setShowLogoutModal(false);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"profile-container\">\r\n//             {loading ? (\r\n//                 <div className=\"loading-overlay\">\r\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\r\n//                 </div>\r\n//             ) : (\r\n//                 <>\r\n//                     <button className=\"back-button icon-button\" onClick={() => navigate(-1)}>\r\n//                         <img src=\"/back-icon.png\" alt=\"Back\" />\r\n//                     </button>\r\n//                     <button className=\"edit-button icon-button\" onClick={() => navigate('/edit-profile')}>\r\n//                         <img src=\"/edit-icon.png\" alt=\"Edit\" />\r\n//                     </button>\r\n//                     <div className=\"user-info\">\r\n//                         <div className=\"avatar\">\r\n//                             <img src='/avater.png' className='profile-picture' alt='Profile' />\r\n//                         </div>\r\n//                         <h1 className=\"user-name\">{user.name}</h1>\r\n//                     </div>\r\n//                     <div className=\"details-container\">\r\n//                         <ul className=\"user-details\">\r\n//                             <li data-label=\"Name:\">{user.name}</li>\r\n//                             <li data-label=\"Email:\">{user.email}</li>\r\n//                             <li data-label=\"Username:\">{user.username}</li>\r\n//                             <li data-label=\"Joined:\">{new Date(user.createdAt).toLocaleDateString()}</li>\r\n//                         </ul>\r\n//                     </div>\r\n//                     <div className=\"details-container\">\r\n//                         <ul className=\"user-details\">\r\n//                             <li data-label=\"Name:\">{user.name}</li>\r\n//                             <li data-label=\"Email:\">{user.email}</li>\r\n//                             <li data-label=\"Username:\">{user.username}</li>\r\n//                             <li data-label=\"Joined:\">{new Date(user.createdAt).toLocaleDateString()}</li>\r\n//                         </ul>\r\n//                     </div>\r\n\r\n//                     <div className=\"details-container\">\r\n//                         <ul className=\"user-details\">\r\n//                             <li data-label=\"Name:\">{user.name}</li>\r\n//                             <li data-label=\"Email:\">{user.email}</li>\r\n//                             <li data-label=\"Username:\">{user.username}</li>\r\n//                             <li data-label=\"Joined:\">{new Date(user.createdAt).toLocaleDateString()}</li>\r\n//                         </ul>\r\n//                     </div>\r\n//                 </>\r\n//             )}\r\n//             <div className=\"actions\">\r\n//                 <button className=\"action-button\" onClick={openLogoutModal}>Logout</button>\r\n//             </div>\r\n//             {showLogoutModal && (\r\n//                 <div className=\"logout-modal\">\r\n//                     <div className=\"logout-modal-content\">\r\n//                         <p>Are you sure you want to logout?</p>\r\n//                         <div className=\"modal-actions\">\r\n//                             <button className=\"modal-cancel-button\" onClick={closeLogoutModal}>Cancel</button>\r\n//                             <button className=\"modal-logout-button\" onClick={handleLogout}>Logout</button>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             )}\r\n//             <ToastContainer />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default UserProfile;\r\n\r\n// frontend/src/pages/UserProfile.js\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { handleError, handleSuccess } from \"../utils/ReactToastify\";\r\n// import { ToastContainer } from \"react-toastify\";\r\n// import \"../utils/ReactToastifyCustom.css\";\r\n// import \"../utils/style/profile.css\";\r\n\r\n// function UserProfile() {\r\n//   const [user, setUser] = useState({});\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [showLogoutModal, setShowLogoutModal] = useState(false);\r\n//   const [darkMode, setDarkMode] = useState(false);\r\n//   const [editProfile, setEditProfile] = useState(false);\r\n//   const [notifications, setNotifications] = useState({\r\n//     email: true,\r\n//     push: true,\r\n//     sms: false,\r\n//   });\r\n\r\n//   // State to manage the visibility of different sections\r\n//   const [showUserInfo, setShowUserInfo] = useState(false);\r\n//   const [showAccountSettings, setShowAccountSettings] = useState(false);\r\n//   const [showNotifications, setShowNotifications] = useState(false);\r\n//   const [showPrivacy, setShowPrivacy] = useState(false);\r\n//   const [showDataStorage, setShowDataStorage] = useState(false);\r\n//   const [showAppearance, setShowAppearance] = useState(false);\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     fetchUserProfile();\r\n//   }, []);\r\n\r\n//   const fetchUserProfile = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8080/Users/me\", {\r\n//         headers: {\r\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n//         },\r\n//       });\r\n//       const result = await response.json();\r\n//       if (response.ok) {\r\n//         setUser(result);\r\n//       } else {\r\n//         handleError(\r\n//           result.message || \"Failed to fetch user data. Please try again.\"\r\n//         );\r\n//         navigate(\"/login\");\r\n//       }\r\n//     } catch (err) {\r\n//       handleError(\"Network error. Please check your connection and try again.\");\r\n//       navigate(\"/login\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleLogout = async () => {\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8080/auth/logout\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n//         },\r\n//         body: JSON.stringify({\r\n//           refreshToken: localStorage.getItem(\"refreshToken\"),\r\n//         }),\r\n//       });\r\n//       if (response.ok) {\r\n//         localStorage.removeItem(\"token\");\r\n//         localStorage.removeItem(\"refreshToken\");\r\n//         localStorage.removeItem(\"loggedInUser\");\r\n//         handleSuccess(\"Logged out successfully! Redirecting...\");\r\n//         setTimeout(() => navigate(\"/login\"), 500);\r\n//       } else {\r\n//         handleError(\"Failed to log out. Please try again.\");\r\n//       }\r\n//     } catch (err) {\r\n//       handleError(\"Network error. Please check your connection and try again.\");\r\n//     }\r\n//   };\r\n\r\n//   const openLogoutModal = () => {\r\n//     setShowLogoutModal(true);\r\n//   };\r\n\r\n//   const closeLogoutModal = () => {\r\n//     setShowLogoutModal(false);\r\n//   };\r\n\r\n//   const toggleDarkMode = () => {\r\n//     setDarkMode(!darkMode);\r\n//   };\r\n\r\n//   const handleNotificationChange = (type) => {\r\n//     setNotifications((prev) => ({\r\n//       ...prev,\r\n//       [type]: !prev[type],\r\n//     }));\r\n//   };\r\n\r\n//   return (\r\n//     <div className={`profile-container ${darkMode ? \"dark-mode\" : \"\"}`}>\r\n//       {loading ? (\r\n//         <div className=\"loading-overlay\">\r\n//           <img\r\n//             src=\"/apple-loading.gif\"\r\n//             alt=\"Loading...\"\r\n//             className=\"loading-spinner\"\r\n//           />\r\n//         </div>\r\n//       ) : (\r\n//         <>\r\n//           <button\r\n//             className=\"back-button icon-button\"\r\n//             onClick={() => navigate(-1)}\r\n//           >\r\n//             <img src=\"/back-icon.png\" alt=\"Back\" />\r\n//           </button>\r\n//           <button\r\n//             className=\"edit-button icon-button\"\r\n//             onClick={() => setEditProfile(true)}\r\n//           >\r\n//             <img src=\"/edit-icon.png\" alt=\"Edit\" />\r\n//           </button>\r\n//           <div className=\"user-info\">\r\n//             <div className=\"avatar\">\r\n//               <img\r\n//                 src=\"/avater.png\"\r\n//                 className=\"profile-picture\"\r\n//                 alt=\"Profile\"\r\n//               />\r\n//             </div>\r\n//             <h1 className=\"user-name\">{user.name}</h1>\r\n//           </div>\r\n\r\n//           {/* User Information */}\r\n//           <div className=\"details-container\">\r\n//             <button\r\n//               className=\"expand-button\"\r\n//               onClick={() => setShowUserInfo(!showUserInfo)}\r\n//             >\r\n//               {showUserInfo ? \"Hide\" : \"Show\"} User Information\r\n//             </button>\r\n//             {showUserInfo && (\r\n//               <ul className=\"user-details\">\r\n//                 <li data-label=\"Name:\">{user.name}</li>\r\n//                 <li data-label=\"Email:\">{user.email}</li>\r\n//                 <li data-label=\"Username:\">{user.username}</li>\r\n//                 <li data-label=\"Joined:\">\r\n//                   {new Date(user.createdAt).toLocaleDateString()}\r\n//                 </li>\r\n//                 <li data-label=\"Phone:\">{user.phone || \"N/A\"}</li>\r\n//                 <li data-label=\"Address:\">{user.address || \"N/A\"}</li>\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n\r\n//           {/* Account Settings */}\r\n//           <div className=\"details-container\">\r\n//             <button\r\n//               className=\"expand-button highlight\"\r\n//               onClick={() => setShowAccountSettings(!showAccountSettings)}\r\n//             >\r\n//               {showAccountSettings ? \"Hide\" : \"Show\"} Account Settings\r\n//             </button>\r\n\r\n//             {showAccountSettings && (\r\n//               <ul className=\"user-details\">\r\n//                 <li>Change Password</li>\r\n//                 <li>Update Email</li>\r\n//                 <li>Manage Two-Factor Authentication</li>\r\n//                 <li>Delete Account</li>\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n\r\n//           {/* Notifications */}\r\n//           <div className=\"details-container\">\r\n//             <button\r\n//               className=\"expand-button\"\r\n//               onClick={() => setShowNotifications(!showNotifications)}\r\n//             >\r\n//               {showNotifications ? \"Hide\" : \"Show\"} Notifications\r\n//             </button>\r\n//             {showNotifications && (\r\n//               <ul className=\"user-details\">\r\n//                 <li>\r\n//                   <label>\r\n//                     <input\r\n//                       type=\"checkbox\"\r\n//                       checked={notifications.email}\r\n//                       onChange={() => handleNotificationChange(\"email\")}\r\n//                     />\r\n//                     Email Notifications\r\n//                   </label>\r\n//                 </li>\r\n//                 <li>\r\n//                   <label>\r\n//                     <input\r\n//                       type=\"checkbox\"\r\n//                       checked={notifications.push}\r\n//                       onChange={() => handleNotificationChange(\"push\")}\r\n//                     />\r\n//                     Push Notifications\r\n//                   </label>\r\n//                 </li>\r\n//                 <li>\r\n//                   <label>\r\n//                     <input\r\n//                       type=\"checkbox\"\r\n//                       checked={notifications.sms}\r\n//                       onChange={() => handleNotificationChange(\"sms\")}\r\n//                     />\r\n//                     SMS Notifications\r\n//                   </label>\r\n//                 </li>\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n\r\n//           {/* Privacy */}\r\n//           <div className=\"details-container\">\r\n//             <button\r\n//               className=\"expand-button\"\r\n//               onClick={() => setShowPrivacy(!showPrivacy)}\r\n//             >\r\n//               {showPrivacy ? \"Hide\" : \"Show\"} Privacy\r\n//             </button>\r\n//             {showPrivacy && (\r\n//               <ul className=\"user-details\">\r\n//                 <li>Manage Blocked Users</li>\r\n//                 <li>Privacy Settings</li>\r\n//                 <li>Data Sharing Preferences</li>\r\n//                 <li>Two-Factor Authentication Status</li>\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n\r\n//           {/* Data & Storage */}\r\n//           <div className=\"details-container\">\r\n//             <button\r\n//               className=\"expand-button\"\r\n//               onClick={() => setShowDataStorage(!showDataStorage)}\r\n//             >\r\n//               {showDataStorage ? \"Hide\" : \"Show\"} Data & Storage\r\n//             </button>\r\n//             {showDataStorage && (\r\n//               <ul className=\"user-details\">\r\n//                 <li>Data Usage</li>\r\n//                 <li>Storage Space</li>\r\n//                 <li>Download Your Data</li>\r\n//                 <li>Backup Data</li>\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n\r\n//           {/* Appearance */}\r\n//           <div className=\"details-container\">\r\n//             <button\r\n//               className=\"expand-button\"\r\n//               onClick={() => setShowAppearance(!showAppearance)}\r\n//             >\r\n//               {showAppearance ? \"Hide\" : \"Show\"} Appearance\r\n//             </button>\r\n//             {showAppearance && (\r\n//               <ul className=\"user-details\">\r\n//                 <li>Theme: {darkMode ? \"Dark\" : \"Light\"}</li>\r\n//                 <li>\r\n//                   <button className=\"action-button\" onClick={toggleDarkMode}>\r\n//                     Toggle {darkMode ? \"Light\" : \"Dark\"} Mode\r\n//                   </button>\r\n//                 </li>\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n//         </>\r\n//       )}\r\n//       <div className=\"actions\">\r\n//         <button className=\"action-button\" onClick={openLogoutModal}>\r\n//           Logout\r\n//         </button>\r\n//       </div>\r\n//       {showLogoutModal && (\r\n//         <div className=\"logout-modal\">\r\n//           <div className=\"logout-modal-content\">\r\n//             <p>Are you sure you want to logout?</p>\r\n//             <div className=\"modal-actions\">\r\n//               <button\r\n//                 className=\"modal-cancel-button\"\r\n//                 onClick={closeLogoutModal}\r\n//               >\r\n//                 Cancel\r\n//               </button>\r\n//               <button className=\"modal-logout-button\" onClick={handleLogout}>\r\n//                 Logout\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//       <ToastContainer />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { handleError, handleSuccess } from '../../utils/ReactToastify';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport '../../utils/ReactToastifyCustom.css';\r\nimport '../../utils/style/profile.css';\r\nimport UserInfo from './UserInfo';\r\nimport AccountSettings from './AccountSettings';\r\nimport Notifications from './Notifications';\r\nimport Privacy from './Privacy';\r\nimport DataStorage from './DataStorage';\r\nimport Appearance from './Appearance';\r\n\r\n\r\nfunction UserProfile() {\r\n  const [user, setUser] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [showLogoutModal, setShowLogoutModal] = useState(false);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [notifications, setNotifications] = useState({\r\n    email: true,\r\n    push: true,\r\n    sms: false,\r\n  });\r\n\r\n  // State to manage the visibility of different sections\r\n  const [showUserInfo, setShowUserInfo] = useState(false);\r\n  const [showAccountSettings, setShowAccountSettings] = useState(false);\r\n  const [showNotifications, setShowNotifications] = useState(false);\r\n  const [showPrivacy, setShowPrivacy] = useState(false);\r\n  const [showDataStorage, setShowDataStorage] = useState(false);\r\n  const [showAppearance, setShowAppearance] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchUserProfile();\r\n  }, []);\r\n\r\n  const fetchUserProfile = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('http://localhost:8080/Users/me', {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        setUser(result);\r\n      } else {\r\n        handleError(result.message || 'Failed to fetch user data. Please try again.');\r\n        navigate('/login');\r\n      }\r\n    } catch (err) {\r\n      handleError('Network error. Please check your connection and try again.');\r\n      navigate('/login');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/auth/logout', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n        body: JSON.stringify({\r\n          refreshToken: localStorage.getItem('refreshToken'),\r\n        }),\r\n      });\r\n      if (response.ok) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('refreshToken');\r\n        localStorage.removeItem('loggedInUser');\r\n        handleSuccess('Logged out successfully! Redirecting...');\r\n        setTimeout(() => navigate('/login'), 500);\r\n      } else {\r\n        handleError('Failed to log out. Please try again.');\r\n      }\r\n    } catch (err) {\r\n      handleError('Network error. Please check your connection and try again.');\r\n    }\r\n  };\r\n\r\n  const openLogoutModal = () => setShowLogoutModal(true);\r\n  const closeLogoutModal = () => setShowLogoutModal(false);\r\n\r\n  const toggleDarkMode = () => setDarkMode(!darkMode);\r\n\r\n  const handleNotificationChange = (type) => {\r\n    setNotifications((prev) => ({\r\n      ...prev,\r\n      [type]: !prev[type],\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className={`profile-container ${darkMode ? 'dark-mode' : ''}`}>\r\n      {loading ? (\r\n        <div className=\"loading-overlay\">\r\n          <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <button className=\"back-button icon-button\" onClick={() => navigate(-1)}>\r\n            <img src=\"/back-icon.png\" alt=\"Back\" />\r\n          </button>\r\n          <button className=\"edit-button icon-button\" onClick={() => navigate('/edit-profile')}>\r\n            <img src=\"/edit-icon.png\" alt=\"Edit\" />\r\n          </button>\r\n          <div className=\"user-info\">\r\n            <div className=\"user-avatar\">\r\n              <img src=\"/avatar.png\" alt=\"Avatar\" />\r\n            </div>\r\n            <div className=\"user-details\">\r\n              <h1 className=\"username\">{user.username}</h1>\r\n              <p className=\"email\">{user.email}</p>\r\n              <button className=\"logout-button\" onClick={openLogoutModal}>\r\n                Log Out\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"sections-container\">\r\n            <UserInfo user={user} showUserInfo={showUserInfo} toggleUserInfo={() => setShowUserInfo(!showUserInfo)} />\r\n            <AccountSettings showAccountSettings={showAccountSettings} toggleAccountSettings={() => setShowAccountSettings(!showAccountSettings)} />\r\n            <Notifications notifications={notifications} handleNotificationChange={handleNotificationChange} showNotifications={showNotifications} toggleNotifications={() => setShowNotifications(!showNotifications)} />\r\n            <Privacy showPrivacy={showPrivacy} togglePrivacy={() => setShowPrivacy(!showPrivacy)} />\r\n            <DataStorage showDataStorage={showDataStorage} toggleDataStorage={() => setShowDataStorage(!showDataStorage)} />\r\n            <Appearance darkMode={darkMode} toggleDarkMode={toggleDarkMode} showAppearance={showAppearance} toggleAppearance={() => setShowAppearance(!showAppearance)} />\r\n          </div>\r\n        </>\r\n      )}\r\n      {showLogoutModal && (\r\n        <div className=\"logout-modal\">\r\n          <div className=\"logout-modal-content\">\r\n            <h2>Confirm Logout</h2>\r\n            <p>Are you sure you want to log out?</p>\r\n            <button onClick={handleLogout}>Yes, Log Out</button>\r\n            <button onClick={closeLogoutModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}