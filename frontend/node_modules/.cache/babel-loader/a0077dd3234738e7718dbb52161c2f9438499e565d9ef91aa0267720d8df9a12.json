{"ast":null,"code":"// import React, { useCallback, useEffect, useState, lazy, Suspense } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { handleError } from \"../utils/ReactToastify\";\n// import { ToastContainer } from \"react-toastify\";\n// import \"../assets/style/ReactToastifyCustom.css\";\n// import \"../assets/style/home.css\";\n// import \"../assets/style/loading.css\";\n// import LoadingOverlay from \"../components/LoadingOverlay\";\n// import ConfirmAccountPopup from \"../components/ConfirmAccountPopup\";\n\n// const LazyUserProfile = lazy(() => import('./UserProfile'));\n\n// function Home() {\n//   const [loggedInUser, setLoggedInUser] = useState({});\n//   const [loading, setLoading] = useState(true);\n//   const [fadeIn, setFadeIn] = useState(true);\n//   const [showProfile, setShowProfile] = useState(false);\n//   const [showConfirmPopup, setShowConfirmPopup] = useState(false);\n//   const navigate = useNavigate();\n\n//   const fetchLoggedInUser = useCallback(async () => {\n//     setLoading(true);\n//     try {\n//       const url = \"http://localhost:8080/Users/me\";\n//       const headers = {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n//         },\n//       };\n//       const response = await fetch(url, headers);\n//       const result = await response.json();\n//       if (response.ok) {\n//         setLoggedInUser(result);\n//       } else {\n//         handleError(\n//           result.message || \"Failed to fetch user data. Please try again.\"\n//         );\n//         navigate(\"/login\");\n//       }\n//     } catch (err) {\n//       handleError(\"Network error. Please check your connection and try again.\");\n//       navigate(\"/login\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   }, [navigate]);\n\n//   useEffect(() => {\n//     fetchLoggedInUser();\n\n//     const timeoutId = setTimeout(() => {\n//       setFadeIn(false);\n//     }, 500);\n\n//     let popupInterval;\n\n//     if (!loggedInUser.isActive) {\n//       popupInterval = setInterval(() => {\n//         setShowConfirmPopup(true);\n//         setTimeout(() => setShowConfirmPopup(false), 3000); // Hide after 3 seconds\n//       }, 5000);\n//     }\n\n//     return () => {\n//       clearTimeout(timeoutId);\n//       if (popupInterval) {\n//         clearInterval(popupInterval);\n//       }\n//     };\n//   }, [fetchLoggedInUser, loggedInUser.isActive]);\n\n//   const toggleProfile = () => {\n//     setShowProfile(prev => !prev);\n//   };\n\n//   if (loading) {\n//     return <LoadingOverlay loading={loading} fadeOut={false} />;\n//   }\n\n//   return (\n//     <div className=\"home-container\">\n//       <div className=\"background-overlay\"></div>\n//       <div className=\"content-wrapper\">\n//         <div className=\"top-bar\">\n//           <button className=\"history-button\">\n//             <img src=\"/images/icon/history-icon.png\" alt=\"History\" />\n//           </button>\n//           <div\n//             className=\"user-icon-image\"\n//             onClick={toggleProfile}\n//           >\n//             <img\n//               src=\"/images/avater/avater.png\"\n//               className=\"profilePicture\"\n//               alt=\"Profile\"\n//             />\n//           </div>\n//         </div>\n//         <div className=\"main-home-container\">\n//           <h1 className=\"user-name\">{loggedInUser.name}</h1>\n//           <Suspense fallback={<div>Loading profile...</div>}>\n//             {showProfile && (\n//               <div className=\"centered-profile\">\n//                 <LazyUserProfile\n//                   user={loggedInUser}\n//                   onClose={toggleProfile}\n//                 />\n//               </div>\n//             )}\n//           </Suspense>\n//           <ConfirmAccountPopup\n//             isActive={loggedInUser.isActive}\n//             email={loggedInUser.email}\n//             token={localStorage.getItem(\"token\")}\n//             show={showConfirmPopup}\n//           />\n//         </div>\n\n//         <div className=\"top-services-main-container\">\n//           <div className=\"top-services-container\">\n//             <label className=\"services-level\">Chat</label>\n//           </div>\n//           <div className=\"top-services-container\">\n//             <label className=\"services-level\">AI</label>\n//           </div>\n//           <div className=\"top-services-container\">\n//             <label className=\"services-level\">AI</label>\n//           </div>\n//           <div className=\"top-services-container\">\n//             <label className=\"services-level\">AI</label>\n//           </div>\n\n//         </div>\n\n//         <div className=\"top-services-main-container\">\n//           <div className=\"top-services-container\">\n//             <label className=\"services-level\">AI</label>\n//           </div>\n//           <div className=\"top-services-container\">\n//             <label className=\"services-level\">AI</label>\n//           </div>\n//           <div className=\"top-services-container\">\n//             <label className=\"services-level\">AI</label>\n//           </div>\n//           <div className=\"top-services-container\">\n//             <label className=\"services-level\">AI</label>\n//           </div>\n\n//         </div>\n\n//         <div className=\"top-services-main-container\">\n//           <div className=\"top-services-container\">\n//             <label className=\"services-level\">AI</label>\n//           </div>\n//           <div className=\"top-services-container\">\n//             <label className=\"services-level\">AI</label>\n//           </div>\n//           <div className=\"top-services-container\">\n//             <label className=\"services-level\">AI</label>\n//           </div>\n//           <div className=\"top-services-container\">\n//             <label className=\"services-level\">MORE</label>\n//             <h5>1000+</h5>\n//           </div>\n\n//         </div>\n\n//         <div className=\"main-input-container\">\n//          <dir>\n\n//          </dir>\n//         </div>\n\n//       </div>\n//       <ToastContainer />\n//     </div>\n//   );\n// }\n\n// export default Home;","map":{"version":3,"names":[],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/pages/Home.jsx"],"sourcesContent":["// import React, { useCallback, useEffect, useState, lazy, Suspense } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { handleError } from \"../utils/ReactToastify\";\r\n// import { ToastContainer } from \"react-toastify\";\r\n// import \"../assets/style/ReactToastifyCustom.css\";\r\n// import \"../assets/style/home.css\";\r\n// import \"../assets/style/loading.css\";\r\n// import LoadingOverlay from \"../components/LoadingOverlay\";\r\n// import ConfirmAccountPopup from \"../components/ConfirmAccountPopup\";\r\n\r\n// const LazyUserProfile = lazy(() => import('./UserProfile'));\r\n\r\n// function Home() {\r\n//   const [loggedInUser, setLoggedInUser] = useState({});\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [fadeIn, setFadeIn] = useState(true);\r\n//   const [showProfile, setShowProfile] = useState(false);\r\n//   const [showConfirmPopup, setShowConfirmPopup] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   const fetchLoggedInUser = useCallback(async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const url = \"http://localhost:8080/Users/me\";\r\n//       const headers = {\r\n//         headers: {\r\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n//         },\r\n//       };\r\n//       const response = await fetch(url, headers);\r\n//       const result = await response.json();\r\n//       if (response.ok) {\r\n//         setLoggedInUser(result);\r\n//       } else {\r\n//         handleError(\r\n//           result.message || \"Failed to fetch user data. Please try again.\"\r\n//         );\r\n//         navigate(\"/login\");\r\n//       }\r\n//     } catch (err) {\r\n//       handleError(\"Network error. Please check your connection and try again.\");\r\n//       navigate(\"/login\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   }, [navigate]);\r\n\r\n//   useEffect(() => {\r\n//     fetchLoggedInUser();\r\n\r\n//     const timeoutId = setTimeout(() => {\r\n//       setFadeIn(false);\r\n//     }, 500);\r\n\r\n//     let popupInterval;\r\n\r\n//     if (!loggedInUser.isActive) {\r\n//       popupInterval = setInterval(() => {\r\n//         setShowConfirmPopup(true);\r\n//         setTimeout(() => setShowConfirmPopup(false), 3000); // Hide after 3 seconds\r\n//       }, 5000);\r\n//     }\r\n\r\n//     return () => {\r\n//       clearTimeout(timeoutId);\r\n//       if (popupInterval) {\r\n//         clearInterval(popupInterval);\r\n//       }\r\n//     };\r\n//   }, [fetchLoggedInUser, loggedInUser.isActive]);\r\n\r\n//   const toggleProfile = () => {\r\n//     setShowProfile(prev => !prev);\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <LoadingOverlay loading={loading} fadeOut={false} />;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"home-container\">\r\n//       <div className=\"background-overlay\"></div>\r\n//       <div className=\"content-wrapper\">\r\n//         <div className=\"top-bar\">\r\n//           <button className=\"history-button\">\r\n//             <img src=\"/images/icon/history-icon.png\" alt=\"History\" />\r\n//           </button>\r\n//           <div\r\n//             className=\"user-icon-image\"\r\n//             onClick={toggleProfile}\r\n//           >\r\n//             <img\r\n//               src=\"/images/avater/avater.png\"\r\n//               className=\"profilePicture\"\r\n//               alt=\"Profile\"\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"main-home-container\">\r\n//           <h1 className=\"user-name\">{loggedInUser.name}</h1>\r\n//           <Suspense fallback={<div>Loading profile...</div>}>\r\n//             {showProfile && (\r\n//               <div className=\"centered-profile\">\r\n//                 <LazyUserProfile\r\n//                   user={loggedInUser}\r\n//                   onClose={toggleProfile}\r\n//                 />\r\n//               </div>\r\n//             )}\r\n//           </Suspense>\r\n//           <ConfirmAccountPopup\r\n//             isActive={loggedInUser.isActive}\r\n//             email={loggedInUser.email}\r\n//             token={localStorage.getItem(\"token\")}\r\n//             show={showConfirmPopup}\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"top-services-main-container\">\r\n//           <div className=\"top-services-container\">\r\n//             <label className=\"services-level\">Chat</label>\r\n//           </div>\r\n//           <div className=\"top-services-container\">\r\n//             <label className=\"services-level\">AI</label>\r\n//           </div>\r\n//           <div className=\"top-services-container\">\r\n//             <label className=\"services-level\">AI</label>\r\n//           </div>\r\n//           <div className=\"top-services-container\">\r\n//             <label className=\"services-level\">AI</label>\r\n//           </div>\r\n\r\n//         </div>\r\n\r\n//         <div className=\"top-services-main-container\">\r\n//           <div className=\"top-services-container\">\r\n//             <label className=\"services-level\">AI</label>\r\n//           </div>\r\n//           <div className=\"top-services-container\">\r\n//             <label className=\"services-level\">AI</label>\r\n//           </div>\r\n//           <div className=\"top-services-container\">\r\n//             <label className=\"services-level\">AI</label>\r\n//           </div>\r\n//           <div className=\"top-services-container\">\r\n//             <label className=\"services-level\">AI</label>\r\n//           </div>\r\n\r\n//         </div>\r\n\r\n//         <div className=\"top-services-main-container\">\r\n//           <div className=\"top-services-container\">\r\n//             <label className=\"services-level\">AI</label>\r\n//           </div>\r\n//           <div className=\"top-services-container\">\r\n//             <label className=\"services-level\">AI</label>\r\n//           </div>\r\n//           <div className=\"top-services-container\">\r\n//             <label className=\"services-level\">AI</label>\r\n//           </div>\r\n//           <div className=\"top-services-container\">\r\n//             <label className=\"services-level\">MORE</label>\r\n//             <h5>1000+</h5>\r\n//           </div>\r\n          \r\n//         </div>\r\n\r\n//         <div className=\"main-input-container\">\r\n//          <dir>\r\n\r\n\r\n//          </dir>\r\n//         </div>\r\n\r\n//       </div>\r\n//       <ToastContainer />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Home;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}