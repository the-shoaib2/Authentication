{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\pages\\\\Signup.js\",\n  _s = $RefreshSig$();\n// // //Signup.js\n\n// // import React, { useEffect, useState } from 'react';\n// // import { useNavigate, Link } from 'react-router-dom';\n// // import { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\n// // import '../utils/ReactToastifyCustom.css';\n// // import '../utils/style/animations.css';\n// // import '../utils/loading.css';\n\n// // function Signup() {\n// //     const [name, setName] = useState('');\n// //     const [email, setEmail] = useState('');\n// //     const [password, setPassword] = useState('');\n// //     const [confirmPassword, setConfirmPassword] = useState('');\n// //     const [loading, setLoading] = useState(false);\n// //     const [fadeIn, setFadeIn] = useState(true);\n// //     const [fadeOut, setFadeOut] = useState(false);\n// //     const navigate = useNavigate();\n\n// //     useEffect(() => {\n// //         const timeoutId = setTimeout(() => {\n// //             setFadeIn(false);\n// //         }, 500);\n// //         return () => clearTimeout(timeoutId);\n// //     }, []);\n\n// //     const handleSubmit = async (event) => {\n// //         event.preventDefault();\n\n// //         if (password !== confirmPassword) {\n// //             handleError('Passwords do not match');\n// //             return;\n// //         }\n\n// //         setLoading(true);\n// //         setFadeOut(false);\n\n// //         setTimeout(async () => {\n// //             setFadeOut(true);\n// //             setTimeout(async () => {\n// //                 try {\n// //                     const response = await fetch(\"http://localhost:8080/auth/signup\", {\n// //                         method: 'POST',\n// //                         headers: {\n// //                             'Content-Type': 'application/json',\n// //                         },\n// //                         body: JSON.stringify({ name, email, password }),\n// //                     });\n// //                     const result = await response.json();\n// //                     if (response.ok) {\n// //                         handleSuccess('Signup successful!');\n// //                         setTimeout(() => navigate('/login'), 500);\n// //                     } else {\n// //                         handleError(result.message || 'An error occurred during signup. Please try again.');\n// //                     }\n// //                 } catch (err) {\n// //                     handleError('Network error. Please check your connection and try again.');\n// //                 } finally {\n// //                     setLoading(false);\n// //                 }\n// //             }, 250);\n// //         }, 1000);\n// //     };\n\n// //     return (\n// //         <div className={`signup-container container ${fadeIn ? 'fade-in' : ''}`}>\n// //             <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\n// //             <h1>Sign up</h1>\n// //             <form onSubmit={handleSubmit}>\n// //                 <div className='form-group'>\n// //                     <input\n// //                         type='text'\n// //                         id='name'\n// //                         placeholder=''\n// //                         value={name}\n// //                         onChange={(e) => setName(e.target.value)}\n// //                         required\n// //                     />\n// //                     <label htmlFor='name' className='form-label'>Name</label>\n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <input\n// //                         type='email'\n// //                         id='email'\n// //                         placeholder=''\n// //                         value={email}\n// //                         onChange={(e) => setEmail(e.target.value)}\n// //                         required\n// //                     />\n// //                     <label htmlFor='email' className='form-label'>Email</label>\n// //                 </div>\n\n// //                 <div className='form-group-container'>\n// //                     <div className='form-group'>\n// //                         <input\n// //                             type='password'\n// //                             id='password'\n// //                             placeholder=''\n// //                             value={password}\n// //                             onChange={(e) => setPassword(e.target.value)}\n// //                             required\n// //                         />\n// //                         <label htmlFor='password' className='form-label'>Password</label>\n// //                     </div>\n\n// //                     <div className='form-group'>\n// //                         <input\n// //                             type='password'\n// //                             id='confirmPassword'\n// //                             placeholder=''\n// //                             value={confirmPassword}\n// //                             onChange={(e) => setConfirmPassword(e.target.value)}\n// //                             required\n// //                         />\n// //                         <label htmlFor='confirmPassword' className='form-label'>Confirm Password</label>\n// //                     </div>\n// //                 </div>\n\n// //                 <button className='signup-button' type='submit'>Sign up</button>\n// //                 <span>Already have an account? <Link to=\"/login\" className='pages-link'>Login</Link></span>\n// //             </form>\n\n// //             <span className=\"terms\">\n// //                 By creating an account, you agree to our \n// //                 <Link to=\"/terms\" className='terms-pages-link'> Terms of Use</Link>, \n// //                 <Link to=\"/privacy-policy\" className='terms-pages-link'> Privacy Policy</Link>.\n// //             </span>\n\n// //             <ToastContainer />\n// //             {loading && (\n// //                 <div className={`loading-overlay ${fadeOut ? 'hidden' : ''}`}>\n// //                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\n// //                 </div>\n// //             )}\n// //         </div>\n// //     );\n// // }\n\n// // export default Signup;\n\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\n// import '../utils/ReactToastifyCustom.css';\n// import '../utils/loading.css';\n// import '../utils/style/animations.css';\n\n// function Signup() {\n//     const [name, setName] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [confirmPassword, setConfirmPassword] = useState('');\n//     const [loading, setLoading] = useState(false);\n//     const [fadeIn, setFadeIn] = useState(true);\n//     const [fadeOut, setFadeOut] = useState(false);\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         const timeoutId = setTimeout(() => {\n//             setFadeIn(false);\n//         }, 500);\n//         return () => clearTimeout(timeoutId);\n//     }, []);\n\n//     useEffect(() => {\n//         const refreshToken = localStorage.getItem('refreshToken');\n//         if (refreshToken) {\n//             // Attempt auto-login using the refresh token\n//             (async () => {\n//                 try {\n//                     const response = await fetch(\"http://localhost:8080/auth/refresh-token\", {\n//                         method: 'POST',\n//                         headers: {\n//                             'Content-Type': 'application/json',\n//                         },\n//                         body: JSON.stringify({ refreshToken }),\n//                     });\n//                     const result = await response.json();\n//                     if (response.ok) {\n//                         localStorage.setItem('token', result.accessToken);\n//                         localStorage.setItem('refreshToken', result.refreshToken);\n//                         localStorage.setItem('loggedInUser', JSON.stringify(result));\n//                         handleSuccess('Auto-login successful!');\n//                         navigate('/home');\n//                     } else {\n//                         handleError(result.message || 'Failed to auto-login.');\n//                     }\n//                 } catch (err) {\n//                     handleError('Network error. Please check your connection and try again.');\n//                 }\n//             })();\n//         }\n//     }, [navigate]);\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n\n//         if (password !== confirmPassword) {\n//             handleError('Passwords do not match');\n//             return;\n//         }\n\n//         setLoading(true);\n//         setFadeOut(false);\n\n//         setTimeout(async () => {\n//             setFadeOut(true);\n//             setTimeout(async () => {\n//                 try {\n//                     const response = await fetch(\"http://localhost:8080/auth/signup\", {\n//                         method: 'POST',\n//                         headers: {\n//                             'Content-Type': 'application/json',\n//                         },\n//                         body: JSON.stringify({ name, email, password }),\n//                     });\n//                     const result = await response.json();\n//                     if (response.ok) {\n//                         localStorage.setItem('token', result.accessToken);\n//                         localStorage.setItem('refreshToken', result.refreshToken);\n//                         localStorage.setItem('loggedInUser', JSON.stringify(result));\n//                         handleSuccess('Signup successful!');\n//                         setTimeout(() => navigate('/login'), 500);\n//                     } else {\n//                         handleError(result.message || 'An error occurred during signup. Please try again.');\n//                     }\n//                 } catch (err) {\n//                     handleError('Network error. Please check your connection and try again.');\n//                 } finally {\n//                     setLoading(false);\n//                 }\n//             }, 250);\n//         }, 1000);\n//     };\n\n//     return (\n//         <div className={`signup-container container ${fadeIn ? 'fade-in' : ''}`}>\n//             <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\n//             <h1>Sign up</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <div className='form-group'>\n//                     <input\n//                         type='text'\n//                         id='name'\n//                         placeholder=''\n//                         value={name}\n//                         onChange={(e) => setName(e.target.value)}\n//                         required\n//                     />\n//                     <label htmlFor='name' className='form-label'>Name</label>\n//                 </div>\n//                 <div className='form-group'>\n//                     <input\n//                         type='email'\n//                         id='email'\n//                         placeholder=''\n//                         value={email}\n//                         onChange={(e) => setEmail(e.target.value)}\n//                         required\n//                     />\n//                     <label htmlFor='email' className='form-label'>Email</label>\n//                 </div>\n\n//                 <div className='form-group-container'>\n//                     <div className='form-group'>\n//                         <input\n//                             type='password'\n//                             id='password'\n//                             placeholder=''\n//                             value={password}\n//                             onChange={(e) => setPassword(e.target.value)}\n//                             required\n//                         />\n//                         <label htmlFor='password' className='form-label'>Password</label>\n//                     </div>\n\n//                     <div className='form-group'>\n//                         <input\n//                             type='password'\n//                             id='confirmPassword'\n//                             placeholder=''\n//                             value={confirmPassword}\n//                             onChange={(e) => setConfirmPassword(e.target.value)}\n//                             required\n//                         />\n//                         <label htmlFor='confirmPassword' className='form-label'>Confirm Password</label>\n//                     </div>\n//                 </div>\n\n//                 <button className='signup-button' type='submit'>Sign up</button>\n//                 <span>Already have an account? <Link to=\"/login\" className='pages-link'>Login</Link></span>\n//             </form>\n\n//             <span className=\"terms\">\n//                 By creating an account, you agree to our \n//                 <Link to=\"/terms\" className='terms-pages-link'> Terms of Use</Link>, \n//                 <Link to=\"/privacy-policy\" className='terms-pages-link'> Privacy Policy</Link>.\n//             </span>\n\n//             <ToastContainer />\n//             {loading && (\n//                 <div className={`loading-overlay ${fadeOut ? 'hidden' : ''}`}>\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default Signup;\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\nimport useAuthStore from '../store/useAuthStore';\nimport '../utils/ReactToastifyCustom.css';\nimport '../utils/loading.css';\nimport '../utils/style/animations.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [fadeIn, setFadeIn] = useState(true);\n  const navigate = useNavigate();\n  const signup = useAuthStore(state => state.signup);\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setFadeIn(false);\n    }, 500);\n    return () => clearTimeout(timeoutId);\n  }, []);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      handleError('Passwords do not match');\n      return;\n    }\n    setLoading(true);\n    try {\n      await signup(name, email, password);\n      handleSuccess('Signup successful!');\n      setTimeout(() => navigate('/home'), 500);\n    } catch (error) {\n      handleError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `signup-container container ${fadeIn ? 'fade-in' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/app-icon.ico\",\n      alt: \"App Icon\",\n      className: \"app-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          placeholder: \"\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"form-label\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          placeholder: \"\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            placeholder: \"\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            placeholder: \"\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            className: \"form-label\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signup-button\",\n        type: \"submit\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"pages-link\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"terms\",\n      children: [\"By creating an account, you agree to our\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/terms\",\n        className: \"terms-pages-link\",\n        children: \" Terms of Use\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 17\n      }, this), \",\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/privacy-policy\",\n        className: \"terms-pages-link\",\n        children: \" Privacy Policy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 9\n  }, this);\n}\n_s(Signup, \"L7rkeOp4X7JCKIaFcYQWc4OsXKk=\", false, function () {\n  return [useNavigate, useAuthStore];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Link","handleSuccess","handleError","ToastContainer","useAuthStore","jsxDEV","_jsxDEV","Signup","_s","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","loading","setLoading","fadeIn","setFadeIn","navigate","signup","state","timeoutId","setTimeout","clearTimeout","handleSubmit","event","preventDefault","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","placeholder","value","onChange","e","target","required","htmlFor","to","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/pages/Signup.js"],"sourcesContent":["// // //Signup.js\r\n\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import { useNavigate, Link } from 'react-router-dom';\r\n// // import { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\r\n// // import '../utils/ReactToastifyCustom.css';\r\n// // import '../utils/style/animations.css';\r\n// // import '../utils/loading.css';\r\n\r\n// // function Signup() {\r\n// //     const [name, setName] = useState('');\r\n// //     const [email, setEmail] = useState('');\r\n// //     const [password, setPassword] = useState('');\r\n// //     const [confirmPassword, setConfirmPassword] = useState('');\r\n// //     const [loading, setLoading] = useState(false);\r\n// //     const [fadeIn, setFadeIn] = useState(true);\r\n// //     const [fadeOut, setFadeOut] = useState(false);\r\n// //     const navigate = useNavigate();\r\n\r\n// //     useEffect(() => {\r\n// //         const timeoutId = setTimeout(() => {\r\n// //             setFadeIn(false);\r\n// //         }, 500);\r\n// //         return () => clearTimeout(timeoutId);\r\n// //     }, []);\r\n\r\n// //     const handleSubmit = async (event) => {\r\n// //         event.preventDefault();\r\n\r\n// //         if (password !== confirmPassword) {\r\n// //             handleError('Passwords do not match');\r\n// //             return;\r\n// //         }\r\n\r\n\r\n// //         setLoading(true);\r\n// //         setFadeOut(false);\r\n\r\n// //         setTimeout(async () => {\r\n// //             setFadeOut(true);\r\n// //             setTimeout(async () => {\r\n// //                 try {\r\n// //                     const response = await fetch(\"http://localhost:8080/auth/signup\", {\r\n// //                         method: 'POST',\r\n// //                         headers: {\r\n// //                             'Content-Type': 'application/json',\r\n// //                         },\r\n// //                         body: JSON.stringify({ name, email, password }),\r\n// //                     });\r\n// //                     const result = await response.json();\r\n// //                     if (response.ok) {\r\n// //                         handleSuccess('Signup successful!');\r\n// //                         setTimeout(() => navigate('/login'), 500);\r\n// //                     } else {\r\n// //                         handleError(result.message || 'An error occurred during signup. Please try again.');\r\n// //                     }\r\n// //                 } catch (err) {\r\n// //                     handleError('Network error. Please check your connection and try again.');\r\n// //                 } finally {\r\n// //                     setLoading(false);\r\n// //                 }\r\n// //             }, 250);\r\n// //         }, 1000);\r\n// //     };\r\n\r\n// //     return (\r\n// //         <div className={`signup-container container ${fadeIn ? 'fade-in' : ''}`}>\r\n// //             <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\r\n// //             <h1>Sign up</h1>\r\n// //             <form onSubmit={handleSubmit}>\r\n// //                 <div className='form-group'>\r\n// //                     <input\r\n// //                         type='text'\r\n// //                         id='name'\r\n// //                         placeholder=''\r\n// //                         value={name}\r\n// //                         onChange={(e) => setName(e.target.value)}\r\n// //                         required\r\n// //                     />\r\n// //                     <label htmlFor='name' className='form-label'>Name</label>\r\n// //                 </div>\r\n// //                 <div className='form-group'>\r\n// //                     <input\r\n// //                         type='email'\r\n// //                         id='email'\r\n// //                         placeholder=''\r\n// //                         value={email}\r\n// //                         onChange={(e) => setEmail(e.target.value)}\r\n// //                         required\r\n// //                     />\r\n// //                     <label htmlFor='email' className='form-label'>Email</label>\r\n// //                 </div>\r\n\r\n// //                 <div className='form-group-container'>\r\n// //                     <div className='form-group'>\r\n// //                         <input\r\n// //                             type='password'\r\n// //                             id='password'\r\n// //                             placeholder=''\r\n// //                             value={password}\r\n// //                             onChange={(e) => setPassword(e.target.value)}\r\n// //                             required\r\n// //                         />\r\n// //                         <label htmlFor='password' className='form-label'>Password</label>\r\n// //                     </div>\r\n\r\n// //                     <div className='form-group'>\r\n// //                         <input\r\n// //                             type='password'\r\n// //                             id='confirmPassword'\r\n// //                             placeholder=''\r\n// //                             value={confirmPassword}\r\n// //                             onChange={(e) => setConfirmPassword(e.target.value)}\r\n// //                             required\r\n// //                         />\r\n// //                         <label htmlFor='confirmPassword' className='form-label'>Confirm Password</label>\r\n// //                     </div>\r\n// //                 </div>\r\n\r\n// //                 <button className='signup-button' type='submit'>Sign up</button>\r\n// //                 <span>Already have an account? <Link to=\"/login\" className='pages-link'>Login</Link></span>\r\n// //             </form>\r\n\r\n// //             <span className=\"terms\">\r\n// //                 By creating an account, you agree to our \r\n// //                 <Link to=\"/terms\" className='terms-pages-link'> Terms of Use</Link>, \r\n// //                 <Link to=\"/privacy-policy\" className='terms-pages-link'> Privacy Policy</Link>.\r\n// //             </span>\r\n\r\n// //             <ToastContainer />\r\n// //             {loading && (\r\n// //                 <div className={`loading-overlay ${fadeOut ? 'hidden' : ''}`}>\r\n// //                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\r\n// //                 </div>\r\n// //             )}\r\n// //         </div>\r\n// //     );\r\n// // }\r\n\r\n// // export default Signup;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate, Link } from 'react-router-dom';\r\n// import { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\r\n// import '../utils/ReactToastifyCustom.css';\r\n// import '../utils/loading.css';\r\n// import '../utils/style/animations.css';\r\n\r\n// function Signup() {\r\n//     const [name, setName] = useState('');\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [confirmPassword, setConfirmPassword] = useState('');\r\n//     const [loading, setLoading] = useState(false);\r\n//     const [fadeIn, setFadeIn] = useState(true);\r\n//     const [fadeOut, setFadeOut] = useState(false);\r\n//     const navigate = useNavigate();\r\n\r\n//     useEffect(() => {\r\n//         const timeoutId = setTimeout(() => {\r\n//             setFadeIn(false);\r\n//         }, 500);\r\n//         return () => clearTimeout(timeoutId);\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         const refreshToken = localStorage.getItem('refreshToken');\r\n//         if (refreshToken) {\r\n//             // Attempt auto-login using the refresh token\r\n//             (async () => {\r\n//                 try {\r\n//                     const response = await fetch(\"http://localhost:8080/auth/refresh-token\", {\r\n//                         method: 'POST',\r\n//                         headers: {\r\n//                             'Content-Type': 'application/json',\r\n//                         },\r\n//                         body: JSON.stringify({ refreshToken }),\r\n//                     });\r\n//                     const result = await response.json();\r\n//                     if (response.ok) {\r\n//                         localStorage.setItem('token', result.accessToken);\r\n//                         localStorage.setItem('refreshToken', result.refreshToken);\r\n//                         localStorage.setItem('loggedInUser', JSON.stringify(result));\r\n//                         handleSuccess('Auto-login successful!');\r\n//                         navigate('/home');\r\n//                     } else {\r\n//                         handleError(result.message || 'Failed to auto-login.');\r\n//                     }\r\n//                 } catch (err) {\r\n//                     handleError('Network error. Please check your connection and try again.');\r\n//                 }\r\n//             })();\r\n//         }\r\n//     }, [navigate]);\r\n\r\n//     const handleSubmit = async (event) => {\r\n//         event.preventDefault();\r\n\r\n//         if (password !== confirmPassword) {\r\n//             handleError('Passwords do not match');\r\n//             return;\r\n//         }\r\n\r\n//         setLoading(true);\r\n//         setFadeOut(false);\r\n\r\n//         setTimeout(async () => {\r\n//             setFadeOut(true);\r\n//             setTimeout(async () => {\r\n//                 try {\r\n//                     const response = await fetch(\"http://localhost:8080/auth/signup\", {\r\n//                         method: 'POST',\r\n//                         headers: {\r\n//                             'Content-Type': 'application/json',\r\n//                         },\r\n//                         body: JSON.stringify({ name, email, password }),\r\n//                     });\r\n//                     const result = await response.json();\r\n//                     if (response.ok) {\r\n//                         localStorage.setItem('token', result.accessToken);\r\n//                         localStorage.setItem('refreshToken', result.refreshToken);\r\n//                         localStorage.setItem('loggedInUser', JSON.stringify(result));\r\n//                         handleSuccess('Signup successful!');\r\n//                         setTimeout(() => navigate('/login'), 500);\r\n//                     } else {\r\n//                         handleError(result.message || 'An error occurred during signup. Please try again.');\r\n//                     }\r\n//                 } catch (err) {\r\n//                     handleError('Network error. Please check your connection and try again.');\r\n//                 } finally {\r\n//                     setLoading(false);\r\n//                 }\r\n//             }, 250);\r\n//         }, 1000);\r\n//     };\r\n\r\n//     return (\r\n//         <div className={`signup-container container ${fadeIn ? 'fade-in' : ''}`}>\r\n//             <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\r\n//             <h1>Sign up</h1>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className='form-group'>\r\n//                     <input\r\n//                         type='text'\r\n//                         id='name'\r\n//                         placeholder=''\r\n//                         value={name}\r\n//                         onChange={(e) => setName(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                     <label htmlFor='name' className='form-label'>Name</label>\r\n//                 </div>\r\n//                 <div className='form-group'>\r\n//                     <input\r\n//                         type='email'\r\n//                         id='email'\r\n//                         placeholder=''\r\n//                         value={email}\r\n//                         onChange={(e) => setEmail(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                     <label htmlFor='email' className='form-label'>Email</label>\r\n//                 </div>\r\n\r\n//                 <div className='form-group-container'>\r\n//                     <div className='form-group'>\r\n//                         <input\r\n//                             type='password'\r\n//                             id='password'\r\n//                             placeholder=''\r\n//                             value={password}\r\n//                             onChange={(e) => setPassword(e.target.value)}\r\n//                             required\r\n//                         />\r\n//                         <label htmlFor='password' className='form-label'>Password</label>\r\n//                     </div>\r\n\r\n//                     <div className='form-group'>\r\n//                         <input\r\n//                             type='password'\r\n//                             id='confirmPassword'\r\n//                             placeholder=''\r\n//                             value={confirmPassword}\r\n//                             onChange={(e) => setConfirmPassword(e.target.value)}\r\n//                             required\r\n//                         />\r\n//                         <label htmlFor='confirmPassword' className='form-label'>Confirm Password</label>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <button className='signup-button' type='submit'>Sign up</button>\r\n//                 <span>Already have an account? <Link to=\"/login\" className='pages-link'>Login</Link></span>\r\n//             </form>\r\n\r\n//             <span className=\"terms\">\r\n//                 By creating an account, you agree to our \r\n//                 <Link to=\"/terms\" className='terms-pages-link'> Terms of Use</Link>, \r\n//                 <Link to=\"/privacy-policy\" className='terms-pages-link'> Privacy Policy</Link>.\r\n//             </span>\r\n\r\n//             <ToastContainer />\r\n//             {loading && (\r\n//                 <div className={`loading-overlay ${fadeOut ? 'hidden' : ''}`}>\r\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Signup;\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\r\nimport useAuthStore from '../store/useAuthStore';\r\nimport '../utils/ReactToastifyCustom.css';\r\nimport '../utils/loading.css';\r\nimport '../utils/style/animations.css';\r\n\r\nfunction Signup() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [fadeIn, setFadeIn] = useState(true);\r\n    const navigate = useNavigate();\r\n    const signup = useAuthStore((state) => state.signup);\r\n\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(() => {\r\n            setFadeIn(false);\r\n        }, 500);\r\n        return () => clearTimeout(timeoutId);\r\n    }, []);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            handleError('Passwords do not match');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            await signup(name, email, password);\r\n            handleSuccess('Signup successful!');\r\n            setTimeout(() => navigate('/home'), 500);\r\n        } catch (error) {\r\n            handleError(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={`signup-container container ${fadeIn ? 'fade-in' : ''}`}>\r\n            <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\r\n            <h1>Sign up</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        id='name'\r\n                        placeholder=''\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        required\r\n                    />\r\n                    <label htmlFor='name' className='form-label'>Name</label>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='email'\r\n                        id='email'\r\n                        placeholder=''\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                    />\r\n                    <label htmlFor='email' className='form-label'>Email</label>\r\n                </div>\r\n\r\n                <div className='form-group-container'>\r\n                    <div className='form-group'>\r\n                        <input\r\n                            type='password'\r\n                            id='password'\r\n                            placeholder=''\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                        <label htmlFor='password' className='form-label'>Password</label>\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                        <input\r\n                            type='password'\r\n                            id='confirmPassword'\r\n                            placeholder=''\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                        <label htmlFor='confirmPassword' className='form-label'>Confirm Password</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <button className='signup-button' type='submit'>Sign up</button>\r\n                <span>Already have an account? <Link to=\"/login\" className='pages-link'>Login</Link></span>\r\n            </form>\r\n\r\n            <span className=\"terms\">\r\n                By creating an account, you agree to our \r\n                <Link to=\"/terms\" className='terms-pages-link'> Terms of Use</Link>, \r\n                <Link to=\"/privacy-policy\" className='terms-pages-link'> Privacy Policy</Link>.\r\n            </span>\r\n\r\n            <ToastContainer />\r\n\r\n            {loading && (\r\n                <div className=\"loading-container\">\r\n                    <div className=\"loading-spinner\"></div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}