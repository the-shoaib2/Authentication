{"ast":null,"code":"import axios from \"axios\";\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:8080\",\n  withCredentials: true\n});\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\napiClient.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n  if (error.response && error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const response = await axios.post(\"http://localhost:8080/auth/refresh-token\", {}, {\n        withCredentials: true\n      });\n      const {\n        accessToken\n      } = response.data;\n      localStorage.setItem(\"token\", accessToken);\n      originalRequest.headers[\"Authorization\"] = `Bearer ${accessToken}`;\n      return apiClient(originalRequest);\n    } catch (err) {\n      console.error(\"Token refresh failed:\", err);\n      return Promise.reject(err);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default apiClient;","map":{"version":3,"names":["axios","apiClient","create","baseURL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","response","originalRequest","status","_retry","post","accessToken","data","setItem","err","console"],"sources":["C:/Users/thesh/Desktop/Authentication - Copy/frontend/src/utils/axiosConfig.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: \"http://localhost:8080\",\r\n  withCredentials: true,\r\n});\r\n\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\napiClient.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    if (\r\n      error.response &&\r\n      error.response.status === 401 &&\r\n      !originalRequest._retry\r\n    ) {\r\n      originalRequest._retry = true;\r\n      try {\r\n        const response = await axios.post(\r\n          \"http://localhost:8080/auth/refresh-token\",\r\n          {},\r\n          { withCredentials: true }\r\n        );\r\n        const { accessToken } = response.data;\r\n        localStorage.setItem(\"token\", accessToken);\r\n        originalRequest.headers[\"Authorization\"] = `Bearer ${accessToken}`;\r\n        return apiClient(originalRequest);\r\n      } catch (err) {\r\n        console.error(\"Token refresh failed:\", err);\r\n        return Promise.reject(err);\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default apiClient;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,uBAAuB;EAChCC,eAAe,EAAE;AACnB,CAAC,CAAC;AAEFH,SAAS,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDZ,SAAS,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAChCS,QAAQ,IAAKA,QAAQ,EACtB,MAAOH,KAAK,IAAK;EACf,MAAMI,eAAe,GAAGJ,KAAK,CAACL,MAAM;EACpC,IACEK,KAAK,CAACG,QAAQ,IACdH,KAAK,CAACG,QAAQ,CAACE,MAAM,KAAK,GAAG,IAC7B,CAACD,eAAe,CAACE,MAAM,EACvB;IACAF,eAAe,CAACE,MAAM,GAAG,IAAI;IAC7B,IAAI;MACF,MAAMH,QAAQ,GAAG,MAAMhB,KAAK,CAACoB,IAAI,CAC/B,0CAA0C,EAC1C,CAAC,CAAC,EACF;QAAEhB,eAAe,EAAE;MAAK,CAC1B,CAAC;MACD,MAAM;QAAEiB;MAAY,CAAC,GAAGL,QAAQ,CAACM,IAAI;MACrCZ,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEF,WAAW,CAAC;MAC1CJ,eAAe,CAACL,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUS,WAAW,EAAE;MAClE,OAAOpB,SAAS,CAACgB,eAAe,CAAC;IACnC,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZC,OAAO,CAACZ,KAAK,CAAC,uBAAuB,EAAEW,GAAG,CAAC;MAC3C,OAAOV,OAAO,CAACC,MAAM,CAACS,GAAG,CAAC;IAC5B;EACF;EACA,OAAOV,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeZ,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}