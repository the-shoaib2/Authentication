{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\pages\\\\Signup.jsx\",\n  _s = $RefreshSig$();\n// // frontend/src/pages/Signup.jsx\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import {\n//   handleSuccess,\n//   handleError,\n//   ToastContainer,\n// } from \"../utils/ReactToastify\";\n// import \"../utils/ReactToastifyCustom.css\";\n// import \"../utils/style/animations.css\";\n// import \"../utils/loading.css\";\n\n// function Signup() {\n//   const [formData, setFormData] = useState({\n//     firstName: \"\",\n//     lastName: \"\",\n//     email: \"\",\n//     password: \"\",\n//     confirmPassword: \"\",\n//     phone: \"\",\n//     dob: {\n//       day: \"\",\n//       month: \"\",\n//       year: \"\",\n//     },\n//     gender: \"\",\n//   });\n//   const [loading, setLoading] = useState(false);\n//   const [fadeIn, setFadeIn] = useState(true);\n//   const [fadeOut, setFadeOut] = useState(false);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const timeoutId = setTimeout(() => {\n//       setFadeIn(false);\n//     }, 500);\n//     return () => clearTimeout(timeoutId);\n//   }, []);\n\n//   const handleChange = (e) => {\n//     const { id, value } = e.target;\n//     setFormData((prevState) => ({\n//       ...prevState,\n//       [id]: value,\n//     }));\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     if (formData.password !== formData.confirmPassword) {\n//       handleError(\"Passwords do not match\");\n//       return;\n//     }\n\n//     setLoading(true);\n//     setFadeOut(false);\n\n//     setTimeout(async () => {\n//       setFadeOut(true);\n//       setTimeout(async () => {\n//         try {\n//           const response = await fetch(\"http://localhost:8080/auth/signup\", {\n//             method: \"POST\",\n//             headers: {\n//               \"Content-Type\": \"application/json\",\n//             },\n//             body: JSON.stringify({\n//               firstName: formData.firstName,\n//               lastName: formData.lastName,\n//               email: formData.email,\n//               password: formData.password,\n//               confirmPassword: formData.confirmPassword,\n//               phone: formData.phone,\n//               dob: formData.dob,\n//               gender: formData.gender,\n//             }),\n//           });\n\n//           const result = await response.json();\n//           if (response.ok) {\n//             localStorage.setItem(\"token\", result.accessToken);\n//             localStorage.setItem(\"refreshToken\", result.refreshToken);\n//             localStorage.setItem(\n//               \"loggedInUser\",\n//               JSON.stringify({\n//                 name: `${result.firstName} ${result.lastName}`,\n//                 email: result.email,\n//               })\n//             );\n\n//             handleSuccess(\"Signup successful!\");\n//             setTimeout(() => navigate(\"/home\"), 500);\n//           } else {\n//             if (result.errors) {\n//               const errorMessages = result.errors\n//                 .map((err) => `${err.field}: ${err.message}`)\n//                 .join(\", \");\n//               handleError(errorMessages);\n//             } else {\n//               handleError(result.message);\n//             }\n//           }\n//         } catch (err) {\n//           handleError(\"Network error. Please check your connection and try again.\");\n//         } finally {\n//           setLoading(false);\n//         }\n//       }, 250);\n//     }, 1000);\n//   };\n\n//   return (\n//     <div className={`signup-container container ${fadeIn ? \"fade-in\" : \"\"}`}>\n//       <img src=\"/app-icon.ico\" alt=\"App Icon\" className=\"app-icon\" />\n//       <h1>Sign up</h1>\n//       {/* {error && <p className=\"error-message\">{error}</p>}{\" \"} */}\n//       {/* Display error messages */}\n//       <form onSubmit={handleSubmit}>\n//         {/* Form fields and labels */}\n//         <div className=\"form-group-container\">\n//           <div className=\"singup-form-group form-group\">\n//             <input\n//               type=\"text\"\n//               id=\"firstName\"\n//               placeholder=\"\"\n//               value={formData.firstName}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label htmlFor=\"firstName\" className=\"form-label\">\n//               First Name\n//             </label>\n//           </div>\n//           <div className=\"singup-form-group form-group\">\n//             <input\n//               type=\"text\"\n//               id=\"lastName\"\n//               placeholder=\"\"\n//               value={formData.lastName}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label htmlFor=\"lastName\" className=\"form-label\">\n//               Last Name\n//             </label>\n//           </div>\n//         </div>\n\n//         <div className=\"singup-form-group form-group\">\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             placeholder=\"\"\n//             value={formData.email}\n//             onChange={handleChange}\n//             required\n//           />\n//           <label htmlFor=\"email\" className=\"form-label\">\n//             Email\n//           </label>\n//         </div>\n\n//         <div className=\"form-group-container\">\n//           <div className=\"form-group\">\n//             <input\n//               className=\"phone-input\"\n//               type=\"tel\"\n//               id=\"phone\"\n//               placeholder=\"\"\n//               value={formData.phone}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label htmlFor=\"phone\" className=\"form-label\">\n//               Phone Number\n//             </label>\n//           </div>\n//           <div className=\"form-group\">\n//             <select\n//               id=\"gender\"\n//               value={formData.gender}\n//               onChange={handleChange}\n//               required\n//             >\n//               <option value=\"\" disabled>\n//                 Select Gender\n//               </option>\n//               <option value=\"male\">Male</option>\n//               <option value=\"female\">Female</option>\n//               <option value=\"other\">Other</option>\n//             </select>\n//           </div>\n//         </div>\n\n//         <div className=\"form-group-container\">\n//           <div className=\"form-group\">\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               placeholder=\"\"\n//               value={formData.password}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label htmlFor=\"password\" className=\"form-label\">\n//               Password\n//             </label>\n//           </div>\n//           <div className=\"form-group\">\n//             <input\n//               type=\"password\"\n//               id=\"confirmPassword\"\n//               placeholder=\"\"\n//               value={formData.confirmPassword}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label htmlFor=\"confirmPassword\" className=\"form-label\">\n//               Confirm Password\n//             </label>\n//           </div>\n//         </div>\n\n//         <div className=\"form-group-container dob\">\n//           <div className=\"form-group\">\n//             <select\n//               id=\"dobDay\"\n//               value={formData.dob.day}\n//               onChange={(e) =>\n//                 setFormData((prevState) => ({\n//                   ...prevState,\n//                   dob: { ...prevState.dob, day: e.target.value },\n//                 }))\n//               }\n//               required\n//             >\n//               <option value=\"\" disabled>\n//                 Day\n//               </option>\n//               {Array.from({ length: 31 }, (_, i) => (\n//                 <option key={i + 1} value={i + 1}>\n//                   {i + 1}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n//           <div className=\"form-group\">\n//             <select\n//               id=\"dobMonth\"\n//               value={formData.dob.month}\n//               onChange={(e) =>\n//                 setFormData((prevState) => ({\n//                   ...prevState,\n//                   dob: { ...prevState.dob, month: e.target.value },\n//                 }))\n//               }\n//               required\n//             >\n//               <option value=\"\" disabled>\n//                 Month\n//               </option>\n//               {Array.from({ length: 12 }, (_, i) => (\n//                 <option key={i + 1} value={i + 1}>\n//                   {new Date(0, i).toLocaleString(\"default\", { month: \"long\" })}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n//           <div className=\"form-group\">\n//             <select\n//               id=\"dobYear\"\n//               value={formData.dob.year}\n//               onChange={(e) =>\n//                 setFormData((prevState) => ({\n//                   ...prevState,\n//                   dob: { ...prevState.dob, year: e.target.value },\n//                 }))\n//               }\n//               required\n//             >\n//               <option value=\"\" disabled>\n//                 Year\n//               </option>\n//               {Array.from({ length: 100 }, (_, i) => (\n//                 <option key={2024 - i} value={2024 - i}>\n//                   {2024 - i}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n//         </div>\n\n//         <button className=\"signup-button\" type=\"submit\">\n//           Sign up\n//         </button>\n//         <span>\n//           Already have an account?{\" \"}\n//           <Link to=\"/login\" className=\"pages-link\">\n//             Login\n//           </Link>\n//         </span>\n//       </form>\n//       <span className=\"terms\">\n//         By creating an account, you agree to our\n//         <Link to=\"/terms\" className=\"terms-pages-link\">\n//           {\" \"}\n//           Terms of Use\n//         </Link>\n//         ,\n//         <Link to=\"/privacy-policy\" className=\"terms-pages-link\">\n//           {\" \"}\n//           Privacy Policy\n//         </Link>\n//         .\n//       </span>\n//       <ToastContainer />\n//       {loading && (\n//         <div className={`loading-overlay ${fadeOut ? \"hidden\" : \"\"}`}>\n//           <img\n//             src=\"/apple-loading.gif\"\n//             alt=\"Loading...\"\n//             className=\"loading-spinner\"\n//           />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Signup;\n\n// frontend/src/pages/Signup.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { handleSuccess, handleError, ToastContainer } from \"../utils/ReactToastify\";\nimport \"../utils/ReactToastifyCustom.css\";\nimport \"../utils/style/animations.css\";\nimport \"../utils/loading.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    phone: \"\",\n    dob: {\n      day: \"\",\n      month: \"\",\n      year: \"\"\n    },\n    gender: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n  const [fadeIn, setFadeIn] = useState(true);\n  const [fadeOut, setFadeOut] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setFadeIn(false);\n    }, 500);\n    return () => clearTimeout(timeoutId);\n  }, []);\n\n  // const handleChange = (e) => {\n  //   const { id, value } = e.target;\n  //   setFormData((prevState) => ({\n  //     ...prevState,\n  //     [id]: value,\n  //   }));\n  // };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (formData.password !== formData.confirmPassword) {\n      handleError(\"Passwords do not match\");\n      return;\n    }\n    setLoading(true);\n    setFadeOut(false);\n    setTimeout(async () => {\n      setFadeOut(true);\n      setTimeout(async () => {\n        try {\n          const response = await fetch(\"http://localhost:8080/auth/signup\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              firstName: formData.firstName,\n              lastName: formData.lastName,\n              email: formData.email,\n              password: formData.password,\n              confirmPassword: formData.confirmPassword,\n              phone: formData.phone,\n              dob: formData.dob,\n              gender: formData.gender\n            })\n          });\n          const result = await response.json();\n          if (response.ok) {\n            handleSuccess(\"Signup successful! Please verify your email.\");\n\n            // Redirect to the VerifyCodeConfirmAccount page with the token\n            navigate(\"/verify-code-confirm-account\", {\n              state: {\n                token: result.accessToken\n              } // Passing the token to the verification page\n            });\n          } else {\n            if (result.errors) {\n              const errorMessages = result.errors.map(err => `${err.field}: ${err.message}`).join(\", \");\n              handleError(errorMessages);\n            } else {\n              handleError(result.message);\n            }\n          }\n        } catch (err) {\n          handleError(\"Network error. Please check your connection and try again.\");\n        } finally {\n          setLoading(false);\n        }\n      }, 250);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `signup-container container ${fadeIn ? \"fade-in\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/app-icon.ico\",\n      alt: \"App Icon\",\n      className: \"app-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signup-button\",\n        type: \"submit\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"pages-link\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"terms\",\n      children: [\"By creating an account, you agree to our\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/terms\",\n        className: \"terms-pages-link\",\n        children: [\" \", \"Terms of Use\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this), \",\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/privacy-policy\",\n        className: \"terms-pages-link\",\n        children: [\" \", \"Privacy Policy\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `loading-overlay ${fadeOut ? \"hidden\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/apple-loading.gif\",\n        alt: \"Loading...\",\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 453,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"kAFKPw3ELxUubm1ZTljWXkVKAPI=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Link","handleSuccess","handleError","ToastContainer","jsxDEV","_jsxDEV","Signup","_s","formData","setFormData","firstName","lastName","email","password","confirmPassword","phone","dob","day","month","year","gender","loading","setLoading","fadeIn","setFadeIn","fadeOut","setFadeOut","navigate","timeoutId","setTimeout","clearTimeout","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","ok","state","token","accessToken","errors","errorMessages","map","err","field","message","join","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","to","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/pages/Signup.jsx"],"sourcesContent":["// // frontend/src/pages/Signup.jsx\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { useNavigate, Link } from \"react-router-dom\";\r\n// import {\r\n//   handleSuccess,\r\n//   handleError,\r\n//   ToastContainer,\r\n// } from \"../utils/ReactToastify\";\r\n// import \"../utils/ReactToastifyCustom.css\";\r\n// import \"../utils/style/animations.css\";\r\n// import \"../utils/loading.css\";\r\n\r\n// function Signup() {\r\n//   const [formData, setFormData] = useState({\r\n//     firstName: \"\",\r\n//     lastName: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//     confirmPassword: \"\",\r\n//     phone: \"\",\r\n//     dob: {\r\n//       day: \"\",\r\n//       month: \"\",\r\n//       year: \"\",\r\n//     },\r\n//     gender: \"\",\r\n//   });\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [fadeIn, setFadeIn] = useState(true);\r\n//   const [fadeOut, setFadeOut] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const timeoutId = setTimeout(() => {\r\n//       setFadeIn(false);\r\n//     }, 500);\r\n//     return () => clearTimeout(timeoutId);\r\n//   }, []);\r\n\r\n//   const handleChange = (e) => {\r\n//     const { id, value } = e.target;\r\n//     setFormData((prevState) => ({\r\n//       ...prevState,\r\n//       [id]: value,\r\n//     }));\r\n//   };\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     if (formData.password !== formData.confirmPassword) {\r\n//       handleError(\"Passwords do not match\");\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     setFadeOut(false);\r\n\r\n//     setTimeout(async () => {\r\n//       setFadeOut(true);\r\n//       setTimeout(async () => {\r\n//         try {\r\n//           const response = await fetch(\"http://localhost:8080/auth/signup\", {\r\n//             method: \"POST\",\r\n//             headers: {\r\n//               \"Content-Type\": \"application/json\",\r\n//             },\r\n//             body: JSON.stringify({\r\n//               firstName: formData.firstName,\r\n//               lastName: formData.lastName,\r\n//               email: formData.email,\r\n//               password: formData.password,\r\n//               confirmPassword: formData.confirmPassword,\r\n//               phone: formData.phone,\r\n//               dob: formData.dob,\r\n//               gender: formData.gender,\r\n//             }),\r\n//           });\r\n\r\n//           const result = await response.json();\r\n//           if (response.ok) {\r\n//             localStorage.setItem(\"token\", result.accessToken);\r\n//             localStorage.setItem(\"refreshToken\", result.refreshToken);\r\n//             localStorage.setItem(\r\n//               \"loggedInUser\",\r\n//               JSON.stringify({\r\n//                 name: `${result.firstName} ${result.lastName}`,\r\n//                 email: result.email,\r\n//               })\r\n//             );\r\n\r\n//             handleSuccess(\"Signup successful!\");\r\n//             setTimeout(() => navigate(\"/home\"), 500);\r\n//           } else {\r\n//             if (result.errors) {\r\n//               const errorMessages = result.errors\r\n//                 .map((err) => `${err.field}: ${err.message}`)\r\n//                 .join(\", \");\r\n//               handleError(errorMessages);\r\n//             } else {\r\n//               handleError(result.message);\r\n//             }\r\n//           }\r\n//         } catch (err) {\r\n//           handleError(\"Network error. Please check your connection and try again.\");\r\n//         } finally {\r\n//           setLoading(false);\r\n//         }\r\n//       }, 250);\r\n//     }, 1000);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={`signup-container container ${fadeIn ? \"fade-in\" : \"\"}`}>\r\n//       <img src=\"/app-icon.ico\" alt=\"App Icon\" className=\"app-icon\" />\r\n//       <h1>Sign up</h1>\r\n//       {/* {error && <p className=\"error-message\">{error}</p>}{\" \"} */}\r\n//       {/* Display error messages */}\r\n//       <form onSubmit={handleSubmit}>\r\n//         {/* Form fields and labels */}\r\n//         <div className=\"form-group-container\">\r\n//           <div className=\"singup-form-group form-group\">\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"firstName\"\r\n//               placeholder=\"\"\r\n//               value={formData.firstName}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"firstName\" className=\"form-label\">\r\n//               First Name\r\n//             </label>\r\n//           </div>\r\n//           <div className=\"singup-form-group form-group\">\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"lastName\"\r\n//               placeholder=\"\"\r\n//               value={formData.lastName}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"lastName\" className=\"form-label\">\r\n//               Last Name\r\n//             </label>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"singup-form-group form-group\">\r\n//           <input\r\n//             type=\"email\"\r\n//             id=\"email\"\r\n//             placeholder=\"\"\r\n//             value={formData.email}\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n//           <label htmlFor=\"email\" className=\"form-label\">\r\n//             Email\r\n//           </label>\r\n//         </div>\r\n\r\n//         <div className=\"form-group-container\">\r\n//           <div className=\"form-group\">\r\n//             <input\r\n//               className=\"phone-input\"\r\n//               type=\"tel\"\r\n//               id=\"phone\"\r\n//               placeholder=\"\"\r\n//               value={formData.phone}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"phone\" className=\"form-label\">\r\n//               Phone Number\r\n//             </label>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <select\r\n//               id=\"gender\"\r\n//               value={formData.gender}\r\n//               onChange={handleChange}\r\n//               required\r\n//             >\r\n//               <option value=\"\" disabled>\r\n//                 Select Gender\r\n//               </option>\r\n//               <option value=\"male\">Male</option>\r\n//               <option value=\"female\">Female</option>\r\n//               <option value=\"other\">Other</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"form-group-container\">\r\n//           <div className=\"form-group\">\r\n//             <input\r\n//               type=\"password\"\r\n//               id=\"password\"\r\n//               placeholder=\"\"\r\n//               value={formData.password}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"password\" className=\"form-label\">\r\n//               Password\r\n//             </label>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <input\r\n//               type=\"password\"\r\n//               id=\"confirmPassword\"\r\n//               placeholder=\"\"\r\n//               value={formData.confirmPassword}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"confirmPassword\" className=\"form-label\">\r\n//               Confirm Password\r\n//             </label>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"form-group-container dob\">\r\n//           <div className=\"form-group\">\r\n//             <select\r\n//               id=\"dobDay\"\r\n//               value={formData.dob.day}\r\n//               onChange={(e) =>\r\n//                 setFormData((prevState) => ({\r\n//                   ...prevState,\r\n//                   dob: { ...prevState.dob, day: e.target.value },\r\n//                 }))\r\n//               }\r\n//               required\r\n//             >\r\n//               <option value=\"\" disabled>\r\n//                 Day\r\n//               </option>\r\n//               {Array.from({ length: 31 }, (_, i) => (\r\n//                 <option key={i + 1} value={i + 1}>\r\n//                   {i + 1}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <select\r\n//               id=\"dobMonth\"\r\n//               value={formData.dob.month}\r\n//               onChange={(e) =>\r\n//                 setFormData((prevState) => ({\r\n//                   ...prevState,\r\n//                   dob: { ...prevState.dob, month: e.target.value },\r\n//                 }))\r\n//               }\r\n//               required\r\n//             >\r\n//               <option value=\"\" disabled>\r\n//                 Month\r\n//               </option>\r\n//               {Array.from({ length: 12 }, (_, i) => (\r\n//                 <option key={i + 1} value={i + 1}>\r\n//                   {new Date(0, i).toLocaleString(\"default\", { month: \"long\" })}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <select\r\n//               id=\"dobYear\"\r\n//               value={formData.dob.year}\r\n//               onChange={(e) =>\r\n//                 setFormData((prevState) => ({\r\n//                   ...prevState,\r\n//                   dob: { ...prevState.dob, year: e.target.value },\r\n//                 }))\r\n//               }\r\n//               required\r\n//             >\r\n//               <option value=\"\" disabled>\r\n//                 Year\r\n//               </option>\r\n//               {Array.from({ length: 100 }, (_, i) => (\r\n//                 <option key={2024 - i} value={2024 - i}>\r\n//                   {2024 - i}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <button className=\"signup-button\" type=\"submit\">\r\n//           Sign up\r\n//         </button>\r\n//         <span>\r\n//           Already have an account?{\" \"}\r\n//           <Link to=\"/login\" className=\"pages-link\">\r\n//             Login\r\n//           </Link>\r\n//         </span>\r\n//       </form>\r\n//       <span className=\"terms\">\r\n//         By creating an account, you agree to our\r\n//         <Link to=\"/terms\" className=\"terms-pages-link\">\r\n//           {\" \"}\r\n//           Terms of Use\r\n//         </Link>\r\n//         ,\r\n//         <Link to=\"/privacy-policy\" className=\"terms-pages-link\">\r\n//           {\" \"}\r\n//           Privacy Policy\r\n//         </Link>\r\n//         .\r\n//       </span>\r\n//       <ToastContainer />\r\n//       {loading && (\r\n//         <div className={`loading-overlay ${fadeOut ? \"hidden\" : \"\"}`}>\r\n//           <img\r\n//             src=\"/apple-loading.gif\"\r\n//             alt=\"Loading...\"\r\n//             className=\"loading-spinner\"\r\n//           />\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Signup;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// frontend/src/pages/Signup.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport {\r\n  handleSuccess,\r\n  handleError,\r\n  ToastContainer,\r\n} from \"../utils/ReactToastify\";\r\nimport \"../utils/ReactToastifyCustom.css\";\r\nimport \"../utils/style/animations.css\";\r\nimport \"../utils/loading.css\";\r\n\r\nfunction Signup() {\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    phone: \"\",\r\n    dob: {\r\n      day: \"\",\r\n      month: \"\",\r\n      year: \"\",\r\n    },\r\n    gender: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [fadeIn, setFadeIn] = useState(true);\r\n  const [fadeOut, setFadeOut] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      setFadeIn(false);\r\n    }, 500);\r\n    return () => clearTimeout(timeoutId);\r\n  }, []);\r\n\r\n  // const handleChange = (e) => {\r\n  //   const { id, value } = e.target;\r\n  //   setFormData((prevState) => ({\r\n  //     ...prevState,\r\n  //     [id]: value,\r\n  //   }));\r\n  // };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (formData.password !== formData.confirmPassword) {\r\n      handleError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setFadeOut(false);\r\n\r\n    setTimeout(async () => {\r\n      setFadeOut(true);\r\n      setTimeout(async () => {\r\n        try {\r\n          const response = await fetch(\"http://localhost:8080/auth/signup\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              firstName: formData.firstName,\r\n              lastName: formData.lastName,\r\n              email: formData.email,\r\n              password: formData.password,\r\n              confirmPassword: formData.confirmPassword,\r\n              phone: formData.phone,\r\n              dob: formData.dob,\r\n              gender: formData.gender,\r\n            }),\r\n          });\r\n\r\n          const result = await response.json();\r\n          if (response.ok) {\r\n            handleSuccess(\"Signup successful! Please verify your email.\");\r\n\r\n            // Redirect to the VerifyCodeConfirmAccount page with the token\r\n            navigate(\"/verify-code-confirm-account\", {\r\n              state: { token: result.accessToken }, // Passing the token to the verification page\r\n            });\r\n          } else {\r\n            if (result.errors) {\r\n              const errorMessages = result.errors\r\n                .map((err) => `${err.field}: ${err.message}`)\r\n                .join(\", \");\r\n              handleError(errorMessages);\r\n            } else {\r\n              handleError(result.message);\r\n            }\r\n          }\r\n        } catch (err) {\r\n          handleError(\"Network error. Please check your connection and try again.\");\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      }, 250);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className={`signup-container container ${fadeIn ? \"fade-in\" : \"\"}`}>\r\n      <img src=\"/app-icon.ico\" alt=\"App Icon\" className=\"app-icon\" />\r\n      <h1>Sign up</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Form fields and labels */}\r\n        {/* [Code omitted for brevity, remains the same as the original] */}\r\n        <button className=\"signup-button\" type=\"submit\">\r\n          Sign up\r\n        </button>\r\n        <span>\r\n          Already have an account?{\" \"}\r\n          <Link to=\"/login\" className=\"pages-link\">\r\n            Login\r\n          </Link>\r\n        </span>\r\n      </form>\r\n      <span className=\"terms\">\r\n        By creating an account, you agree to our\r\n        <Link to=\"/terms\" className=\"terms-pages-link\">\r\n          {\" \"}\r\n          Terms of Use\r\n        </Link>\r\n        ,\r\n        <Link to=\"/privacy-policy\" className=\"terms-pages-link\">\r\n          {\" \"}\r\n          Privacy Policy\r\n        </Link>\r\n        .\r\n      </span>\r\n      <ToastContainer />\r\n      {loading && (\r\n        <div className={`loading-overlay ${fadeOut ? \"hidden\" : \"\"}`}>\r\n          <img\r\n            src=\"/apple-loading.gif\"\r\n            alt=\"Loading...\"\r\n            className=\"loading-spinner\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}