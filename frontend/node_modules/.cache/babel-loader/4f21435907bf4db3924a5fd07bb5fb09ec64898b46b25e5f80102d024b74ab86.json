{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// // App.js\n// import { Navigate, Route, Routes } from 'react-router-dom';\n// import { useState } from 'react';\n// import './App.css';\n// import Login from './pages/Login';\n// import Signup from './pages/Signup';\n// import Home from './pages/Home';\n// import RefrshHandler from './utils/RefrshHandler';\n// import 'react-toastify/dist/ReactToastify.css';\n\n// function App() {\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n//   const PrivateRoute = ({ element }) => {\n//     return isAuthenticated ? element : <Navigate to=\"/login\" />\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <RefrshHandler setIsAuthenticated={setIsAuthenticated} />\n//       <Routes>\n//         <Route path='/' element={<Navigate to=\"/login\" />} />\n//         <Route path='/login' element={<Login />} />\n//         <Route path='/signup' element={<Signup />} />\n//         <Route path='/home' element={<PrivateRoute element={<Home />} />} />\n//       </Routes>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useEffect } from 'react';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport { checkTokenValidity, refreshToken } from './utils/authUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const verifyToken = async () => {\n      const accessToken = localStorage.getItem('accessToken');\n      if (!accessToken) {\n        navigate('/login');\n        return;\n      }\n      const isValid = await checkTokenValidity(accessToken);\n      if (!isValid) {\n        const newToken = await refreshToken();\n        if (newToken) {\n          localStorage.setItem('accessToken', newToken);\n        } else {\n          navigate('/login');\n        }\n      }\n    };\n    verifyToken();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/signup\",\n      element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Routes","Route","useNavigate","Home","Login","Signup","checkTokenValidity","refreshToken","jsxDEV","_jsxDEV","App","_s","navigate","verifyToken","accessToken","localStorage","getItem","isValid","newToken","setItem","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/App.js"],"sourcesContent":["// // App.js\r\n// import { Navigate, Route, Routes } from 'react-router-dom';\r\n// import { useState } from 'react';\r\n// import './App.css';\r\n// import Login from './pages/Login';\r\n// import Signup from './pages/Signup';\r\n// import Home from './pages/Home';\r\n// import RefrshHandler from './utils/RefrshHandler';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n\r\n// function App() {\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n//   const PrivateRoute = ({ element }) => {\r\n//     return isAuthenticated ? element : <Navigate to=\"/login\" />\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <RefrshHandler setIsAuthenticated={setIsAuthenticated} />\r\n//       <Routes>\r\n//         <Route path='/' element={<Navigate to=\"/login\" />} />\r\n//         <Route path='/login' element={<Login />} />\r\n//         <Route path='/signup' element={<Signup />} />\r\n//         <Route path='/home' element={<PrivateRoute element={<Home />} />} />\r\n//       </Routes>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { Routes, Route, useNavigate } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/Signup';\r\nimport { checkTokenValidity, refreshToken } from './utils/authUtils';\r\n\r\nfunction App() {\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const verifyToken = async () => {\r\n            const accessToken = localStorage.getItem('accessToken');\r\n            if (!accessToken) {\r\n                navigate('/login');\r\n                return;\r\n            }\r\n            const isValid = await checkTokenValidity(accessToken);\r\n            if (!isValid) {\r\n                const newToken = await refreshToken();\r\n                if (newToken) {\r\n                    localStorage.setItem('accessToken', newToken);\r\n                } else {\r\n                    navigate('/login');\r\n                }\r\n            }\r\n        };\r\n\r\n        verifyToken();\r\n    }, [navigate]);\r\n\r\n    return (\r\n        <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/login\" element={<Login />} />\r\n            <Route path=\"/signup\" element={<Signup />} />\r\n        </Routes>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,MAAM,MAAM,gBAAgB;AACnC,SAASC,kBAAkB,EAAEC,YAAY,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACZ,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MACvD,IAAI,CAACF,WAAW,EAAE;QACdF,QAAQ,CAAC,QAAQ,CAAC;QAClB;MACJ;MACA,MAAMK,OAAO,GAAG,MAAMX,kBAAkB,CAACQ,WAAW,CAAC;MACrD,IAAI,CAACG,OAAO,EAAE;QACV,MAAMC,QAAQ,GAAG,MAAMX,YAAY,CAAC,CAAC;QACrC,IAAIW,QAAQ,EAAE;UACVH,YAAY,CAACI,OAAO,CAAC,aAAa,EAAED,QAAQ,CAAC;QACjD,CAAC,MAAM;UACHN,QAAQ,CAAC,QAAQ,CAAC;QACtB;MACJ;IACJ,CAAC;IAEDC,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBACIH,OAAA,CAACT,MAAM;IAAAoB,QAAA,gBACHX,OAAA,CAACR,KAAK;MAACoB,IAAI,EAAC,GAAG;MAACC,OAAO,eAAEb,OAAA,CAACN,IAAI;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCjB,OAAA,CAACR,KAAK;MAACoB,IAAI,EAAC,QAAQ;MAACC,OAAO,eAAEb,OAAA,CAACL,KAAK;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3CjB,OAAA,CAACR,KAAK;MAACoB,IAAI,EAAC,SAAS;MAACC,OAAO,eAAEb,OAAA,CAACJ,MAAM;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEjB;AAACf,EAAA,CA/BQD,GAAG;EAAA,QACSR,WAAW;AAAA;AAAAyB,EAAA,GADvBjB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}