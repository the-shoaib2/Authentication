{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\utils\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { checkAuthentication } from '../utils/ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const isAuthenticated = !!localStorage.getItem('token'); // Example check for authentication\n\n  useEffect(() => {\n    const checkExistingAuth = async () => {\n      const isAuth = await checkAuthentication();\n      if (!isAuth) {\n        navigate('/login', {\n          replace: true\n        });\n      }\n    };\n    checkExistingAuth();\n  }, [navigate]);\n  return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 41\n  }, this);\n};\n_s(ProtectedRoute, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","Navigate","useNavigate","checkAuthentication","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","navigate","isAuthenticated","localStorage","getItem","checkExistingAuth","isAuth","replace","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/utils/ProtectedRoute.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\nimport { checkAuthentication } from '../utils/ApiService';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n    const navigate = useNavigate();\r\n    const isAuthenticated = !!localStorage.getItem('token'); // Example check for authentication\r\n\r\n    useEffect(() => {\r\n        const checkExistingAuth = async () => {\r\n            const isAuth = await checkAuthentication();\r\n            if (!isAuth) {\r\n                navigate('/login', { replace: true });\r\n            }\r\n        };\r\n        checkExistingAuth();\r\n    }, [navigate]);\r\n\r\n    return isAuthenticated ? children : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,mBAAmB,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,eAAe,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;EAEzDZ,SAAS,CAAC,MAAM;IACZ,MAAMa,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,MAAMC,MAAM,GAAG,MAAMX,mBAAmB,CAAC,CAAC;MAC1C,IAAI,CAACW,MAAM,EAAE;QACTL,QAAQ,CAAC,QAAQ,EAAE;UAAEM,OAAO,EAAE;QAAK,CAAC,CAAC;MACzC;IACJ,CAAC;IACDF,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,OAAOC,eAAe,GAAGH,QAAQ,gBAAGF,OAAA,CAACJ,QAAQ;IAACe,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChE,CAAC;AAACZ,EAAA,CAfIF,cAAc;EAAA,QACCJ,WAAW;AAAA;AAAAmB,EAAA,GAD1Bf,cAAc;AAiBpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}