{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\components\\\\ForgotPassword\\\\SentOtpForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { handleSuccess, handleError, ToastContainer } from '../../utils/ReactToastify';\nimport '../../utils/ReactToastifyCustom.css';\nimport '../../utils/style/SentOtpForgotPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OtpInput = ({\n  length = 6,\n  onOtpSubmit = () => {}\n}) => {};\n_c = OtpInput;\nfunction SentOtpForgotPassword() {\n  _s();\n  const [otp, setOtp] = useState('');\n  const [timer, setTimer] = useState(30);\n  const [isResendEnabled, setIsResendEnabled] = useState(false);\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8080/verification/forgot-password/verify-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: state.email,\n          otp\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        handleSuccess(result.message);\n        navigate('/forgot-password/reset-password', {\n          state: {\n            email: state.email\n          }\n        });\n      } else {\n        handleError(result.message);\n      }\n    } catch (err) {\n      handleError('Network error. Please check your connection and try again.');\n    }\n  };\n  const handleResendOtp = async () => {\n    try {\n      // Code to resend OTP\n      // Add your resend OTP logic here\n      setIsResendEnabled(false);\n    } catch (err) {\n      handleError('Failed to resend OTP. Please try again.');\n    }\n  };\n  useEffect(() => {\n    if (timer === 0) setIsResendEnabled(true);\n    const countdown = setInterval(() => {\n      setTimer(prev => prev > 0 ? prev - 1 : 0);\n    }, 1000);\n    return () => clearInterval(countdown);\n  }, [timer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"otp-title\",\n      children: \"Verify OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-timer\",\n      children: [\"Time Remaining: \", timer, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(OtpInput, {\n        length: 6,\n        onOtpSubmit: otp => setOtp(otp)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otp-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `otp-btn ${timer === 0 ? 'resend' : 'verify'}`,\n          disabled: timer > 0 && !isResendEnabled,\n          onClick: timer === 0 ? handleResendOtp : undefined,\n          children: timer === 0 ? 'Resend OTP' : 'Verify OTP'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(SentOtpForgotPassword, \"B6I0G8afmuorp7yEhhfgqdUwlrU=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c2 = SentOtpForgotPassword;\nexport default SentOtpForgotPassword;\nvar _c, _c2;\n$RefreshReg$(_c, \"OtpInput\");\n$RefreshReg$(_c2, \"SentOtpForgotPassword\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useLocation","handleSuccess","handleError","ToastContainer","jsxDEV","_jsxDEV","OtpInput","length","onOtpSubmit","_c","SentOtpForgotPassword","_s","otp","setOtp","timer","setTimer","isResendEnabled","setIsResendEnabled","state","navigate","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","email","result","json","ok","message","err","handleResendOtp","countdown","setInterval","prev","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","disabled","onClick","undefined","_c2","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/components/ForgotPassword/SentOtpForgotPassword.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { handleSuccess, handleError, ToastContainer } from '../../utils/ReactToastify';\r\nimport '../../utils/ReactToastifyCustom.css';\r\nimport '../../utils/style/SentOtpForgotPassword.css';\r\n\r\nconst OtpInput = ({length = 6, onOtpSubmit = () => {}}) => {\r\n};\r\n\r\nfunction SentOtpForgotPassword() {\r\n    const [otp, setOtp] = useState('');\r\n    const [timer, setTimer] = useState(30);\r\n    const [isResendEnabled, setIsResendEnabled] = useState(false);\r\n    const { state } = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await fetch('http://localhost:8080/verification/forgot-password/verify-otp', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ email: state.email, otp }),\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            if (response.ok) {\r\n                handleSuccess(result.message);\r\n                navigate('/forgot-password/reset-password', { state: { email: state.email } });\r\n            } else {\r\n                handleError(result.message);\r\n            }\r\n        } catch (err) {\r\n            handleError('Network error. Please check your connection and try again.');\r\n        }\r\n    };\r\n\r\n    const handleResendOtp = async () => {\r\n        try {\r\n            // Code to resend OTP\r\n            // Add your resend OTP logic here\r\n            setIsResendEnabled(false);\r\n        } catch (err) {\r\n            handleError('Failed to resend OTP. Please try again.');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (timer === 0) setIsResendEnabled(true);\r\n        const countdown = setInterval(() => {\r\n            setTimer((prev) => (prev > 0 ? prev - 1 : 0));\r\n        }, 1000);\r\n\r\n        return () => clearInterval(countdown);\r\n    }, [timer]);\r\n\r\n    return (\r\n        <div className=\"otp-wrapper\">\r\n            <h1 className=\"otp-title\">Verify OTP</h1>\r\n            <div className=\"otp-timer\">\r\n                Time Remaining: {timer}s\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n                <OtpInput length={6} onOtpSubmit={(otp) => setOtp(otp)} />\r\n                <div className=\"otp-buttons\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className={`otp-btn ${timer === 0 ? 'resend' : 'verify'}`}\r\n                        disabled={timer > 0 && !isResendEnabled}\r\n                        onClick={timer === 0 ? handleResendOtp : undefined}\r\n                    >\r\n                        {timer === 0 ? 'Resend OTP' : 'Verify OTP'}\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SentOtpForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}