{"ast":null,"code":"// // frontend/src/pages/Login.jsx\n\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\n// import '../assets/style/ReactToastifyCustom.css';\n// import '../assets/style/loading.css';\n// import '../assets/style/animations.css';\n// import '../assets/style/Login.css';\n// import LoadingOverlay from '../components/LoadingOverlay';\n// import { refreshToken } from '../utils/RefreshHandler';\n\n// function Login() {\n//     const [emailOrUsername, setEmailOrUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [loading, setLoading] = useState(false);\n//     const [fadeIn, setFadeIn] = useState(true);\n//     const [fadeOut, setFadeOut] = useState(false);\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         const timeoutId = setTimeout(() => {\n//             setFadeIn(false);\n//         }, 500);\n//         return () => clearTimeout(timeoutId);\n//     }, []);\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         setLoading(true);\n//         setFadeOut(false);\n\n//         setTimeout(async () => {\n//             setFadeOut(true);\n//             setTimeout(async () => {\n//                 try {\n//                     const response = await fetch(\"http://localhost:8080/auth/login\", {\n//                         method: 'POST',\n//                         headers: {\n//                             'Content-Type': 'application/json',\n//                         },\n//                         body: JSON.stringify({ emailOrUsername, password }),\n//                     });\n//                     const result = await response.json();\n//                     if (response.ok) {\n//                         localStorage.setItem('token', result.accessToken);\n//                         localStorage.setItem('refreshToken', result.refreshToken);\n//                         localStorage.setItem('loggedInUser', JSON.stringify(result));\n//                         handleSuccess('Login successful!');\n//                         await refreshToken(); // Refresh the token immediately after login\n//                         setTimeout(() => navigate('/home'), 500);\n//                     } else {\n//                         handleError(result.message || 'Incorrect email/username or password. Please try again.');\n//                     }\n//                 } catch (err) {\n//                     handleError('Network error. Please check your connection and try again.');\n//                 } finally {\n//                     setLoading(false);\n//                 }\n//             }, 250);\n//         }, 1000);\n//     };\n\n//     return (\n//         <div className=\"login-page-wrapper\">\n//             <div className={`login-page-container general-page-container fade-in ${fadeIn ? 'fade-in-bottom' : ''}`}>\n//                 <img src='/images/icon/app-icon.png' alt='App Icon' className='login-page-app-icon' />\n//                 <h1>Login</h1>\n//                 <form onSubmit={handleSubmit}>\n//                     <div className='login-page-form-group'>\n//                         <input\n//                             type='text'\n//                             id='emailOrUsername'\n//                             placeholder=' '\n//                             value={emailOrUsername}\n//                             onChange={(e) => setEmailOrUsername(e.target.value)}\n//                             required\n//                         />\n//                         <label htmlFor='emailOrUsername' className='login-page-form-label'>Email or Username</label>\n//                     </div>\n//                     <div className='login-page-form-group'>\n//                         <input\n//                             type='password'\n//                             id='password'\n//                             placeholder=' '\n//                             value={password}\n//                             onChange={(e) => setPassword(e.target.value)}\n//                             required\n//                         />\n//                         <label htmlFor='password' className='login-page-form-label'>Password</label>\n//                     </div>\n//                     <button type='submit' className='login-page-submit-button'>Login</button>\n//                     <Link to=\"/find-user\" className='login-page-navigation-link'>Forgot Password?</Link>\n//                     <span className='login-page-info-text'>Don't have an account? <Link to=\"/signup\" className='login-page-navigation-link'>Signup</Link></span>\n//                 </form>\n//             </div>\n//             <ToastContainer />\n//             <LoadingOverlay loading={loading} fadeOut={fadeOut} />\n//         </div>\n//     );\n// }\n\n// export default Login;","map":{"version":3,"names":[],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/pages/Login.jsx"],"sourcesContent":["// // frontend/src/pages/Login.jsx\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate, Link } from 'react-router-dom';\r\n// import { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\r\n// import '../assets/style/ReactToastifyCustom.css';\r\n// import '../assets/style/loading.css';\r\n// import '../assets/style/animations.css';\r\n// import '../assets/style/Login.css';\r\n// import LoadingOverlay from '../components/LoadingOverlay';\r\n// import { refreshToken } from '../utils/RefreshHandler';\r\n\r\n// function Login() {\r\n//     const [emailOrUsername, setEmailOrUsername] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [loading, setLoading] = useState(false);\r\n//     const [fadeIn, setFadeIn] = useState(true);\r\n//     const [fadeOut, setFadeOut] = useState(false);\r\n//     const navigate = useNavigate();\r\n\r\n//     useEffect(() => {\r\n//         const timeoutId = setTimeout(() => {\r\n//             setFadeIn(false);\r\n//         }, 500);\r\n//         return () => clearTimeout(timeoutId);\r\n//     }, []);\r\n\r\n//     const handleSubmit = async (event) => {\r\n//         event.preventDefault();\r\n//         setLoading(true);\r\n//         setFadeOut(false);\r\n\r\n//         setTimeout(async () => {\r\n//             setFadeOut(true);\r\n//             setTimeout(async () => {\r\n//                 try {\r\n//                     const response = await fetch(\"http://localhost:8080/auth/login\", {\r\n//                         method: 'POST',\r\n//                         headers: {\r\n//                             'Content-Type': 'application/json',\r\n//                         },\r\n//                         body: JSON.stringify({ emailOrUsername, password }),\r\n//                     });\r\n//                     const result = await response.json();\r\n//                     if (response.ok) {\r\n//                         localStorage.setItem('token', result.accessToken);\r\n//                         localStorage.setItem('refreshToken', result.refreshToken);\r\n//                         localStorage.setItem('loggedInUser', JSON.stringify(result));\r\n//                         handleSuccess('Login successful!');\r\n//                         await refreshToken(); // Refresh the token immediately after login\r\n//                         setTimeout(() => navigate('/home'), 500);\r\n//                     } else {\r\n//                         handleError(result.message || 'Incorrect email/username or password. Please try again.');\r\n//                     }\r\n//                 } catch (err) {\r\n//                     handleError('Network error. Please check your connection and try again.');\r\n//                 } finally {\r\n//                     setLoading(false);\r\n//                 }\r\n//             }, 250);\r\n//         }, 1000);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"login-page-wrapper\">\r\n//             <div className={`login-page-container general-page-container fade-in ${fadeIn ? 'fade-in-bottom' : ''}`}>\r\n//                 <img src='/images/icon/app-icon.png' alt='App Icon' className='login-page-app-icon' />\r\n//                 <h1>Login</h1>\r\n//                 <form onSubmit={handleSubmit}>\r\n//                     <div className='login-page-form-group'>\r\n//                         <input\r\n//                             type='text'\r\n//                             id='emailOrUsername'\r\n//                             placeholder=' '\r\n//                             value={emailOrUsername}\r\n//                             onChange={(e) => setEmailOrUsername(e.target.value)}\r\n//                             required\r\n//                         />\r\n//                         <label htmlFor='emailOrUsername' className='login-page-form-label'>Email or Username</label>\r\n//                     </div>\r\n//                     <div className='login-page-form-group'>\r\n//                         <input\r\n//                             type='password'\r\n//                             id='password'\r\n//                             placeholder=' '\r\n//                             value={password}\r\n//                             onChange={(e) => setPassword(e.target.value)}\r\n//                             required\r\n//                         />\r\n//                         <label htmlFor='password' className='login-page-form-label'>Password</label>\r\n//                     </div>\r\n//                     <button type='submit' className='login-page-submit-button'>Login</button>\r\n//                     <Link to=\"/find-user\" className='login-page-navigation-link'>Forgot Password?</Link>\r\n//                     <span className='login-page-info-text'>Don't have an account? <Link to=\"/signup\" className='login-page-navigation-link'>Signup</Link></span>\r\n//                 </form>\r\n//             </div>\r\n//             <ToastContainer />\r\n//             <LoadingOverlay loading={loading} fadeOut={fadeOut} />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Login;\r\n\r\n\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}