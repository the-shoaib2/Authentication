{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\pages\\\\VerifyCodeConfirmAccount.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/VerifyCodeConfirmAccount.jsx\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\nimport '../utils/ReactToastifyCustom.css';\nimport '../utils/style/SentOtpForgotPassword.css';\nimport OtpInput from '../Services/OtpInput';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VerifyCodeConfirmAccount() {\n  _s();\n  const [otp, setOtp] = useState('');\n  const [timer, setTimer] = useState(0);\n  const [isResendEnabled, setIsResendEnabled] = useState(false);\n  const [isComplete, setIsComplete] = useState(false);\n  const [hasCodeBeenSent, setHasCodeBeenSent] = useState(false);\n  const {\n    state\n  } = useLocation(); // Get token from location state\n  const navigate = useNavigate();\n  const fetchUserData = useCallback(async () => {\n    try {\n      const response = await fetch('http://localhost:8080/Users/me', {\n        headers: {\n          Authorization: `Bearer ${state.token}`\n        }\n      });\n      const result = await response.json();\n      if (response.ok) {\n        if (result.isActive) {\n          navigate('/home');\n        }\n      } else {\n        handleError(result.message || 'Failed to fetch user data. Please try again.');\n        navigate('/login');\n      }\n    } catch (err) {\n      handleError('Network error. Please check your connection and try again.');\n      navigate('/login');\n    }\n  }, [state.token, navigate]);\n  useEffect(() => {\n    if (!(state !== null && state !== void 0 && state.token)) {\n      // If there's no token, redirect to the login page\n      handleError('Unauthorized access. Please log in.');\n      navigate('/login');\n    } else {\n      // Fetch user data to check isActive status\n      fetchUserData();\n    }\n  }, [state, navigate, fetchUserData]);\n\n  // Handle countdown timer\n  useEffect(() => {\n    if (timer > 0) {\n      const countdown = setInterval(() => {\n        setTimer(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(countdown);\n    } else {\n      setIsResendEnabled(true);\n    }\n  }, [timer]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8080/verification/verify-email', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${state.token}` // Use the token for verification\n        },\n        body: JSON.stringify({\n          code: otp\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        handleSuccess(result.message);\n\n        // Use HttpOnly cookies instead of localStorage\n        document.cookie = `authToken=${result.token}; path=/; HttpOnly; Secure`;\n        navigate('/home');\n      } else {\n        handleError(result.message);\n      }\n    } catch (err) {\n      handleError('Network error. Please check your connection and try again.');\n    }\n  };\n  const handleSendOtp = async () => {\n    try {\n      setHasCodeBeenSent(true);\n      setIsResendEnabled(false);\n      setTimer(60); // Start timer when sending the code\n\n      const response = await fetch('http://localhost:8080/verification/verification-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${state.token}` // Use the token\n        }\n      });\n      const result = await response.json();\n      if (response.ok) {\n        handleSuccess(result.message);\n      } else {\n        handleError(result.message);\n      }\n    } catch (err) {\n      handleError('Failed to send OTP. Please try again.');\n    }\n  };\n  const handleResendOtp = async () => {\n    try {\n      setIsResendEnabled(false);\n      setTimer(60); // Reset timer when resending the code\n\n      const response = await fetch('http://localhost:8080/verification/verification-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${state.token}` // Use the token\n        }\n      });\n      const result = await response.json();\n      if (response.ok) {\n        handleSuccess(result.message);\n      } else {\n        handleError(result.message);\n      }\n    } catch (err) {\n      handleError('Failed to resend OTP. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/app-icon.ico\",\n        alt: \"App Icon\",\n        className: \"app-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"otp-title\",\n      children: \"Confirm Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-timer\",\n      children: [hasCodeBeenSent ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"We've sent a verification code to your registered email address.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click the button to send the verification code to your email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time Remaining: \", timer, \" s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otp-buttons\",\n        children: !hasCodeBeenSent ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"otp-btn send\",\n          onClick: handleSendOtp,\n          children: \"Send Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this) : timer === 0 && isResendEnabled ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"otp-btn resend\",\n          onClick: handleResendOtp,\n          children: \"Resend Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this) : hasCodeBeenSent && timer > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(OtpInput, {\n            length: 6,\n            onOtpSubmit: otp => setOtp(otp),\n            onOtpComplete: complete => setIsComplete(complete)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `otp-btn verify ${isComplete ? 'active' : ''}`,\n            disabled: !isComplete,\n            children: \"Verify Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n}\n_s(VerifyCodeConfirmAccount, \"kwng+9cjoalpKWl8rUimw/CJxAA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = VerifyCodeConfirmAccount;\nexport default VerifyCodeConfirmAccount;\n\n// frontend/src/pages/VerifyCodeConfirmAccount.jsx\nvar _c;\n$RefreshReg$(_c, \"VerifyCodeConfirmAccount\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useLocation","handleSuccess","handleError","ToastContainer","OtpInput","jsxDEV","_jsxDEV","Fragment","_Fragment","VerifyCodeConfirmAccount","_s","otp","setOtp","timer","setTimer","isResendEnabled","setIsResendEnabled","isComplete","setIsComplete","hasCodeBeenSent","setHasCodeBeenSent","state","navigate","fetchUserData","response","fetch","headers","Authorization","token","result","json","ok","isActive","message","err","countdown","setInterval","prev","clearInterval","handleSubmit","event","preventDefault","method","body","JSON","stringify","code","document","cookie","handleSendOtp","handleResendOtp","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onClick","length","onOtpSubmit","onOtpComplete","complete","disabled","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/pages/VerifyCodeConfirmAccount.jsx"],"sourcesContent":["\r\n// frontend/src/pages/VerifyCodeConfirmAccount.jsx\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\r\nimport '../utils/ReactToastifyCustom.css';\r\nimport '../utils/style/SentOtpForgotPassword.css';\r\nimport OtpInput from '../Services/OtpInput';\r\n\r\nfunction VerifyCodeConfirmAccount() {\r\n    const [otp, setOtp] = useState('');\r\n    const [timer, setTimer] = useState(0);\r\n    const [isResendEnabled, setIsResendEnabled] = useState(false);\r\n    const [isComplete, setIsComplete] = useState(false);\r\n    const [hasCodeBeenSent, setHasCodeBeenSent] = useState(false);\r\n    const { state } = useLocation(); // Get token from location state\r\n    const navigate = useNavigate();\r\n\r\n    const fetchUserData = useCallback(async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8080/Users/me', {\r\n                headers: {\r\n                    Authorization: `Bearer ${state.token}`,\r\n                },\r\n            });\r\n            const result = await response.json();\r\n            if (response.ok) {\r\n                if (result.isActive) {\r\n                    navigate('/home');\r\n                }\r\n            } else {\r\n                handleError(result.message || 'Failed to fetch user data. Please try again.');\r\n                navigate('/login');\r\n            }\r\n        } catch (err) {\r\n            handleError('Network error. Please check your connection and try again.');\r\n            navigate('/login');\r\n        }\r\n    }, [state.token, navigate]);\r\n\r\n    useEffect(() => {\r\n        if (!state?.token) {\r\n            // If there's no token, redirect to the login page\r\n            handleError('Unauthorized access. Please log in.');\r\n            navigate('/login');\r\n        } else {\r\n            // Fetch user data to check isActive status\r\n            fetchUserData();\r\n        }\r\n    }, [state, navigate, fetchUserData]);\r\n\r\n    // Handle countdown timer\r\n    useEffect(() => {\r\n        if (timer > 0) {\r\n            const countdown = setInterval(() => {\r\n                setTimer((prev) => prev - 1);\r\n            }, 1000);\r\n\r\n            return () => clearInterval(countdown);\r\n        } else {\r\n            setIsResendEnabled(true);\r\n        }\r\n    }, [timer]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await fetch('http://localhost:8080/verification/verify-email', {\r\n                method: 'POST',\r\n                headers: { \r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${state.token}`, // Use the token for verification\r\n                },\r\n                body: JSON.stringify({ code: otp }),\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            if (response.ok) {\r\n                handleSuccess(result.message);\r\n                \r\n                // Use HttpOnly cookies instead of localStorage\r\n                document.cookie = `authToken=${result.token}; path=/; HttpOnly; Secure`;\r\n                \r\n                navigate('/home');\r\n            } else {\r\n                handleError(result.message);\r\n            }\r\n        } catch (err) {\r\n            handleError('Network error. Please check your connection and try again.');\r\n        }\r\n    };\r\n\r\n    const handleSendOtp = async () => {\r\n        try {\r\n            setHasCodeBeenSent(true);\r\n            setIsResendEnabled(false);\r\n            setTimer(60); // Start timer when sending the code\r\n            \r\n            const response = await fetch('http://localhost:8080/verification/verification-code', {\r\n                method: 'POST',\r\n                headers: { \r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${state.token}`, // Use the token\r\n                },\r\n            });\r\n    \r\n            const result = await response.json();\r\n    \r\n            if (response.ok) {\r\n                handleSuccess(result.message);\r\n            } else {\r\n                handleError(result.message);\r\n            }\r\n        } catch (err) {\r\n            handleError('Failed to send OTP. Please try again.');\r\n        }\r\n    };\r\n\r\n    const handleResendOtp = async () => {\r\n        try {\r\n            setIsResendEnabled(false);\r\n            setTimer(60); // Reset timer when resending the code\r\n            \r\n            const response = await fetch('http://localhost:8080/verification/verification-code', {\r\n                method: 'POST',\r\n                headers: { \r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${state.token}`, // Use the token\r\n                },\r\n            });\r\n    \r\n            const result = await response.json();\r\n    \r\n            if (response.ok) {\r\n                handleSuccess(result.message);\r\n            } else {\r\n                handleError(result.message);\r\n            }\r\n        } catch (err) {\r\n            handleError('Failed to resend OTP. Please try again.');\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n        <div className=\"otp-wrapper\">\r\n            <div>\r\n                <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\r\n            </div>\r\n            <h1 className=\"otp-title\">Confirm Email</h1>\r\n            <div className=\"otp-timer\">\r\n                {hasCodeBeenSent ? (\r\n                    <p>We've sent a verification code to your registered email address.</p>\r\n                ) : (\r\n                    <p>Click the button to send the verification code to your email.</p>\r\n                )}\r\n                <div className=\"timer\">\r\n                    <p>Time Remaining: {timer} s</p>\r\n                </div>\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"otp-buttons\">\r\n                    {!hasCodeBeenSent ? (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"otp-btn send\"\r\n                            onClick={handleSendOtp}\r\n                        >\r\n                            Send Code\r\n                        </button>\r\n                    ) : timer === 0 && isResendEnabled ? (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"otp-btn resend\"\r\n                            onClick={handleResendOtp}\r\n                        >\r\n                            Resend Code\r\n                        </button>\r\n                    ) : hasCodeBeenSent && timer > 0 ? (\r\n                        <>\r\n                            <OtpInput\r\n                                length={6}\r\n                                onOtpSubmit={(otp) => setOtp(otp)}\r\n                                onOtpComplete={(complete) => setIsComplete(complete)}\r\n                            />\r\n                            <button\r\n                                type=\"submit\"\r\n                                className={`otp-btn verify ${isComplete ? 'active' : ''}`}\r\n                                disabled={!isComplete}\r\n                            >\r\n                                Verify Code\r\n                            </button>\r\n                        </>\r\n                    ) : null}\r\n                </div>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VerifyCodeConfirmAccount;\r\n\r\n\r\n// frontend/src/pages/VerifyCodeConfirmAccount.jsx"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}