{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\Services\\\\OtpInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OtpInput = ({\n  length = 6,\n  onOtpSubmit = () => {},\n  onOtpComplete = () => {}\n}) => {\n  _s();\n  const [otp, setOtp] = useState(new Array(length).fill(\"\"));\n  const inputRefs = useRef([]);\n  useEffect(() => {\n    if (inputRefs.current[0]) {\n      inputRefs.current[0].focus();\n    }\n  }, []);\n  useEffect(() => {\n    onOtpComplete(otp.every(value => value !== \"\"));\n  }, [otp, onOtpComplete]);\n  const handleChange = (index, e) => {\n    const value = e.target.value;\n    if (isNaN(value) || value.length > 1) return;\n    const newOtp = [...otp];\n    newOtp[index] = value; // Directly replace the value\n    setOtp(newOtp);\n\n    // Focus on the next input field if value is entered\n    if (value && index < length - 1) {\n      inputRefs.current[index + 1].focus();\n    }\n\n    // Auto-submit if all fields are filled\n    if (newOtp.every(digit => digit !== \"\")) {\n      onOtpSubmit(newOtp.join(\"\"));\n    }\n  };\n  const handleKeyDown = (index, e) => {\n    if (e.key === \"Backspace\") {\n      // Move focus to the previous input if the current one is empty\n      if (!otp[index] && index > 0) {\n        inputRefs.current[index - 1].focus();\n        moveCursorToEnd(inputRefs.current[index - 1]);\n      }\n    } else if (e.key === \"ArrowLeft\") {\n      e.preventDefault();\n      // Move focus to the previous input field\n      if (index > 0) {\n        inputRefs.current[index - 1].focus();\n        setTimeout(() => moveCursorToEnd(inputRefs.current[index - 1]), 0);\n      }\n    } else if (e.key === \"ArrowRight\") {\n      e.preventDefault();\n      // Move focus to the next input field\n      if (index < length - 1) {\n        inputRefs.current[index + 1].focus();\n        setTimeout(() => moveCursorToEnd(inputRefs.current[index + 1]), 0);\n      }\n    } else if (e.key === \"Tab\") {\n      e.preventDefault(); // Prevent default tab behavior\n      if (e.shiftKey && index > 0) {\n        inputRefs.current[index - 1].focus();\n        moveCursorToEnd(inputRefs.current[index - 1]);\n      } else if (!e.shiftKey && index < length - 1) {\n        inputRefs.current[index + 1].focus();\n        moveCursorToEnd(inputRefs.current[index + 1]);\n      }\n    } else if (e.key === \"Enter\") {\n      // Move focus to the next input field or trigger submission\n      if (index < length - 1) {\n        inputRefs.current[index + 1].focus();\n        setTimeout(() => moveCursorToEnd(inputRefs.current[index + 1]), 0);\n      } else if (index === length - 1 && otp.every(value => value !== \"\")) {\n        onOtpSubmit(otp.join(\"\"));\n      }\n    }\n  };\n  const handlePaste = e => {\n    e.preventDefault();\n    const pasteData = e.clipboardData.getData(\"text\").replace(/[^0-9]/g, \"\").slice(0, length).split(\"\");\n    const newOtp = [...otp];\n    pasteData.forEach((digit, i) => {\n      newOtp[i] = digit;\n      inputRefs.current[i].value = digit;\n    });\n    setOtp(newOtp);\n    if (pasteData.length === length) {\n      onOtpSubmit(newOtp.join(\"\"));\n    } else {\n      const nextIndex = pasteData.length < length ? pasteData.length : length - 1;\n      inputRefs.current[nextIndex].focus();\n    }\n  };\n  const handleClick = index => {\n    const input = inputRefs.current[index];\n    input.focus();\n    input.setSelectionRange(0, input.value.length); // Select the entire value\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-input-wrapper\",\n    children: otp.map((value, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: input => inputRefs.current[index] = input,\n      value: value,\n      onChange: e => handleChange(index, e),\n      onKeyDown: e => handleKeyDown(index, e),\n      onPaste: e => handlePaste(e),\n      onClick: () => handleClick(index),\n      className: \"otpField\",\n      maxLength: 1,\n      inputMode: \"numeric\",\n      autoComplete: \"off\" // Disable autocomplete/suggestions\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(OtpInput, \"KtsFwcsXKrX6tESIX2coBILhJOc=\");\n_c = OtpInput;\nexport default OtpInput;\nvar _c;\n$RefreshReg$(_c, \"OtpInput\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","OtpInput","length","onOtpSubmit","onOtpComplete","_s","otp","setOtp","Array","fill","inputRefs","current","focus","every","value","handleChange","index","e","target","isNaN","newOtp","digit","join","handleKeyDown","key","moveCursorToEnd","preventDefault","setTimeout","shiftKey","handlePaste","pasteData","clipboardData","getData","replace","slice","split","forEach","i","nextIndex","handleClick","input","setSelectionRange","className","children","map","type","ref","onChange","onKeyDown","onPaste","onClick","maxLength","inputMode","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/Services/OtpInput.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nconst OtpInput = ({\r\n  length = 6,\r\n  onOtpSubmit = () => {},\r\n  onOtpComplete = () => {},\r\n}) => {\r\n  const [otp, setOtp] = useState(new Array(length).fill(\"\"));\r\n  const inputRefs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    if (inputRefs.current[0]) {\r\n      inputRefs.current[0].focus();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    onOtpComplete(otp.every((value) => value !== \"\"));\r\n  }, [otp, onOtpComplete]);\r\n\r\n  const handleChange = (index, e) => {\r\n    const value = e.target.value;\r\n    if (isNaN(value) || value.length > 1) return;\r\n\r\n    const newOtp = [...otp];\r\n    newOtp[index] = value; // Directly replace the value\r\n    setOtp(newOtp);\r\n\r\n    // Focus on the next input field if value is entered\r\n    if (value && index < length - 1) {\r\n      inputRefs.current[index + 1].focus();\r\n    }\r\n\r\n    // Auto-submit if all fields are filled\r\n    if (newOtp.every((digit) => digit !== \"\")) {\r\n      onOtpSubmit(newOtp.join(\"\"));\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (index, e) => {\r\n    if (e.key === \"Backspace\") {\r\n      // Move focus to the previous input if the current one is empty\r\n      if (!otp[index] && index > 0) {\r\n        inputRefs.current[index - 1].focus();\r\n        moveCursorToEnd(inputRefs.current[index - 1]);\r\n      }\r\n    } else if (e.key === \"ArrowLeft\") {\r\n      e.preventDefault();\r\n      // Move focus to the previous input field\r\n      if (index > 0) {\r\n        inputRefs.current[index - 1].focus();\r\n        setTimeout(() => moveCursorToEnd(inputRefs.current[index - 1]), 0);\r\n      }\r\n    } else if (e.key === \"ArrowRight\") {\r\n      e.preventDefault();\r\n      // Move focus to the next input field\r\n      if (index < length - 1) {\r\n        inputRefs.current[index + 1].focus();\r\n        setTimeout(() => moveCursorToEnd(inputRefs.current[index + 1]), 0);\r\n      }\r\n    } else if (e.key === \"Tab\") {\r\n      e.preventDefault(); // Prevent default tab behavior\r\n      if (e.shiftKey && index > 0) {\r\n        inputRefs.current[index - 1].focus();\r\n        moveCursorToEnd(inputRefs.current[index - 1]);\r\n      } else if (!e.shiftKey && index < length - 1) {\r\n        inputRefs.current[index + 1].focus();\r\n        moveCursorToEnd(inputRefs.current[index + 1]);\r\n      }\r\n    } else if (e.key === \"Enter\") {\r\n      // Move focus to the next input field or trigger submission\r\n      if (index < length - 1) {\r\n        inputRefs.current[index + 1].focus();\r\n        setTimeout(() => moveCursorToEnd(inputRefs.current[index + 1]), 0);\r\n      } else if (index === length - 1 && otp.every((value) => value !== \"\")) {\r\n        onOtpSubmit(otp.join(\"\"));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePaste = (e) => {\r\n    e.preventDefault();\r\n    const pasteData = e.clipboardData\r\n      .getData(\"text\")\r\n      .replace(/[^0-9]/g, \"\")\r\n      .slice(0, length)\r\n      .split(\"\");\r\n\r\n    const newOtp = [...otp];\r\n    pasteData.forEach((digit, i) => {\r\n      newOtp[i] = digit;\r\n      inputRefs.current[i].value = digit;\r\n    });\r\n\r\n    setOtp(newOtp);\r\n    if (pasteData.length === length) {\r\n      onOtpSubmit(newOtp.join(\"\"));\r\n    } else {\r\n      const nextIndex = pasteData.length < length ? pasteData.length : length - 1;\r\n      inputRefs.current[nextIndex].focus();\r\n    }\r\n  };\r\n\r\n  const handleClick = (index) => {\r\n    const input = inputRefs.current[index];\r\n    input.focus();\r\n    input.setSelectionRange(0, input.value.length); // Select the entire value\r\n  };\r\n\r\n  return (\r\n    <div className=\"otp-input-wrapper\">\r\n      {otp.map((value, index) => (\r\n        <input\r\n          key={index}\r\n          type=\"text\"\r\n          ref={(input) => (inputRefs.current[index] = input)}\r\n          value={value}\r\n          onChange={(e) => handleChange(index, e)}\r\n          onKeyDown={(e) => handleKeyDown(index, e)}\r\n          onPaste={(e) => handlePaste(e)}\r\n          onClick={() => handleClick(index)}\r\n          className=\"otpField\"\r\n          maxLength={1}\r\n          inputMode=\"numeric\"\r\n          autoComplete=\"off\" // Disable autocomplete/suggestions\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtpInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}