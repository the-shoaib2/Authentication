{"ast":null,"code":"// // // frontend/src/pages/UserProfile.js\n\n// // import React, { useEffect, useState } from 'react';\n// // import { useNavigate } from 'react-router-dom';\n// // import { handleError, handleSuccess } from '../utils/ReactToastify';\n// // import { ToastContainer } from 'react-toastify';\n// // import '../utils/ReactToastifyCustom.css';\n// // import '../utils/style/profile.css';\n\n// // function UserProfile() {\n// //     const [user, setUser] = useState({});\n// //     const [loading, setLoading] = useState(true);\n// //     const [showLogoutModal, setShowLogoutModal] = useState(false);\n// //     const navigate = useNavigate();\n\n// //     useEffect(() => {\n// //         fetchUserProfile();\n// //     }, []);\n\n// //     const fetchUserProfile = async () => {\n// //         setLoading(true);\n// //         try {\n// //             const response = await fetch('http://localhost:8080/Users/me', {\n// //                 headers: {\n// //                     'Authorization': `Bearer ${localStorage.getItem('token')}`\n// //                 }\n// //             });\n// //             const result = await response.json();\n// //             if (response.ok) {\n// //                 setUser(result);\n// //             } else {\n// //                 handleError(result.message || 'Failed to fetch user data. Please try again.');\n// //                 navigate('/login');\n// //             }\n// //         } catch (err) {\n// //             handleError('Network error. Please check your connection and try again.');\n// //             navigate('/login');\n// //         } finally {\n// //             setLoading(false);\n// //         }\n// //     };\n\n// //     const handleLogout = async () => {\n// //         try {\n// //             const response = await fetch(\"http://localhost:8080/auth/logout\", {\n// //                 method: 'POST',\n// //                 headers: {\n// //                     'Content-Type': 'application/json',\n// //                     'Authorization': `Bearer ${localStorage.getItem('token')}`\n// //                 },\n// //                 body: JSON.stringify({ refreshToken: localStorage.getItem('refreshToken') })\n// //             });\n// //             if (response.ok) {\n// //                 localStorage.removeItem('token');\n// //                 localStorage.removeItem('refreshToken');\n// //                 localStorage.removeItem('loggedInUser');\n// //                 handleSuccess('Logged out successfully! Redirecting...');\n// //                 setTimeout(() => navigate('/login'), 500);\n// //             } else {\n// //                 handleError('Failed to log out. Please try again.');\n// //             }\n// //         } catch (err) {\n// //             handleError('Network error. Please check your connection and try again.');\n// //         }\n// //     };\n\n// //     const openLogoutModal = () => {\n// //         setShowLogoutModal(true);\n// //     };\n\n// //     const closeLogoutModal = () => {\n// //         setShowLogoutModal(false);\n// //     };\n\n// //     return (\n// //         <div className=\"profile-container\">\n// //             {loading ? (\n// //                 <div className=\"loading-overlay\">\n// //                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\n// //                 </div>\n// //             ) : (\n// //                 <>\n// //                     <button className=\"back-button icon-button\" onClick={() => navigate(-1)}>\n// //                         <img src=\"/back-icon.png\" alt=\"Back\" />\n// //                     </button>\n// //                     <button className=\"edit-button icon-button\" onClick={() => navigate('/edit-profile')}>\n// //                         <img src=\"/edit-icon.png\" alt=\"Edit\" />\n// //                     </button>\n// //                     <div className=\"user-info\">\n// //                         <div className=\"avatar\">\n// //                             <img src='/avater.png' className='profile-picture' alt='Profile' />\n// //                         </div>\n// //                         <h1 className=\"user-name\">{user.name}</h1>\n// //                     </div>\n// //                     <div className=\"details-container\">\n// //                         <ul className=\"user-details\">\n// //                             <li data-label=\"Name:\">{user.name}</li>\n// //                             <li data-label=\"Email:\">{user.email}</li>\n// //                             <li data-label=\"Username:\">{user.username}</li>\n// //                             <li data-label=\"Joined:\">{new Date(user.createdAt).toLocaleDateString()}</li>\n// //                         </ul>\n// //                     </div>\n// //                     <div className=\"details-container\">\n// //                         <ul className=\"user-details\">\n// //                             <li data-label=\"Name:\">{user.name}</li>\n// //                             <li data-label=\"Email:\">{user.email}</li>\n// //                             <li data-label=\"Username:\">{user.username}</li>\n// //                             <li data-label=\"Joined:\">{new Date(user.createdAt).toLocaleDateString()}</li>\n// //                         </ul>\n// //                     </div>\n\n// //                     <div className=\"details-container\">\n// //                         <ul className=\"user-details\">\n// //                             <li data-label=\"Name:\">{user.name}</li>\n// //                             <li data-label=\"Email:\">{user.email}</li>\n// //                             <li data-label=\"Username:\">{user.username}</li>\n// //                             <li data-label=\"Joined:\">{new Date(user.createdAt).toLocaleDateString()}</li>\n// //                         </ul>\n// //                     </div>\n// //                 </>\n// //             )}\n// //             <div className=\"actions\">\n// //                 <button className=\"action-button\" onClick={openLogoutModal}>Logout</button>\n// //             </div>\n// //             {showLogoutModal && (\n// //                 <div className=\"logout-modal\">\n// //                     <div className=\"logout-modal-content\">\n// //                         <p>Are you sure you want to logout?</p>\n// //                         <div className=\"modal-actions\">\n// //                             <button className=\"modal-cancel-button\" onClick={closeLogoutModal}>Cancel</button>\n// //                             <button className=\"modal-logout-button\" onClick={handleLogout}>Logout</button>\n// //                         </div>\n// //                     </div>\n// //                 </div>\n// //             )}\n// //             <ToastContainer />\n// //         </div>\n// //     );\n// // }\n\n// // export default UserProfile;\n\n// // frontend/src/pages/UserProfile.js\n\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { handleError, handleSuccess } from \"../../utils/ReactToastify\";\n// import { ToastContainer } from \"react-toastify\";\n// import \"../utils/ReactToastifyCustom.css\";\n// import \"../utils/style/profile.css\";\n\n// function UserProfile() {\n//   const [user, setUser] = useState({});\n//   const [loading, setLoading] = useState(true);\n//   const [showLogoutModal, setShowLogoutModal] = useState(false);\n//   const [darkMode, setDarkMode] = useState(false);\n//   const [editProfile, setEditProfile] = useState(false);\n//   const [notifications, setNotifications] = useState({\n//     email: true,\n//     push: true,\n//     sms: false,\n//   });\n\n//   // State to manage the visibility of different sections\n//   const [showUserInfo, setShowUserInfo] = useState(false);\n//   const [showAccountSettings, setShowAccountSettings] = useState(false);\n//   const [showNotifications, setShowNotifications] = useState(false);\n//   const [showPrivacy, setShowPrivacy] = useState(false);\n//   const [showDataStorage, setShowDataStorage] = useState(false);\n//   const [showAppearance, setShowAppearance] = useState(false);\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     fetchUserProfile();\n//   }, []);\n\n//   const fetchUserProfile = async () => {\n//     setLoading(true);\n//     try {\n//       const response = await fetch(\"http://localhost:8080/Users/me\", {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n//         },\n//       });\n//       const result = await response.json();\n//       if (response.ok) {\n//         setUser(result);\n//       } else {\n//         handleError(\n//           result.message || \"Failed to fetch user data. Please try again.\"\n//         );\n//         navigate(\"/login\");\n//       }\n//     } catch (err) {\n//       handleError(\"Network error. Please check your connection and try again.\");\n//       navigate(\"/login\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleLogout = async () => {\n//     try {\n//       const response = await fetch(\"http://localhost:8080/auth/logout\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n//         },\n//         body: JSON.stringify({\n//           refreshToken: localStorage.getItem(\"refreshToken\"),\n//         }),\n//       });\n//       if (response.ok) {\n//         localStorage.removeItem(\"token\");\n//         localStorage.removeItem(\"refreshToken\");\n//         localStorage.removeItem(\"loggedInUser\");\n//         handleSuccess(\"Logged out successfully! Redirecting...\");\n//         setTimeout(() => navigate(\"/login\"), 500);\n//       } else {\n//         handleError(\"Failed to log out. Please try again.\");\n//       }\n//     } catch (err) {\n//       handleError(\"Network error. Please check your connection and try again.\");\n//     }\n//   };\n\n//   const openLogoutModal = () => {\n//     setShowLogoutModal(true);\n//   };\n\n//   const closeLogoutModal = () => {\n//     setShowLogoutModal(false);\n//   };\n\n//   const toggleDarkMode = () => {\n//     setDarkMode(!darkMode);\n//   };\n\n//   const handleNotificationChange = (type) => {\n//     setNotifications((prev) => ({\n//       ...prev,\n//       [type]: !prev[type],\n//     }));\n//   };\n\n//   return (\n//     <div className={`profile-container ${darkMode ? \"dark-mode\" : \"\"}`}>\n//       {loading ? (\n//         <div className=\"loading-overlay\">\n//           <img\n//             src=\"/apple-loading.gif\"\n//             alt=\"Loading...\"\n//             className=\"loading-spinner\"\n//           />\n//         </div>\n//       ) : (\n//         <>\n//           <button\n//             className=\"back-button icon-button\"\n//             onClick={() => navigate(-1)}\n//           >\n//             <img src=\"/back-icon.png\" alt=\"Back\" />\n//           </button>\n//           <button\n//             className=\"edit-button icon-button\"\n//             onClick={() => setEditProfile(true)}\n//           >\n//             <img src=\"/edit-icon.png\" alt=\"Edit\" />\n//           </button>\n//           <div className=\"user-info\">\n//             <div className=\"avatar\">\n//               <img\n//                 src=\"/avater.png\"\n//                 className=\"profile-picture\"\n//                 alt=\"Profile\"\n//               />\n//             </div>\n//             <h1 className=\"user-name\">{user.name}</h1>\n//           </div>\n\n//           {/* User Information */}\n//           <div className=\"details-container\">\n//             <button\n//               className=\"expand-button\"\n//               onClick={() => setShowUserInfo(!showUserInfo)}\n//             >\n//               {showUserInfo ? \"Hide\" : \"Show\"} User Information\n//             </button>\n//             {showUserInfo && (\n//               <ul className=\"user-details\">\n//                 <li data-label=\"Name:\">{user.name}</li>\n//                 <li data-label=\"Email:\">{user.email}</li>\n//                 <li data-label=\"Username:\">{user.username}</li>\n//                 <li data-label=\"Joined:\">\n//                   {new Date(user.createdAt).toLocaleDateString()}\n//                 </li>\n//                 <li data-label=\"Phone:\">{user.phone || \"N/A\"}</li>\n//                 <li data-label=\"Address:\">{user.address || \"N/A\"}</li>\n//               </ul>\n//             )}\n//           </div>\n\n//           {/* Account Settings */}\n//           <div className=\"details-container\">\n//             <button\n//               className=\"expand-button highlight\"\n//               onClick={() => setShowAccountSettings(!showAccountSettings)}\n//             >\n//               {showAccountSettings ? \"Hide\" : \"Show\"} Account Settings\n//             </button>\n\n//             {showAccountSettings && (\n//               <ul className=\"user-details\">\n//                 <li>Change Password</li>\n//                 <li>Update Email</li>\n//                 <li>Manage Two-Factor Authentication</li>\n//                 <li>Delete Account</li>\n//               </ul>\n//             )}\n//           </div>\n\n//           {/* Notifications */}\n//           <div className=\"details-container\">\n//             <button\n//               className=\"expand-button\"\n//               onClick={() => setShowNotifications(!showNotifications)}\n//             >\n//               {showNotifications ? \"Hide\" : \"Show\"} Notifications\n//             </button>\n//             {showNotifications && (\n//               <ul className=\"user-details\">\n//                 <li>\n//                   <label>\n//                     <input\n//                       type=\"checkbox\"\n//                       checked={notifications.email}\n//                       onChange={() => handleNotificationChange(\"email\")}\n//                     />\n//                     Email Notifications\n//                   </label>\n//                 </li>\n//                 <li>\n//                   <label>\n//                     <input\n//                       type=\"checkbox\"\n//                       checked={notifications.push}\n//                       onChange={() => handleNotificationChange(\"push\")}\n//                     />\n//                     Push Notifications\n//                   </label>\n//                 </li>\n//                 <li>\n//                   <label>\n//                     <input\n//                       type=\"checkbox\"\n//                       checked={notifications.sms}\n//                       onChange={() => handleNotificationChange(\"sms\")}\n//                     />\n//                     SMS Notifications\n//                   </label>\n//                 </li>\n//               </ul>\n//             )}\n//           </div>\n\n//           {/* Privacy */}\n//           <div className=\"details-container\">\n//             <button\n//               className=\"expand-button\"\n//               onClick={() => setShowPrivacy(!showPrivacy)}\n//             >\n//               {showPrivacy ? \"Hide\" : \"Show\"} Privacy\n//             </button>\n//             {showPrivacy && (\n//               <ul className=\"user-details\">\n//                 <li>Manage Blocked Users</li>\n//                 <li>Privacy Settings</li>\n//                 <li>Data Sharing Preferences</li>\n//                 <li>Two-Factor Authentication Status</li>\n//               </ul>\n//             )}\n//           </div>\n\n//           {/* Data & Storage */}\n//           <div className=\"details-container\">\n//             <button\n//               className=\"expand-button\"\n//               onClick={() => setShowDataStorage(!showDataStorage)}\n//             >\n//               {showDataStorage ? \"Hide\" : \"Show\"} Data & Storage\n//             </button>\n//             {showDataStorage && (\n//               <ul className=\"user-details\">\n//                 <li>Data Usage</li>\n//                 <li>Storage Space</li>\n//                 <li>Download Your Data</li>\n//                 <li>Backup Data</li>\n//               </ul>\n//             )}\n//           </div>\n\n//           {/* Appearance */}\n//           <div className=\"details-container\">\n//             <button\n//               className=\"expand-button\"\n//               onClick={() => setShowAppearance(!showAppearance)}\n//             >\n//               {showAppearance ? \"Hide\" : \"Show\"} Appearance\n//             </button>\n//             {showAppearance && (\n//               <ul className=\"user-details\">\n//                 <li>Theme: {darkMode ? \"Dark\" : \"Light\"}</li>\n//                 <li>\n//                   <button className=\"action-button\" onClick={toggleDarkMode}>\n//                     Toggle {darkMode ? \"Light\" : \"Dark\"} Mode\n//                   </button>\n//                 </li>\n//               </ul>\n//             )}\n//           </div>\n//         </>\n//       )}\n//       <div className=\"actions\">\n//         <button className=\"action-button\" onClick={openLogoutModal}>\n//           Logout\n//         </button>\n//       </div>\n//       {showLogoutModal && (\n//         <div className=\"logout-modal\">\n//           <div className=\"logout-modal-content\">\n//             <p>Are you sure you want to logout?</p>\n//             <div className=\"modal-actions\">\n//               <button\n//                 className=\"modal-cancel-button\"\n//                 onClick={closeLogoutModal}\n//               >\n//                 Cancel\n//               </button>\n//               <button className=\"modal-logout-button\" onClick={handleLogout}>\n//                 Logout\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//       <ToastContainer />\n//     </div>\n//   );\n// }\n\n// export default UserProfile;","map":{"version":3,"names":[],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/pages/UserProfile/UserProfile.jsx"],"sourcesContent":["// // // frontend/src/pages/UserProfile.js\r\n\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import { useNavigate } from 'react-router-dom';\r\n// // import { handleError, handleSuccess } from '../utils/ReactToastify';\r\n// // import { ToastContainer } from 'react-toastify';\r\n// // import '../utils/ReactToastifyCustom.css';\r\n// // import '../utils/style/profile.css';\r\n\r\n// // function UserProfile() {\r\n// //     const [user, setUser] = useState({});\r\n// //     const [loading, setLoading] = useState(true);\r\n// //     const [showLogoutModal, setShowLogoutModal] = useState(false);\r\n// //     const navigate = useNavigate();\r\n\r\n// //     useEffect(() => {\r\n// //         fetchUserProfile();\r\n// //     }, []);\r\n\r\n// //     const fetchUserProfile = async () => {\r\n// //         setLoading(true);\r\n// //         try {\r\n// //             const response = await fetch('http://localhost:8080/Users/me', {\r\n// //                 headers: {\r\n// //                     'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n// //                 }\r\n// //             });\r\n// //             const result = await response.json();\r\n// //             if (response.ok) {\r\n// //                 setUser(result);\r\n// //             } else {\r\n// //                 handleError(result.message || 'Failed to fetch user data. Please try again.');\r\n// //                 navigate('/login');\r\n// //             }\r\n// //         } catch (err) {\r\n// //             handleError('Network error. Please check your connection and try again.');\r\n// //             navigate('/login');\r\n// //         } finally {\r\n// //             setLoading(false);\r\n// //         }\r\n// //     };\r\n\r\n// //     const handleLogout = async () => {\r\n// //         try {\r\n// //             const response = await fetch(\"http://localhost:8080/auth/logout\", {\r\n// //                 method: 'POST',\r\n// //                 headers: {\r\n// //                     'Content-Type': 'application/json',\r\n// //                     'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n// //                 },\r\n// //                 body: JSON.stringify({ refreshToken: localStorage.getItem('refreshToken') })\r\n// //             });\r\n// //             if (response.ok) {\r\n// //                 localStorage.removeItem('token');\r\n// //                 localStorage.removeItem('refreshToken');\r\n// //                 localStorage.removeItem('loggedInUser');\r\n// //                 handleSuccess('Logged out successfully! Redirecting...');\r\n// //                 setTimeout(() => navigate('/login'), 500);\r\n// //             } else {\r\n// //                 handleError('Failed to log out. Please try again.');\r\n// //             }\r\n// //         } catch (err) {\r\n// //             handleError('Network error. Please check your connection and try again.');\r\n// //         }\r\n// //     };\r\n\r\n// //     const openLogoutModal = () => {\r\n// //         setShowLogoutModal(true);\r\n// //     };\r\n\r\n// //     const closeLogoutModal = () => {\r\n// //         setShowLogoutModal(false);\r\n// //     };\r\n\r\n// //     return (\r\n// //         <div className=\"profile-container\">\r\n// //             {loading ? (\r\n// //                 <div className=\"loading-overlay\">\r\n// //                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\r\n// //                 </div>\r\n// //             ) : (\r\n// //                 <>\r\n// //                     <button className=\"back-button icon-button\" onClick={() => navigate(-1)}>\r\n// //                         <img src=\"/back-icon.png\" alt=\"Back\" />\r\n// //                     </button>\r\n// //                     <button className=\"edit-button icon-button\" onClick={() => navigate('/edit-profile')}>\r\n// //                         <img src=\"/edit-icon.png\" alt=\"Edit\" />\r\n// //                     </button>\r\n// //                     <div className=\"user-info\">\r\n// //                         <div className=\"avatar\">\r\n// //                             <img src='/avater.png' className='profile-picture' alt='Profile' />\r\n// //                         </div>\r\n// //                         <h1 className=\"user-name\">{user.name}</h1>\r\n// //                     </div>\r\n// //                     <div className=\"details-container\">\r\n// //                         <ul className=\"user-details\">\r\n// //                             <li data-label=\"Name:\">{user.name}</li>\r\n// //                             <li data-label=\"Email:\">{user.email}</li>\r\n// //                             <li data-label=\"Username:\">{user.username}</li>\r\n// //                             <li data-label=\"Joined:\">{new Date(user.createdAt).toLocaleDateString()}</li>\r\n// //                         </ul>\r\n// //                     </div>\r\n// //                     <div className=\"details-container\">\r\n// //                         <ul className=\"user-details\">\r\n// //                             <li data-label=\"Name:\">{user.name}</li>\r\n// //                             <li data-label=\"Email:\">{user.email}</li>\r\n// //                             <li data-label=\"Username:\">{user.username}</li>\r\n// //                             <li data-label=\"Joined:\">{new Date(user.createdAt).toLocaleDateString()}</li>\r\n// //                         </ul>\r\n// //                     </div>\r\n\r\n// //                     <div className=\"details-container\">\r\n// //                         <ul className=\"user-details\">\r\n// //                             <li data-label=\"Name:\">{user.name}</li>\r\n// //                             <li data-label=\"Email:\">{user.email}</li>\r\n// //                             <li data-label=\"Username:\">{user.username}</li>\r\n// //                             <li data-label=\"Joined:\">{new Date(user.createdAt).toLocaleDateString()}</li>\r\n// //                         </ul>\r\n// //                     </div>\r\n// //                 </>\r\n// //             )}\r\n// //             <div className=\"actions\">\r\n// //                 <button className=\"action-button\" onClick={openLogoutModal}>Logout</button>\r\n// //             </div>\r\n// //             {showLogoutModal && (\r\n// //                 <div className=\"logout-modal\">\r\n// //                     <div className=\"logout-modal-content\">\r\n// //                         <p>Are you sure you want to logout?</p>\r\n// //                         <div className=\"modal-actions\">\r\n// //                             <button className=\"modal-cancel-button\" onClick={closeLogoutModal}>Cancel</button>\r\n// //                             <button className=\"modal-logout-button\" onClick={handleLogout}>Logout</button>\r\n// //                         </div>\r\n// //                     </div>\r\n// //                 </div>\r\n// //             )}\r\n// //             <ToastContainer />\r\n// //         </div>\r\n// //     );\r\n// // }\r\n\r\n// // export default UserProfile;\r\n\r\n// // frontend/src/pages/UserProfile.js\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { handleError, handleSuccess } from \"../../utils/ReactToastify\";\r\n// import { ToastContainer } from \"react-toastify\";\r\n// import \"../utils/ReactToastifyCustom.css\";\r\n// import \"../utils/style/profile.css\";\r\n\r\n// function UserProfile() {\r\n//   const [user, setUser] = useState({});\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [showLogoutModal, setShowLogoutModal] = useState(false);\r\n//   const [darkMode, setDarkMode] = useState(false);\r\n//   const [editProfile, setEditProfile] = useState(false);\r\n//   const [notifications, setNotifications] = useState({\r\n//     email: true,\r\n//     push: true,\r\n//     sms: false,\r\n//   });\r\n\r\n//   // State to manage the visibility of different sections\r\n//   const [showUserInfo, setShowUserInfo] = useState(false);\r\n//   const [showAccountSettings, setShowAccountSettings] = useState(false);\r\n//   const [showNotifications, setShowNotifications] = useState(false);\r\n//   const [showPrivacy, setShowPrivacy] = useState(false);\r\n//   const [showDataStorage, setShowDataStorage] = useState(false);\r\n//   const [showAppearance, setShowAppearance] = useState(false);\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     fetchUserProfile();\r\n//   }, []);\r\n\r\n//   const fetchUserProfile = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8080/Users/me\", {\r\n//         headers: {\r\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n//         },\r\n//       });\r\n//       const result = await response.json();\r\n//       if (response.ok) {\r\n//         setUser(result);\r\n//       } else {\r\n//         handleError(\r\n//           result.message || \"Failed to fetch user data. Please try again.\"\r\n//         );\r\n//         navigate(\"/login\");\r\n//       }\r\n//     } catch (err) {\r\n//       handleError(\"Network error. Please check your connection and try again.\");\r\n//       navigate(\"/login\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleLogout = async () => {\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8080/auth/logout\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n//         },\r\n//         body: JSON.stringify({\r\n//           refreshToken: localStorage.getItem(\"refreshToken\"),\r\n//         }),\r\n//       });\r\n//       if (response.ok) {\r\n//         localStorage.removeItem(\"token\");\r\n//         localStorage.removeItem(\"refreshToken\");\r\n//         localStorage.removeItem(\"loggedInUser\");\r\n//         handleSuccess(\"Logged out successfully! Redirecting...\");\r\n//         setTimeout(() => navigate(\"/login\"), 500);\r\n//       } else {\r\n//         handleError(\"Failed to log out. Please try again.\");\r\n//       }\r\n//     } catch (err) {\r\n//       handleError(\"Network error. Please check your connection and try again.\");\r\n//     }\r\n//   };\r\n\r\n//   const openLogoutModal = () => {\r\n//     setShowLogoutModal(true);\r\n//   };\r\n\r\n//   const closeLogoutModal = () => {\r\n//     setShowLogoutModal(false);\r\n//   };\r\n\r\n//   const toggleDarkMode = () => {\r\n//     setDarkMode(!darkMode);\r\n//   };\r\n\r\n//   const handleNotificationChange = (type) => {\r\n//     setNotifications((prev) => ({\r\n//       ...prev,\r\n//       [type]: !prev[type],\r\n//     }));\r\n//   };\r\n\r\n//   return (\r\n//     <div className={`profile-container ${darkMode ? \"dark-mode\" : \"\"}`}>\r\n//       {loading ? (\r\n//         <div className=\"loading-overlay\">\r\n//           <img\r\n//             src=\"/apple-loading.gif\"\r\n//             alt=\"Loading...\"\r\n//             className=\"loading-spinner\"\r\n//           />\r\n//         </div>\r\n//       ) : (\r\n//         <>\r\n//           <button\r\n//             className=\"back-button icon-button\"\r\n//             onClick={() => navigate(-1)}\r\n//           >\r\n//             <img src=\"/back-icon.png\" alt=\"Back\" />\r\n//           </button>\r\n//           <button\r\n//             className=\"edit-button icon-button\"\r\n//             onClick={() => setEditProfile(true)}\r\n//           >\r\n//             <img src=\"/edit-icon.png\" alt=\"Edit\" />\r\n//           </button>\r\n//           <div className=\"user-info\">\r\n//             <div className=\"avatar\">\r\n//               <img\r\n//                 src=\"/avater.png\"\r\n//                 className=\"profile-picture\"\r\n//                 alt=\"Profile\"\r\n//               />\r\n//             </div>\r\n//             <h1 className=\"user-name\">{user.name}</h1>\r\n//           </div>\r\n\r\n//           {/* User Information */}\r\n//           <div className=\"details-container\">\r\n//             <button\r\n//               className=\"expand-button\"\r\n//               onClick={() => setShowUserInfo(!showUserInfo)}\r\n//             >\r\n//               {showUserInfo ? \"Hide\" : \"Show\"} User Information\r\n//             </button>\r\n//             {showUserInfo && (\r\n//               <ul className=\"user-details\">\r\n//                 <li data-label=\"Name:\">{user.name}</li>\r\n//                 <li data-label=\"Email:\">{user.email}</li>\r\n//                 <li data-label=\"Username:\">{user.username}</li>\r\n//                 <li data-label=\"Joined:\">\r\n//                   {new Date(user.createdAt).toLocaleDateString()}\r\n//                 </li>\r\n//                 <li data-label=\"Phone:\">{user.phone || \"N/A\"}</li>\r\n//                 <li data-label=\"Address:\">{user.address || \"N/A\"}</li>\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n\r\n//           {/* Account Settings */}\r\n//           <div className=\"details-container\">\r\n//             <button\r\n//               className=\"expand-button highlight\"\r\n//               onClick={() => setShowAccountSettings(!showAccountSettings)}\r\n//             >\r\n//               {showAccountSettings ? \"Hide\" : \"Show\"} Account Settings\r\n//             </button>\r\n\r\n//             {showAccountSettings && (\r\n//               <ul className=\"user-details\">\r\n//                 <li>Change Password</li>\r\n//                 <li>Update Email</li>\r\n//                 <li>Manage Two-Factor Authentication</li>\r\n//                 <li>Delete Account</li>\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n\r\n//           {/* Notifications */}\r\n//           <div className=\"details-container\">\r\n//             <button\r\n//               className=\"expand-button\"\r\n//               onClick={() => setShowNotifications(!showNotifications)}\r\n//             >\r\n//               {showNotifications ? \"Hide\" : \"Show\"} Notifications\r\n//             </button>\r\n//             {showNotifications && (\r\n//               <ul className=\"user-details\">\r\n//                 <li>\r\n//                   <label>\r\n//                     <input\r\n//                       type=\"checkbox\"\r\n//                       checked={notifications.email}\r\n//                       onChange={() => handleNotificationChange(\"email\")}\r\n//                     />\r\n//                     Email Notifications\r\n//                   </label>\r\n//                 </li>\r\n//                 <li>\r\n//                   <label>\r\n//                     <input\r\n//                       type=\"checkbox\"\r\n//                       checked={notifications.push}\r\n//                       onChange={() => handleNotificationChange(\"push\")}\r\n//                     />\r\n//                     Push Notifications\r\n//                   </label>\r\n//                 </li>\r\n//                 <li>\r\n//                   <label>\r\n//                     <input\r\n//                       type=\"checkbox\"\r\n//                       checked={notifications.sms}\r\n//                       onChange={() => handleNotificationChange(\"sms\")}\r\n//                     />\r\n//                     SMS Notifications\r\n//                   </label>\r\n//                 </li>\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n\r\n//           {/* Privacy */}\r\n//           <div className=\"details-container\">\r\n//             <button\r\n//               className=\"expand-button\"\r\n//               onClick={() => setShowPrivacy(!showPrivacy)}\r\n//             >\r\n//               {showPrivacy ? \"Hide\" : \"Show\"} Privacy\r\n//             </button>\r\n//             {showPrivacy && (\r\n//               <ul className=\"user-details\">\r\n//                 <li>Manage Blocked Users</li>\r\n//                 <li>Privacy Settings</li>\r\n//                 <li>Data Sharing Preferences</li>\r\n//                 <li>Two-Factor Authentication Status</li>\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n\r\n//           {/* Data & Storage */}\r\n//           <div className=\"details-container\">\r\n//             <button\r\n//               className=\"expand-button\"\r\n//               onClick={() => setShowDataStorage(!showDataStorage)}\r\n//             >\r\n//               {showDataStorage ? \"Hide\" : \"Show\"} Data & Storage\r\n//             </button>\r\n//             {showDataStorage && (\r\n//               <ul className=\"user-details\">\r\n//                 <li>Data Usage</li>\r\n//                 <li>Storage Space</li>\r\n//                 <li>Download Your Data</li>\r\n//                 <li>Backup Data</li>\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n\r\n//           {/* Appearance */}\r\n//           <div className=\"details-container\">\r\n//             <button\r\n//               className=\"expand-button\"\r\n//               onClick={() => setShowAppearance(!showAppearance)}\r\n//             >\r\n//               {showAppearance ? \"Hide\" : \"Show\"} Appearance\r\n//             </button>\r\n//             {showAppearance && (\r\n//               <ul className=\"user-details\">\r\n//                 <li>Theme: {darkMode ? \"Dark\" : \"Light\"}</li>\r\n//                 <li>\r\n//                   <button className=\"action-button\" onClick={toggleDarkMode}>\r\n//                     Toggle {darkMode ? \"Light\" : \"Dark\"} Mode\r\n//                   </button>\r\n//                 </li>\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n//         </>\r\n//       )}\r\n//       <div className=\"actions\">\r\n//         <button className=\"action-button\" onClick={openLogoutModal}>\r\n//           Logout\r\n//         </button>\r\n//       </div>\r\n//       {showLogoutModal && (\r\n//         <div className=\"logout-modal\">\r\n//           <div className=\"logout-modal-content\">\r\n//             <p>Are you sure you want to logout?</p>\r\n//             <div className=\"modal-actions\">\r\n//               <button\r\n//                 className=\"modal-cancel-button\"\r\n//                 onClick={closeLogoutModal}\r\n//               >\r\n//                 Cancel\r\n//               </button>\r\n//               <button className=\"modal-logout-button\" onClick={handleLogout}>\r\n//                 Logout\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//       <ToastContainer />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default UserProfile;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}