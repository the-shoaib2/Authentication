{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\LOGIN_SINGUP - Copy\\\\LOGIN_SINGUP - Copy\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// // App.js\n// import { Navigate, Route, Routes } from 'react-router-dom';\n// import { useState } from 'react';\n// import './App.css';\n// import Login from './pages/Login';\n// import Signup from './pages/Signup';\n// import Home from './pages/Home';\n// import RefrshHandler from './utils/RefrshHandler';\n// import 'react-toastify/dist/ReactToastify.css';\n\n// function App() {\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n//   const PrivateRoute = ({ element }) => {\n//     return isAuthenticated ? element : <Navigate to=\"/login\" />\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <RefrshHandler setIsAuthenticated={setIsAuthenticated} />\n//       <Routes>\n//         <Route path='/' element={<Navigate to=\"/login\" />} />\n//         <Route path='/login' element={<Login />} />\n//         <Route path='/signup' element={<Signup />} />\n//         <Route path='/home' element={<PrivateRoute element={<Home />} />} />\n//       </Routes>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// App.js\n// App.js\n\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Home from './pages/Home';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { handleError } from './utils/ReactToastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const checkAuth = async () => {\n      const accessToken = localStorage.getItem('accessToken');\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (accessToken) {\n        setIsAuthenticated(true);\n      } else if (refreshToken) {\n        try {\n          const response = await fetch('http://localhost:8080/auth/refresh-token', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              refreshToken\n            })\n          });\n          const result = await response.json();\n          if (result.success) {\n            localStorage.setItem('accessToken', result.accessToken);\n            setIsAuthenticated(true);\n          } else {\n            setIsAuthenticated(false);\n          }\n        } catch (err) {\n          handleError('Failed to refresh token');\n          setIsAuthenticated(false);\n        }\n      }\n    };\n    checkAuth();\n  }, []);\n  const PrivateRoute = ({\n    element\n  }) => {\n    return isAuthenticated ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 40\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          setIsAuthenticated: setIsAuthenticated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navigate","Route","Routes","useState","useEffect","Login","Signup","Home","handleError","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","checkAuth","accessToken","localStorage","getItem","refreshToken","response","fetch","method","headers","body","JSON","stringify","result","json","success","setItem","err","PrivateRoute","element","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","path","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/LOGIN_SINGUP - Copy/LOGIN_SINGUP - Copy/frontend/src/App.js"],"sourcesContent":["// // App.js\r\n// import { Navigate, Route, Routes } from 'react-router-dom';\r\n// import { useState } from 'react';\r\n// import './App.css';\r\n// import Login from './pages/Login';\r\n// import Signup from './pages/Signup';\r\n// import Home from './pages/Home';\r\n// import RefrshHandler from './utils/RefrshHandler';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n\r\n// function App() {\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n//   const PrivateRoute = ({ element }) => {\r\n//     return isAuthenticated ? element : <Navigate to=\"/login\" />\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <RefrshHandler setIsAuthenticated={setIsAuthenticated} />\r\n//       <Routes>\r\n//         <Route path='/' element={<Navigate to=\"/login\" />} />\r\n//         <Route path='/login' element={<Login />} />\r\n//         <Route path='/signup' element={<Signup />} />\r\n//         <Route path='/home' element={<PrivateRoute element={<Home />} />} />\r\n//       </Routes>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n// App.js\r\n// App.js\r\n\r\nimport { Navigate, Route, Routes } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/Signup';\r\nimport Home from './pages/Home';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { handleError } from './utils/ReactToastify';\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const accessToken = localStorage.getItem('accessToken');\r\n      const refreshToken = localStorage.getItem('refreshToken');\r\n\r\n      if (accessToken) {\r\n        setIsAuthenticated(true);\r\n      } else if (refreshToken) {\r\n        try {\r\n          const response = await fetch('http://localhost:8080/auth/refresh-token', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ refreshToken })\r\n          });\r\n          const result = await response.json();\r\n          if (result.success) {\r\n            localStorage.setItem('accessToken', result.accessToken);\r\n            setIsAuthenticated(true);\r\n          } else {\r\n            setIsAuthenticated(false);\r\n          }\r\n        } catch (err) {\r\n          handleError('Failed to refresh token');\r\n          setIsAuthenticated(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const PrivateRoute = ({ element }) => {\r\n    return isAuthenticated ? element : <Navigate to=\"/login\" />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route path='/' element={<Navigate to=\"/login\" />} />\r\n        <Route path='/login' element={<Login setIsAuthenticated={setIsAuthenticated} />} />\r\n        <Route path='/signup' element={<Signup />} />\r\n        <Route path='/home' element={<PrivateRoute element={<Home />} />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}