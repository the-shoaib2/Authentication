{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\n// // Login.js \n// import React, { useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { ToastContainer } from 'react-toastify';\n// import { handleError, handleSuccess } from '../utils/ReactToastify';\n// import '../utils/ReactToastifyCustom.css';\n// import '../utils/loading.css';\n\n// function Login() {\n//     const [loginInfo, setLoginInfo] = useState({\n//         email: '',\n//         password: ''\n//     });\n\n//     const [loading, setLoading] = useState(false); // Add loading state\n//     const [loadingVisible, setLoadingVisible] = useState(false); // State for managing visibility\n//     const navigate = useNavigate();\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         const copyLoginInfo = { ...loginInfo };\n//         copyLoginInfo[name] = value;\n//         setLoginInfo(copyLoginInfo);\n//     }\n\n//     const handleLogin = async (e) => {\n//         e.preventDefault();\n//         const { email, password } = loginInfo;\n//         if (!email || !password) {\n//             return handleError('Email and password are required');\n//         }\n//         setLoading(true); // Start loading\n//         setLoadingVisible(true); // Ensure loading overlay is visible\n//         try {\n//             const url = `http://localhost:8080/auth/login`;\n//             const response = await fetch(url, {\n//                 method: \"POST\",\n//                 headers: {\n//                     'Content-Type': 'application/json'\n//                 },\n//                 body: JSON.stringify(loginInfo)\n//             });\n//             const result = await response.json();\n//             const { success, message, jwtToken, name, error } = result;\n//             if (success) {\n//                 handleSuccess(message);\n//                 localStorage.setItem('token', jwtToken);\n//                 localStorage.setItem('loggedInUser', name);\n//                 setTimeout(() => {\n//                     setLoadingVisible(false); // Fade out the loading overlay\n//                     setTimeout(() => {\n//                         navigate('/home'); // Navigate after loading fades out\n//                     }, 500); // Delay to match the fade-out duration\n//                 }, 1000);\n//             } else if (error) {\n//                 const details = error?.details[0].message;\n//                 handleError(details);\n//                 setLoadingVisible(false); // Fade out the loading overlay\n//             } else {\n//                 handleError(message);\n//                 setLoadingVisible(false); // Fade out the loading overlay\n//             }\n//         } catch (err) {\n//             handleError(err.message || 'An error occurred');\n//             setLoadingVisible(false); // Fade out the loading overlay\n//         } finally {\n//             setLoading(false); // End loading\n//         }\n//     }\n\n//     return (\n//         <div className='container'>\n//             <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\n//             <h1>Login</h1>\n//             <form onSubmit={handleLogin}>\n//                 <div className='form-group'>\n//                     <input\n//                         onChange={handleChange}\n//                         type='email'\n//                         name='email'\n//                         id='email'\n//                         placeholder='Enter your email...'\n//                         value={loginInfo.email}\n//                     />\n//                     <label htmlFor='email' className='form-label'>Email</label>\n//                 </div>\n//                 <div className='form-group'>\n//                     <input\n//                         onChange={handleChange}\n//                         type='password'\n//                         name='password'\n//                         id='password'\n//                         placeholder='Enter your password...'\n//                         value={loginInfo.password}\n//                     />\n//                     <label htmlFor='password' className='form-label'>Password</label>\n//                 </div>\n//                 <button type='submit'>Login</button>\n//                 <Link to=\"/ForgotPassword\" className='signup-link'>Forgot Password?</Link>\n//                 <span>Doesn't have an account? <Link to=\"/signup\" className='signup-link'>Signup</Link></span>\n//             </form>\n//             <ToastContainer />\n\n//             {loadingVisible && (\n//                 <div className={`loading-overlay ${!loading ? 'hidden' : ''}`}>\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default Login;\n\n// Login.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { handleError, handleSuccess } from '../utils/ReactToastify';\nimport { ToastContainer } from 'react-toastify';\nimport '../utils/ReactToastifyCustom.css';\nimport '../utils/loading.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [fadeOut, setFadeOut] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setFadeOut(false);\n    try {\n      const response = await fetch('http://localhost:8080/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        localStorage.setItem('token', result.accessToken);\n        localStorage.setItem('loggedInUser', JSON.stringify(result));\n        handleSuccess(result.message || 'Login successful');\n        navigate('/home');\n      } else {\n        handleError(result.message || 'An error occurred');\n      }\n    } catch (err) {\n      handleError(err.message || 'An error occurred');\n    } finally {\n      setFadeOut(true);\n      setTimeout(() => {\n        setLoading(false);\n      }, 250);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Logging in...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"/K2zqe1ietp8PLW6bMMA+qWqono=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","handleError","handleSuccess","ToastContainer","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","loading","setLoading","fadeOut","setFadeOut","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","ok","localStorage","setItem","accessToken","message","err","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/pages/Login.js"],"sourcesContent":["// // Login.js \r\n// import React, { useState } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { ToastContainer } from 'react-toastify';\r\n// import { handleError, handleSuccess } from '../utils/ReactToastify';\r\n// import '../utils/ReactToastifyCustom.css';\r\n// import '../utils/loading.css';\r\n\r\n\r\n// function Login() {\r\n//     const [loginInfo, setLoginInfo] = useState({\r\n//         email: '',\r\n//         password: ''\r\n//     });\r\n\r\n//     const [loading, setLoading] = useState(false); // Add loading state\r\n//     const [loadingVisible, setLoadingVisible] = useState(false); // State for managing visibility\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         const copyLoginInfo = { ...loginInfo };\r\n//         copyLoginInfo[name] = value;\r\n//         setLoginInfo(copyLoginInfo);\r\n//     }\r\n\r\n//     const handleLogin = async (e) => {\r\n//         e.preventDefault();\r\n//         const { email, password } = loginInfo;\r\n//         if (!email || !password) {\r\n//             return handleError('Email and password are required');\r\n//         }\r\n//         setLoading(true); // Start loading\r\n//         setLoadingVisible(true); // Ensure loading overlay is visible\r\n//         try {\r\n//             const url = `http://localhost:8080/auth/login`;\r\n//             const response = await fetch(url, {\r\n//                 method: \"POST\",\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json'\r\n//                 },\r\n//                 body: JSON.stringify(loginInfo)\r\n//             });\r\n//             const result = await response.json();\r\n//             const { success, message, jwtToken, name, error } = result;\r\n//             if (success) {\r\n//                 handleSuccess(message);\r\n//                 localStorage.setItem('token', jwtToken);\r\n//                 localStorage.setItem('loggedInUser', name);\r\n//                 setTimeout(() => {\r\n//                     setLoadingVisible(false); // Fade out the loading overlay\r\n//                     setTimeout(() => {\r\n//                         navigate('/home'); // Navigate after loading fades out\r\n//                     }, 500); // Delay to match the fade-out duration\r\n//                 }, 1000);\r\n//             } else if (error) {\r\n//                 const details = error?.details[0].message;\r\n//                 handleError(details);\r\n//                 setLoadingVisible(false); // Fade out the loading overlay\r\n//             } else {\r\n//                 handleError(message);\r\n//                 setLoadingVisible(false); // Fade out the loading overlay\r\n//             }\r\n//         } catch (err) {\r\n//             handleError(err.message || 'An error occurred');\r\n//             setLoadingVisible(false); // Fade out the loading overlay\r\n//         } finally {\r\n//             setLoading(false); // End loading\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <div className='container'>\r\n//             <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\r\n//             <h1>Login</h1>\r\n//             <form onSubmit={handleLogin}>\r\n//                 <div className='form-group'>\r\n//                     <input\r\n//                         onChange={handleChange}\r\n//                         type='email'\r\n//                         name='email'\r\n//                         id='email'\r\n//                         placeholder='Enter your email...'\r\n//                         value={loginInfo.email}\r\n//                     />\r\n//                     <label htmlFor='email' className='form-label'>Email</label>\r\n//                 </div>\r\n//                 <div className='form-group'>\r\n//                     <input\r\n//                         onChange={handleChange}\r\n//                         type='password'\r\n//                         name='password'\r\n//                         id='password'\r\n//                         placeholder='Enter your password...'\r\n//                         value={loginInfo.password}\r\n//                     />\r\n//                     <label htmlFor='password' className='form-label'>Password</label>\r\n//                 </div>\r\n//                 <button type='submit'>Login</button>\r\n//                 <Link to=\"/ForgotPassword\" className='signup-link'>Forgot Password?</Link>\r\n//                 <span>Doesn't have an account? <Link to=\"/signup\" className='signup-link'>Signup</Link></span>\r\n//             </form>\r\n//             <ToastContainer />\r\n            \r\n//             {loadingVisible && (\r\n//                 <div className={`loading-overlay ${!loading ? 'hidden' : ''}`}>\r\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Login;\r\n\r\n\r\n\r\n\r\n\r\n// Login.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { handleError, handleSuccess } from '../utils/ReactToastify';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport '../utils/ReactToastifyCustom.css';\r\nimport '../utils/loading.css';\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [fadeOut, setFadeOut] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setFadeOut(false);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8080/auth/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ email, password })\r\n            });\r\n            const result = await response.json();\r\n\r\n            if (response.ok) {\r\n                localStorage.setItem('token', result.accessToken);\r\n                localStorage.setItem('loggedInUser', JSON.stringify(result));\r\n                handleSuccess(result.message || 'Login successful');\r\n                navigate('/home');\r\n            } else {\r\n                handleError(result.message || 'An error occurred');\r\n            }\r\n        } catch (err) {\r\n            handleError(err.message || 'An error occurred');\r\n        } finally {\r\n            setFadeOut(true);\r\n            setTimeout(() => {\r\n                setLoading(false);\r\n            }, 250);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h1>Login</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Email:\r\n                    <input\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Password:\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n                <button type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Logging in...' : 'Login'}\r\n                </button>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}