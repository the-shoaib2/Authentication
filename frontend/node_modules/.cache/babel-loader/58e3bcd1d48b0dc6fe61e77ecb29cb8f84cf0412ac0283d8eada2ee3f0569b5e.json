{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\n// // Login.js\n\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\n// import '../utils/ReactToastifyCustom.css';\n// import '../utils/loading.css';\n// import '../utils/style/animations.css'; \n\n// function Login() {\n//     const [emailOrUsername, setEmailOrUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [loading, setLoading] = useState(false);\n//     const [fadeIn, setFadeIn] = useState(true); \n//     const [fadeOut, setFadeOut] = useState(false); \n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         const timeoutId = setTimeout(() => {\n//             setFadeIn(false);\n//         }, 500);\n//         return () => clearTimeout(timeoutId);\n//     }, []);\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         setLoading(true);\n//         setFadeOut(false);\n\n//         setTimeout(async () => {\n//             setFadeOut(true);\n//             setTimeout(async () => {\n//                 try {\n//                     const response = await fetch(\"http://localhost:8080/auth/login\", {\n//                         method: 'POST',\n//                         headers: {\n//                             'Content-Type': 'application/json',\n//                         },\n//                         body: JSON.stringify({ emailOrUsername, password }),\n//                     });\n//                     const result = await response.json();\n//                     if (response.ok) {\n//                         localStorage.setItem('token', result.accessToken);\n//                         localStorage.setItem('refreshToken', result.refreshToken);\n//                         localStorage.setItem('loggedInUser', JSON.stringify(result));\n//                         handleSuccess('Login successful!');\n//                         setTimeout(() => navigate('/home'), 500);\n//                     } else {\n//                         handleError(result.message || 'Incorrect email/username or password. Please try again.');\n//                     }\n//                 } catch (err) {\n//                     handleError('Network error. Please check your connection and try again.');\n//                 } finally {\n//                     setLoading(false);\n//                 }\n//             }, 250);\n//         }, 1000);\n//     };\n\n//     return (\n//         <div className={`login-container container ${fadeIn ? 'fade-in' : ''}`}> \n//             <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\n//             <h1>Login</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <div className='form-group'>\n//                     <input\n//                         type='text'\n//                         id='emailOrUsername'\n//                         placeholder=''\n//                         value={emailOrUsername}\n//                         onChange={(e) => setEmailOrUsername(e.target.value)}\n//                         required\n//                     />\n//                     <label htmlFor='emailOrUsername' className='form-label'>Email or Username</label>\n//                 </div>\n//                 <div className='form-group'>\n//                     <input\n//                         type='password'\n//                         id='password'\n//                         placeholder=''\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                         required\n//                     />\n//                     <label htmlFor='password' className='form-label'>Password</label>\n//                 </div>\n//                 <button type='submit'>Login</button>\n//                 <Link to=\"/find-user\" className='pages-link'>Forgot Password?</Link>\n//                 <span>Don't have an account? <Link to=\"/signup\" className='pages-link'>Signup</Link></span>\n//             </form>\n//             <ToastContainer />\n//             {loading && (\n//                 <div className={`loading-overlay ${fadeOut ? 'hidden' : ''}`}>\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default Login;\n\n// pages/Login.js\nimport React, { useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport useAuthStore from '../store/useAuthStore';\nimport { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const {\n    login,\n    loading,\n    isAuthenticated\n  } = useAuthStore();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (isAuthenticated) {\n      navigate('/home');\n    }\n  }, [isAuthenticated, navigate]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      emailOrUsername,\n      password\n    } = event.target.elements;\n    await login(emailOrUsername.value, password.value);\n    if (isAuthenticated) handleSuccess('Login successful!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/app-icon.ico\",\n      alt: \"App Icon\",\n      className: \"app-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"emailOrUsername\",\n          placeholder: \"Email or Username\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/find-user\",\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"m1At6H3lg6AmwWnLBvGAgU7Akew=\", false, function () {\n  return [useAuthStore, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useNavigate","Link","useAuthStore","handleSuccess","handleError","ToastContainer","jsxDEV","_jsxDEV","Login","_s","login","loading","isAuthenticated","navigate","handleSubmit","event","preventDefault","emailOrUsername","password","target","elements","value","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","required","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/pages/Login.js"],"sourcesContent":["// // Login.js\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate, Link } from 'react-router-dom';\r\n// import { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\r\n// import '../utils/ReactToastifyCustom.css';\r\n// import '../utils/loading.css';\r\n// import '../utils/style/animations.css'; \r\n\r\n// function Login() {\r\n//     const [emailOrUsername, setEmailOrUsername] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [loading, setLoading] = useState(false);\r\n//     const [fadeIn, setFadeIn] = useState(true); \r\n//     const [fadeOut, setFadeOut] = useState(false); \r\n//     const navigate = useNavigate();\r\n\r\n//     useEffect(() => {\r\n//         const timeoutId = setTimeout(() => {\r\n//             setFadeIn(false);\r\n//         }, 500);\r\n//         return () => clearTimeout(timeoutId);\r\n//     }, []);\r\n\r\n//     const handleSubmit = async (event) => {\r\n//         event.preventDefault();\r\n//         setLoading(true);\r\n//         setFadeOut(false);\r\n\r\n//         setTimeout(async () => {\r\n//             setFadeOut(true);\r\n//             setTimeout(async () => {\r\n//                 try {\r\n//                     const response = await fetch(\"http://localhost:8080/auth/login\", {\r\n//                         method: 'POST',\r\n//                         headers: {\r\n//                             'Content-Type': 'application/json',\r\n//                         },\r\n//                         body: JSON.stringify({ emailOrUsername, password }),\r\n//                     });\r\n//                     const result = await response.json();\r\n//                     if (response.ok) {\r\n//                         localStorage.setItem('token', result.accessToken);\r\n//                         localStorage.setItem('refreshToken', result.refreshToken);\r\n//                         localStorage.setItem('loggedInUser', JSON.stringify(result));\r\n//                         handleSuccess('Login successful!');\r\n//                         setTimeout(() => navigate('/home'), 500);\r\n//                     } else {\r\n//                         handleError(result.message || 'Incorrect email/username or password. Please try again.');\r\n//                     }\r\n//                 } catch (err) {\r\n//                     handleError('Network error. Please check your connection and try again.');\r\n//                 } finally {\r\n//                     setLoading(false);\r\n//                 }\r\n//             }, 250);\r\n//         }, 1000);\r\n//     };\r\n\r\n//     return (\r\n//         <div className={`login-container container ${fadeIn ? 'fade-in' : ''}`}> \r\n//             <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\r\n//             <h1>Login</h1>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className='form-group'>\r\n//                     <input\r\n//                         type='text'\r\n//                         id='emailOrUsername'\r\n//                         placeholder=''\r\n//                         value={emailOrUsername}\r\n//                         onChange={(e) => setEmailOrUsername(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                     <label htmlFor='emailOrUsername' className='form-label'>Email or Username</label>\r\n//                 </div>\r\n//                 <div className='form-group'>\r\n//                     <input\r\n//                         type='password'\r\n//                         id='password'\r\n//                         placeholder=''\r\n//                         value={password}\r\n//                         onChange={(e) => setPassword(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                     <label htmlFor='password' className='form-label'>Password</label>\r\n//                 </div>\r\n//                 <button type='submit'>Login</button>\r\n//                 <Link to=\"/find-user\" className='pages-link'>Forgot Password?</Link>\r\n//                 <span>Don't have an account? <Link to=\"/signup\" className='pages-link'>Signup</Link></span>\r\n//             </form>\r\n//             <ToastContainer />\r\n//             {loading && (\r\n//                 <div className={`loading-overlay ${fadeOut ? 'hidden' : ''}`}>\r\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Login;\r\n\r\n\r\n\r\n// pages/Login.js\r\nimport React, { useEffect } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport useAuthStore from '../store/useAuthStore';\r\nimport { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\r\n\r\nfunction Login() {\r\n    const { login, loading, isAuthenticated } = useAuthStore();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            navigate('/home');\r\n        }\r\n    }, [isAuthenticated, navigate]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const { emailOrUsername, password } = event.target.elements;\r\n        await login(emailOrUsername.value, password.value);\r\n        if (isAuthenticated) handleSuccess('Login successful!');\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container container\">\r\n            <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\r\n            <h1>Login</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className='form-group'>\r\n                    <input type='text' name='emailOrUsername' placeholder='Email or Username' required />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input type='password' name='password' placeholder='Password' required />\r\n                </div>\r\n                <button type='submit' disabled={loading}>Login</button>\r\n                <Link to=\"/find-user\">Forgot Password?</Link>\r\n                <span>Don't have an account? <Link to=\"/signup\">Signup</Link></span>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}