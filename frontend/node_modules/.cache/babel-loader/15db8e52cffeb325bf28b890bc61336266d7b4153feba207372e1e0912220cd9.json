{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\components\\\\Services\\\\ChatServices\\\\ChatServices.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ChatList from './ChatList';\nimport SelectedUserMessages from './SelectedUserMessages';\nimport MessageInput from './MessageInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatService = () => {\n  _s();\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const handleUserSelect = user => {\n    setSelectedUser(user);\n    fetchMessages(user.id); // Fetch messages for the selected user\n  };\n  const fetchMessages = async userId => {\n    // Replace with your API call to fetch messages\n    const response = await fetch(`/api/messages/${userId}`);\n    const data = await response.json();\n    setMessages(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(ChatList, {\n      selectedUser: selectedUser,\n      handleUserSelect: handleUserSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-main\",\n      children: [/*#__PURE__*/_jsxDEV(SelectedUserMessages, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n        onSendMessage: handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatService, \"YwJGZWGW/1Ru2exgkm6LSRvpQiM=\");\n_c = ChatService;\nexport default ChatService;\nvar _c;\n$RefreshReg$(_c, \"ChatService\");","map":{"version":3,"names":["React","useState","useEffect","ChatList","SelectedUserMessages","MessageInput","jsxDEV","_jsxDEV","ChatService","_s","selectedUser","setSelectedUser","messages","setMessages","handleUserSelect","user","fetchMessages","id","userId","response","fetch","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSendMessage","handleSendMessage","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/components/Services/ChatServices/ChatServices.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ChatList from './ChatList';\r\nimport SelectedUserMessages from './SelectedUserMessages';\r\nimport MessageInput from './MessageInput';\r\n\r\nconst ChatService = () => {\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const handleUserSelect = (user) => {\r\n    setSelectedUser(user);\r\n    fetchMessages(user.id); // Fetch messages for the selected user\r\n  };\r\n\r\n  const fetchMessages = async (userId) => {\r\n    // Replace with your API call to fetch messages\r\n    const response = await fetch(`/api/messages/${userId}`);\r\n    const data = await response.json();\r\n    setMessages(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <ChatList selectedUser={selectedUser} handleUserSelect={handleUserSelect} />\r\n      {selectedUser && (\r\n        <div className=\"chat-main\">\r\n          <SelectedUserMessages messages={messages} />\r\n          <MessageInput onSendMessage={handleSendMessage} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatService;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,gBAAgB,GAAIC,IAAI,IAAK;IACjCJ,eAAe,CAACI,IAAI,CAAC;IACrBC,aAAa,CAACD,IAAI,CAACE,EAAE,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMD,aAAa,GAAG,MAAOE,MAAM,IAAK;IACtC;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiBF,MAAM,EAAE,CAAC;IACvD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCT,WAAW,CAACQ,IAAI,CAAC;EACnB,CAAC;EAED,oBACEd,OAAA;IAAKgB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BjB,OAAA,CAACJ,QAAQ;MAACO,YAAY,EAAEA,YAAa;MAACI,gBAAgB,EAAEA;IAAiB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC3ElB,YAAY,iBACXH,OAAA;MAAKgB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBjB,OAAA,CAACH,oBAAoB;QAACQ,QAAQ,EAAEA;MAAS;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5CrB,OAAA,CAACF,YAAY;QAACwB,aAAa,EAAEC;MAAkB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CA3BID,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AA6BjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}