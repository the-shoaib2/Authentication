{"ast":null,"code":"// utils/api.js\nconst BASE_URL = 'http://localhost:8080';\nexport const fetchWithAuth = async (endpoint, options = {}) => {\n  const accessToken = localStorage.getItem('accessToken');\n  const refreshToken = localStorage.getItem('refreshToken');\n\n  // Set default headers\n  options.headers = {\n    ...options.headers,\n    'Authorization': `Bearer ${accessToken}`,\n    'Content-Type': 'application/json'\n  };\n  let response = await fetch(`${BASE_URL}${endpoint}`, options);\n  if (response.status === 401) {\n    // Unauthorized, token may be expired\n    const refreshResponse = await fetch(`${BASE_URL}/auth/refresh`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        refreshToken\n      })\n    });\n    if (refreshResponse.ok) {\n      const {\n        accessToken: newAccessToken,\n        refreshToken: newRefreshToken\n      } = await refreshResponse.json();\n      localStorage.setItem('accessToken', newAccessToken);\n      localStorage.setItem('refreshToken', newRefreshToken);\n\n      // Retry the original request with the new access token\n      options.headers['Authorization'] = `Bearer ${newAccessToken}`;\n      response = await fetch(`${BASE_URL}${endpoint}`, options);\n    } else {\n      // Handle token refresh failure\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      window.location.href = '/login'; // Redirect to login page\n    }\n  }\n  return response;\n};","map":{"version":3,"names":["BASE_URL","fetchWithAuth","endpoint","options","accessToken","localStorage","getItem","refreshToken","headers","response","fetch","status","refreshResponse","method","body","JSON","stringify","ok","newAccessToken","newRefreshToken","json","setItem","removeItem","window","location","href"],"sources":["C:/Users/thesh/Desktop/LOGIN_SINGUP - Copy/LOGIN_SINGUP - Copy/frontend/src/utils/api.js"],"sourcesContent":["// utils/api.js\r\nconst BASE_URL = 'http://localhost:8080';\r\n\r\nexport const fetchWithAuth = async (endpoint, options = {}) => {\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    const refreshToken = localStorage.getItem('refreshToken');\r\n\r\n    // Set default headers\r\n    options.headers = {\r\n        ...options.headers,\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'Content-Type': 'application/json'\r\n    };\r\n\r\n    let response = await fetch(`${BASE_URL}${endpoint}`, options);\r\n    \r\n    if (response.status === 401) { // Unauthorized, token may be expired\r\n        const refreshResponse = await fetch(`${BASE_URL}/auth/refresh`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ refreshToken })\r\n        });\r\n\r\n        if (refreshResponse.ok) {\r\n            const { accessToken: newAccessToken, refreshToken: newRefreshToken } = await refreshResponse.json();\r\n            localStorage.setItem('accessToken', newAccessToken);\r\n            localStorage.setItem('refreshToken', newRefreshToken);\r\n\r\n            // Retry the original request with the new access token\r\n            options.headers['Authorization'] = `Bearer ${newAccessToken}`;\r\n            response = await fetch(`${BASE_URL}${endpoint}`, options);\r\n        } else {\r\n            // Handle token refresh failure\r\n            localStorage.removeItem('accessToken');\r\n            localStorage.removeItem('refreshToken');\r\n            window.location.href = '/login'; // Redirect to login page\r\n        }\r\n    }\r\n\r\n    return response;\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,uBAAuB;AAExC,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC3D,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACvD,MAAMC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;;EAEzD;EACAH,OAAO,CAACK,OAAO,GAAG;IACd,GAAGL,OAAO,CAACK,OAAO;IAClB,eAAe,EAAE,UAAUJ,WAAW,EAAE;IACxC,cAAc,EAAE;EACpB,CAAC;EAED,IAAIK,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,QAAQ,GAAGE,QAAQ,EAAE,EAAEC,OAAO,CAAC;EAE7D,IAAIM,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IAAE;IAC3B,MAAMC,eAAe,GAAG,MAAMF,KAAK,CAAC,GAAGV,QAAQ,eAAe,EAAE;MAC5Da,MAAM,EAAE,MAAM;MACdL,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAET;MAAa,CAAC;IACzC,CAAC,CAAC;IAEF,IAAIK,eAAe,CAACK,EAAE,EAAE;MACpB,MAAM;QAAEb,WAAW,EAAEc,cAAc;QAAEX,YAAY,EAAEY;MAAgB,CAAC,GAAG,MAAMP,eAAe,CAACQ,IAAI,CAAC,CAAC;MACnGf,YAAY,CAACgB,OAAO,CAAC,aAAa,EAAEH,cAAc,CAAC;MACnDb,YAAY,CAACgB,OAAO,CAAC,cAAc,EAAEF,eAAe,CAAC;;MAErD;MACAhB,OAAO,CAACK,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUU,cAAc,EAAE;MAC7DT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,QAAQ,GAAGE,QAAQ,EAAE,EAAEC,OAAO,CAAC;IAC7D,CAAC,MAAM;MACH;MACAE,YAAY,CAACiB,UAAU,CAAC,aAAa,CAAC;MACtCjB,YAAY,CAACiB,UAAU,CAAC,cAAc,CAAC;MACvCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;IACrC;EACJ;EAEA,OAAOhB,QAAQ;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}