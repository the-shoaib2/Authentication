{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\utils\\\\ProtectedRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { checkAuthentication } from '../utils/ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: async props => {\n      const isAuth = await checkAuthentication();\n      if (isAuth) {\n        return /*#__PURE__*/_jsxDEV(Component, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 28\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 28\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Route","Redirect","checkAuthentication","jsxDEV","_jsxDEV","ProtectedRoute","component","Component","rest","render","props","isAuth","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/utils/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { checkAuthentication } from '../utils/ApiService';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={async (props) => {\r\n                const isAuth = await checkAuthentication();\r\n                if (isAuth) {\r\n                    return <Component {...props} />;\r\n                } else {\r\n                    return <Redirect to=\"/login\" />;\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,mBAAmB,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,cAAc,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAC1D,oBACIJ,OAAA,CAACJ,KAAK;IAAA,GACEQ,IAAI;IACRC,MAAM,EAAE,MAAOC,KAAK,IAAK;MACrB,MAAMC,MAAM,GAAG,MAAMT,mBAAmB,CAAC,CAAC;MAC1C,IAAIS,MAAM,EAAE;QACR,oBAAOP,OAAA,CAACG,SAAS;UAAA,GAAKG;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MACnC,CAAC,MAAM;QACH,oBAAOX,OAAA,CAACH,QAAQ;UAACe,EAAE,EAAC;QAAQ;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACnC;IACJ;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACE,EAAA,GAdIZ,cAAc;AAgBpB,eAAeA,cAAc;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}