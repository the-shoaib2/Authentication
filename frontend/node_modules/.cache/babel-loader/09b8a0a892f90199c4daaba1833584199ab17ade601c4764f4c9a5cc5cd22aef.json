{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\components\\\\ConfirmAccountPopup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { handleError } from '../utils/ReactToastify';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ConfirmAccountPopup({\n  isActive,\n  email,\n  token,\n  show,\n  onClose,\n  accountExpiryDate,\n  onAccountExpired,\n  countdownTime\n}) {\n  _s();\n  const [showPopup, setShowPopup] = useState(false);\n  const [remainingDays, setRemainingDays] = useState(0);\n  const [countdown, setCountdown] = useState(10);\n  const [showCountdown, setShowCountdown] = useState(false);\n  useEffect(() => {\n    const checkAccountStatus = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/check-account-status', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to check account status');\n        }\n        const data = await response.json();\n        if (data.expired) {\n          setShowCountdown(true);\n          setCountdown(10);\n        } else {\n          setRemainingDays(data.remainingDays);\n        }\n      } catch (error) {\n        console.error('Error checking account status:', error);\n        handleError('Failed to check account status. Please try again.');\n      }\n    };\n    if (show && !isActive) {\n      checkAccountStatus();\n    }\n  }, [show, isActive, token]);\n  useEffect(() => {\n    let timer;\n    if (showCountdown && countdown > 0) {\n      timer = setInterval(() => setCountdown(prev => prev - 1), 1000);\n    } else if (showCountdown && countdown === 0) {\n      onAccountExpired();\n    }\n    return () => clearInterval(timer);\n  }, [showCountdown, countdown, onAccountExpired]);\n  if (isActive) return null;\n  const handleClose = () => {\n    setShowPopup(false);\n    if (onClose) onClose();\n  };\n  const getMessage = () => {\n    if (showCountdown) {\n      return `Your account has expired. It will be deleted in ${countdown} seconds.`;\n    } else if (remainingDays > 0) {\n      return `Confirm your email within ${remainingDays} day${remainingDays > 1 ? 's' : ''}. Expires: ${new Date(accountExpiryDate).toLocaleDateString()}. Account will be auto-deleted after expiration. Note: Account deletion unavailable after confirmation.`;\n    } else {\n      return \"Your account has expired and will be deleted soon. Please contact support if you wish to reactivate it.\";\n    }\n  };\n  if (showPopup || showCountdown) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inactive-account-message-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-popup-button\",\n          onClick: handleClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Your account is not confirmed yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: getMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), remainingDays > 0 && /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/verify-email\",\n          className: \"confirm-account-link\",\n          state: {\n            token: token,\n            email: email\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"confirm-account-button\",\n            children: \"Activate Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n  if (countdownTime !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inactive-account-message-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Account Expiration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your account has expired and will be deleted in \", countdownTime, \" seconds.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirm-account-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"confirm-account-message\",\n        children: getMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), remainingDays > 0 && !showCountdown && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/verify-email\",\n        className: \"confirm-email-button\",\n        state: {\n          token: token,\n          email: email\n        },\n        children: \"Confirm Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), showCountdown && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdown-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdown-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Account Expiration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: getMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(ConfirmAccountPopup, \"4uWGGSzxHOqNx2Id6pvkXi0bLoM=\");\n_c = ConfirmAccountPopup;\nexport default ConfirmAccountPopup;\nvar _c;\n$RefreshReg$(_c, \"ConfirmAccountPopup\");","map":{"version":3,"names":["React","useState","useEffect","Link","handleError","jsxDEV","_jsxDEV","Fragment","_Fragment","ConfirmAccountPopup","isActive","email","token","show","onClose","accountExpiryDate","onAccountExpired","countdownTime","_s","showPopup","setShowPopup","remainingDays","setRemainingDays","countdown","setCountdown","showCountdown","setShowCountdown","checkAccountStatus","response","fetch","method","headers","ok","Error","data","json","expired","error","console","timer","setInterval","prev","clearInterval","handleClose","getMessage","Date","toLocaleDateString","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","to","state","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/components/ConfirmAccountPopup.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { handleError } from '../utils/ReactToastify';\r\n\r\nfunction ConfirmAccountPopup({ isActive, email, token, show, onClose, accountExpiryDate, onAccountExpired, countdownTime }) {\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [remainingDays, setRemainingDays] = useState(0);\r\n    const [countdown, setCountdown] = useState(10);\r\n    const [showCountdown, setShowCountdown] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const checkAccountStatus = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:8080/check-account-status', {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to check account status');\r\n                }\r\n\r\n                const data = await response.json();\r\n                if (data.expired) {\r\n                    setShowCountdown(true);\r\n                    setCountdown(10);\r\n                } else {\r\n                    setRemainingDays(data.remainingDays);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error checking account status:', error);\r\n                handleError('Failed to check account status. Please try again.');\r\n            }\r\n        };\r\n\r\n        if (show && !isActive) {\r\n            checkAccountStatus();\r\n        }\r\n    }, [show, isActive, token]);\r\n\r\n    useEffect(() => {\r\n        let timer;\r\n        if (showCountdown && countdown > 0) {\r\n            timer = setInterval(() => setCountdown(prev => prev - 1), 1000);\r\n        } else if (showCountdown && countdown === 0) {\r\n            onAccountExpired();\r\n        }\r\n        return () => clearInterval(timer);\r\n    }, [showCountdown, countdown, onAccountExpired]);\r\n\r\n    if (isActive) return null;\r\n\r\n    const handleClose = () => {\r\n        setShowPopup(false);\r\n        if (onClose) onClose();\r\n    };\r\n\r\n    const getMessage = () => {\r\n        if (showCountdown) {\r\n            return `Your account has expired. It will be deleted in ${countdown} seconds.`;\r\n        } else if (remainingDays > 0) {\r\n            return `Confirm your email within ${remainingDays} day${remainingDays > 1 ? 's' : ''}. Expires: ${new Date(accountExpiryDate).toLocaleDateString()}. Account will be auto-deleted after expiration. Note: Account deletion unavailable after confirmation.`;\r\n        } else {\r\n            return \"Your account has expired and will be deleted soon. Please contact support if you wish to reactivate it.\";\r\n        }\r\n    };\r\n\r\n    if (showPopup || showCountdown) {\r\n        return (\r\n            <div className=\"popup-overlay\">\r\n                <div className=\"inactive-account-message-container\">\r\n                    <button className=\"close-popup-button\" onClick={handleClose}>\r\n                        &times;\r\n                    </button>\r\n                    <h1>Your account is not confirmed yet.</h1>\r\n                    <p>{getMessage()}</p>\r\n                    {remainingDays > 0 && (\r\n                        <Link \r\n                            to=\"/verify-email\" \r\n                            className=\"confirm-account-link\" \r\n                            state={{ \r\n                                token: token,\r\n                                email: email\r\n                            }}\r\n                        >\r\n                            <button className=\"confirm-account-button\">\r\n                                Activate Account\r\n                            </button>\r\n                        </Link>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (countdownTime !== null) {\r\n        return (\r\n            <div className=\"popup-overlay\">\r\n                <div className=\"inactive-account-message-container\">\r\n                    <h1>Account Expiration</h1>\r\n                    <p>Your account has expired and will be deleted in {countdownTime} seconds.</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"confirm-account-bar\">\r\n                <span className=\"confirm-account-message\">\r\n                    {getMessage()}\r\n                </span>\r\n                {remainingDays > 0 && !showCountdown && (\r\n                    <Link \r\n                        to=\"/verify-email\" \r\n                        className=\"confirm-email-button\"\r\n                        state={{ \r\n                            token: token,\r\n                            email: email\r\n                        }}\r\n                    >\r\n                        Confirm Email\r\n                    </Link>\r\n                )}\r\n            </div>\r\n            {showCountdown && (\r\n                <div className=\"countdown-overlay\">\r\n                    <div className=\"countdown-container\">\r\n                        <h1>Account Expiration</h1>\r\n                        <p>{getMessage()}</p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ConfirmAccountPopup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}