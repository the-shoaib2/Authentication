{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\components\\\\ForgotPassword\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { state, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { handleSuccess, handleError, ToastContainer } from \"../../utils/ReactToastify\";\nimport \"../../assets/style/styleutils/ReactToastifyCustom.css\";\nimport \"../../assets/style/VerificationStyle/ResetPassword.css\";\nimport PasswordStrengthMeter from \"../../Extension/PasswordStrengthMeter\";\nimport StarIcon from '../../components/StarIcon';\nimport { useForgotPasswordState } from '../../utils/forgotPasswordState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(false);\n  const [confirmPasswordError, setConfirmPasswordError] = useState(false);\n  const [matchError, setMatchError] = useState(false);\n  const {\n    state,\n    dispatch\n  } = useForgotPasswordState();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!state.codeVerified) {\n      navigate('/find-user');\n    }\n  }, [state.codeVerified, navigate]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    let hasError = false;\n\n    // Validate inputs\n    if (!password) {\n      setPasswordError(true);\n      hasError = true;\n    } else {\n      setPasswordError(false);\n    }\n    if (!confirmPassword) {\n      setConfirmPasswordError(true);\n      hasError = true;\n    } else {\n      setConfirmPasswordError(false);\n    }\n    if (password !== confirmPassword) {\n      setMatchError(true);\n      handleError(\"Passwords do not match\");\n      hasError = true;\n    } else {\n      setMatchError(false);\n    }\n    if (hasError) return;\n    try {\n      const response = await fetch(\"http://localhost:8080/verification/reset-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${state.resetToken}`\n        },\n        body: JSON.stringify({\n          email: state.email,\n          newPassword: password\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        handleSuccess(result.message);\n        dispatch({\n          type: 'RESET_STATE'\n        });\n        navigate(\"/login\");\n      } else {\n        handleError(result.message);\n      }\n    } catch (err) {\n      handleError(\"Network error. Please check your connection and try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container fade-in-bottom\",\n    children: [/*#__PURE__*/_jsxDEV(StarIcon, {\n      width: 80,\n      height: 80\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"fade-in\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `input-wrapper ${matchError ? \"error\" : \"\"} fade-in`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group-reset-password ${passwordError ? \"error\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"new-password\",\n            placeholder: \"\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"new-password\",\n            className: \"form-label-reset-password\",\n            children: \"New password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group-reset-password ${confirmPasswordError ? \"error\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirm-password\",\n            placeholder: \"\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirm-password\",\n            className: \"form-label-reset-password\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PasswordStrengthMeter, {\n          password: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"scale-in\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"tuFXulFMtEIbD1kzB72WZ3S1gzc=\", false, function () {\n  return [useForgotPasswordState, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","state","useState","useEffect","useNavigate","handleSuccess","handleError","ToastContainer","PasswordStrengthMeter","StarIcon","useForgotPasswordState","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","matchError","setMatchError","dispatch","navigate","codeVerified","handleSubmit","event","preventDefault","hasError","response","fetch","method","headers","resetToken","body","JSON","stringify","email","newPassword","result","json","ok","message","type","err","className","children","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","placeholder","value","onChange","e","target","required","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/components/ForgotPassword/ResetPassword.jsx"],"sourcesContent":["import React, { state,useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { handleSuccess, handleError, ToastContainer } from \"../../utils/ReactToastify\";\r\nimport \"../../assets/style/styleutils/ReactToastifyCustom.css\";\r\nimport \"../../assets/style/VerificationStyle/ResetPassword.css\";\r\nimport PasswordStrengthMeter from \"../../Extension/PasswordStrengthMeter\"; \r\nimport StarIcon from '../../components/StarIcon';\r\nimport { useForgotPasswordState } from '../../utils/forgotPasswordState';\r\n\r\nfunction ResetPassword() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(false);\r\n  const [matchError, setMatchError] = useState(false);\r\n  const { state, dispatch } = useForgotPasswordState();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!state.codeVerified) {\r\n      navigate('/find-user');\r\n    }\r\n  }, [state.codeVerified, navigate]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let hasError = false;\r\n\r\n    // Validate inputs\r\n    if (!password) {\r\n      setPasswordError(true);\r\n      hasError = true;\r\n    } else {\r\n      setPasswordError(false);\r\n    }\r\n\r\n    if (!confirmPassword) {\r\n      setConfirmPasswordError(true);\r\n      hasError = true;\r\n    } else {\r\n      setConfirmPasswordError(false);\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setMatchError(true);\r\n      handleError(\"Passwords do not match\");\r\n      hasError = true;\r\n    } else {\r\n      setMatchError(false);\r\n    }\r\n\r\n    if (hasError) return;\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:8080/verification/reset-password\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${state.resetToken}`\r\n          },\r\n          body: JSON.stringify({ email: state.email, newPassword: password }),\r\n        }\r\n      );\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        handleSuccess(result.message);\r\n        dispatch({ type: 'RESET_STATE' });\r\n        navigate(\"/login\");\r\n      } else {\r\n        handleError(result.message);\r\n      }\r\n    } catch (err) {\r\n      handleError(\"Network error. Please check your connection and try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reset-password-container fade-in-bottom\">\r\n      <StarIcon width={80} height={80}/>\r\n      <h1 className=\"fade-in\">Reset Password</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={`input-wrapper ${matchError ? \"error\" : \"\"} fade-in`}>\r\n          <div className={`form-group-reset-password ${passwordError ? \"error\" : \"\"}`}>\r\n            <input\r\n              type=\"password\"\r\n              id=\"new-password\"\r\n              placeholder=\"\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            <label htmlFor=\"new-password\" className=\"form-label-reset-password\">\r\n              New password\r\n            </label>\r\n          </div>\r\n          <div className={`form-group-reset-password ${confirmPasswordError ? \"error\" : \"\"}`}>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirm-password\"\r\n              placeholder=\"\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              required\r\n            />\r\n            <label htmlFor=\"confirm-password\" className=\"form-label-reset-password\">\r\n              Confirm Password\r\n            </label>\r\n          </div>\r\n          <PasswordStrengthMeter password={password} />\r\n        </div>\r\n        <button type=\"submit\" className=\"scale-in\">\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}