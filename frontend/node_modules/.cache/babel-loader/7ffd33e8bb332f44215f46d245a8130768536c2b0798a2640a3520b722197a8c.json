{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\pages\\\\Signup.jsx\",\n  _s = $RefreshSig$();\n// //Signup.js\n\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\n// import '../utils/ReactToastifyCustom.css';\n// import '../utils/style/animations.css';\n// import '../utils/loading.css';\n\n// function Signup() {\n//     const [name, setName] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [confirmPassword, setConfirmPassword] = useState('');\n//     const [loading, setLoading] = useState(false);\n//     const [fadeIn, setFadeIn] = useState(true);\n//     const [fadeOut, setFadeOut] = useState(false);\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         const timeoutId = setTimeout(() => {\n//             setFadeIn(false);\n//         }, 500);\n//         return () => clearTimeout(timeoutId);\n//     }, []);\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n\n//         if (password !== confirmPassword) {\n//             handleError('Passwords do not match');\n//             return;\n//         }\n\n//         setLoading(true);\n//         setFadeOut(false);\n\n//         setTimeout(async () => {\n//             setFadeOut(true);\n//             setTimeout(async () => {\n//                 try {\n//                     const response = await fetch(\"http://localhost:8080/auth/signup\", {\n//                         method: 'POST',\n//                         headers: {\n//                             'Content-Type': 'application/json',\n//                         },\n//                         body: JSON.stringify({ name, email, password }),\n//                     });\n//                     const result = await response.json();\n//                     if (response.ok) {\n//                         handleSuccess('Signup successful!');\n//                         setTimeout(() => navigate('/login'), 500);\n//                     } else {\n//                         handleError(result.message || 'An error occurred during signup. Please try again.');\n//                     }\n//                 } catch (err) {\n//                     handleError('Network error. Please check your connection and try again.');\n//                 } finally {\n//                     setLoading(false);\n//                 }\n//             }, 250);\n//         }, 1000);\n//     };\n\n//     return (\n//         <div className={`signup-container container ${fadeIn ? 'fade-in' : ''}`}>\n//             <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\n//             <h1>Sign up</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <div className='form-group'>\n//                     <input\n//                         type='text'\n//                         id='name'\n//                         placeholder=''\n//                         value={name}\n//                         onChange={(e) => setName(e.target.value)}\n//                         required\n//                     />\n//                     <label htmlFor='name' className='form-label'>Name</label>\n//                 </div>\n//                 <div className='form-group'>\n//                     <input\n//                         type='email'\n//                         id='email'\n//                         placeholder=''\n//                         value={email}\n//                         onChange={(e) => setEmail(e.target.value)}\n//                         required\n//                     />\n//                     <label htmlFor='email' className='form-label'>Email</label>\n//                 </div>\n\n//                 <div className='form-group-container'>\n//                     <div className='form-group'>\n//                         <input\n//                             type='password'\n//                             id='password'\n//                             placeholder=''\n//                             value={password}\n//                             onChange={(e) => setPassword(e.target.value)}\n//                             required\n//                         />\n//                         <label htmlFor='password' className='form-label'>Password</label>\n//                     </div>\n\n//                     <div className='form-group'>\n//                         <input\n//                             type='password'\n//                             id='confirmPassword'\n//                             placeholder=''\n//                             value={confirmPassword}\n//                             onChange={(e) => setConfirmPassword(e.target.value)}\n//                             required\n//                         />\n//                         <label htmlFor='confirmPassword' className='form-label'>Confirm Password</label>\n//                     </div>\n//                 </div>\n\n//                 <button className='signup-button' type='submit'>Sign up</button>\n//                 <span>Already have an account? <Link to=\"/login\" className='pages-link'>Login</Link></span>\n//             </form>\n\n//             <span className=\"terms\">\n//                 By creating an account, you agree to our \n//                 <Link to=\"/terms\" className='terms-pages-link'> Terms of Use</Link>, \n//                 <Link to=\"/privacy-policy\" className='terms-pages-link'> Privacy Policy</Link>.\n//             </span>\n\n//             <ToastContainer />\n//             {loading && (\n//                 <div className={`loading-overlay ${fadeOut ? 'hidden' : ''}`}>\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default Signup;\n\n// // frontend/src/pages/Signup.js\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\n// import '../utils/ReactToastifyCustom.css';\n// import '../utils/loading.css';\n// import '../utils/style/animations.css';\n\n// function Signup() {\n//     const [name, setName] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [confirmPassword, setConfirmPassword] = useState('');\n//     const [loading, setLoading] = useState(false);\n//     const [fadeIn, setFadeIn] = useState(true);\n//     const [fadeOut, setFadeOut] = useState(false);\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         const timeoutId = setTimeout(() => {\n//             setFadeIn(false);\n//         }, 500);\n//         return () => clearTimeout(timeoutId);\n//     }, []);\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n\n//         if (password !== confirmPassword) {\n//             handleError('Passwords do not match');\n//             return;\n//         }\n\n//         setLoading(true);\n//         setFadeOut(false);\n\n//         setTimeout(async () => {\n//             setFadeOut(true);\n//             setTimeout(async () => {\n//                 try {\n//                     const response = await fetch(\"http://localhost:8080/auth/signup\", {\n//                         method: 'POST',\n//                         headers: {\n//                             'Content-Type': 'application/json',\n//                         },\n//                         body: JSON.stringify({ name, email, password }),\n//                     });\n//                     const result = await response.json();\n//                     if (response.ok) {\n//                         localStorage.setItem('token', result.accessToken);\n//                         localStorage.setItem('refreshToken', result.refreshToken);\n//                         localStorage.setItem('loggedInUser', JSON.stringify(result));\n//                         handleSuccess('Signup successful! Please verify your email.');\n//                         setTimeout(() => navigate('/verify-email', { state: { email } }), 500); // Redirect to verification page\n//                     } else {\n//                         handleError(result.message || 'An error occurred during signup. Please try again.');\n//                     }\n//                 } catch (err) {\n//                     handleError('Network error. Please check your connection and try again.');\n//                 } finally {\n//                     setLoading(false);\n//                 }\n//             }, 250);\n//         }, 1000);\n//     };\n\n//     return (\n//         <div className={`signup-container container ${fadeIn ? 'fade-in' : ''}`}>\n//             <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\n//             <h1>Sign up</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <div className='form-group'>\n//                     <input\n//                         type='text'\n//                         id='name'\n//                         placeholder=''\n//                         value={name}\n//                         onChange={(e) => setName(e.target.value)}\n//                         required\n//                     />\n//                     <label htmlFor='name' className='form-label'>Name</label>\n//                 </div>\n//                 <div className='form-group'>\n//                     <input\n//                         type='email'\n//                         id='email'\n//                         placeholder=''\n//                         value={email}\n//                         onChange={(e) => setEmail(e.target.value)}\n//                         required\n//                     />\n//                     <label htmlFor='email' className='form-label'>Email</label>\n//                 </div>\n\n//                 <div className='form-group-container'>\n//                     <div className='form-group'>\n//                         <input\n//                             type='password'\n//                             id='password'\n//                             placeholder=''\n//                             value={password}\n//                             onChange={(e) => setPassword(e.target.value)}\n//                             required\n//                         />\n//                         <label htmlFor='password' className='form-label'>Password</label>\n//                     </div>\n\n//                     <div className='form-group'>\n//                         <input\n//                             type='password'\n//                             id='confirmPassword'\n//                             placeholder=''\n//                             value={confirmPassword}\n//                             onChange={(e) => setConfirmPassword(e.target.value)}\n//                             required\n//                         />\n//                         <label htmlFor='confirmPassword' className='form-label'>Confirm Password</label>\n//                     </div>\n//                 </div>\n\n//                 <button className='signup-button' type='submit'>Sign up</button>\n//                 <span>Already have an account? <Link to=\"/login\" className='pages-link'>Login</Link></span>\n//             </form>\n\n//             <span className=\"terms\">\n//                 By creating an account, you agree to our \n//                 <Link to=\"/terms\" className='terms-pages-link'> Terms of Use</Link>, \n//                 <Link to=\"/privacy-policy\" className='terms-pages-link'> Privacy Policy</Link>.\n//             </span>\n\n//             <ToastContainer />\n//             {loading && (\n//                 <div className={`loading-overlay ${fadeOut ? 'hidden' : ''}`}>\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default Signup;\n\n// frontend/src/pages/Signup.js\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\nimport '../utils/ReactToastifyCustom.css';\nimport '../utils/loading.css';\nimport '../utils/style/animations.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [fadeIn, setFadeIn] = useState(true);\n  const [fadeOut, setFadeOut] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setFadeIn(false);\n    }, 500);\n    return () => clearTimeout(timeoutId);\n  }, []);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      handleError('Passwords do not match');\n      return;\n    }\n    setLoading(true);\n    setFadeOut(false);\n    setTimeout(async () => {\n      setFadeOut(true);\n      try {\n        const response = await fetch('/api/auth/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name,\n            email,\n            password\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          handleSuccess(data.message);\n          setTimeout(() => navigate(`/verify-email/${data.token}`), 2000);\n        } else {\n          handleError(data.message);\n        }\n      } catch (error) {\n        handleError('An error occurred. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    }, 500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `signup-container ${fadeIn ? 'fade-in' : ''} ${fadeOut ? 'fade-out' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 9\n  }, this);\n}\n_s(Signup, \"N+nzBi6Q8v0ERfjLkwRfWxtbJSQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Link","handleSuccess","handleError","ToastContainer","jsxDEV","_jsxDEV","Signup","_s","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","loading","setLoading","fadeIn","setFadeIn","fadeOut","setFadeOut","navigate","timeoutId","setTimeout","clearTimeout","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","token","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/pages/Signup.jsx"],"sourcesContent":["// //Signup.js\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate, Link } from 'react-router-dom';\r\n// import { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\r\n// import '../utils/ReactToastifyCustom.css';\r\n// import '../utils/style/animations.css';\r\n// import '../utils/loading.css';\r\n\r\n// function Signup() {\r\n//     const [name, setName] = useState('');\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [confirmPassword, setConfirmPassword] = useState('');\r\n//     const [loading, setLoading] = useState(false);\r\n//     const [fadeIn, setFadeIn] = useState(true);\r\n//     const [fadeOut, setFadeOut] = useState(false);\r\n//     const navigate = useNavigate();\r\n\r\n//     useEffect(() => {\r\n//         const timeoutId = setTimeout(() => {\r\n//             setFadeIn(false);\r\n//         }, 500);\r\n//         return () => clearTimeout(timeoutId);\r\n//     }, []);\r\n\r\n//     const handleSubmit = async (event) => {\r\n//         event.preventDefault();\r\n\r\n//         if (password !== confirmPassword) {\r\n//             handleError('Passwords do not match');\r\n//             return;\r\n//         }\r\n\r\n\r\n//         setLoading(true);\r\n//         setFadeOut(false);\r\n\r\n//         setTimeout(async () => {\r\n//             setFadeOut(true);\r\n//             setTimeout(async () => {\r\n//                 try {\r\n//                     const response = await fetch(\"http://localhost:8080/auth/signup\", {\r\n//                         method: 'POST',\r\n//                         headers: {\r\n//                             'Content-Type': 'application/json',\r\n//                         },\r\n//                         body: JSON.stringify({ name, email, password }),\r\n//                     });\r\n//                     const result = await response.json();\r\n//                     if (response.ok) {\r\n//                         handleSuccess('Signup successful!');\r\n//                         setTimeout(() => navigate('/login'), 500);\r\n//                     } else {\r\n//                         handleError(result.message || 'An error occurred during signup. Please try again.');\r\n//                     }\r\n//                 } catch (err) {\r\n//                     handleError('Network error. Please check your connection and try again.');\r\n//                 } finally {\r\n//                     setLoading(false);\r\n//                 }\r\n//             }, 250);\r\n//         }, 1000);\r\n//     };\r\n\r\n//     return (\r\n//         <div className={`signup-container container ${fadeIn ? 'fade-in' : ''}`}>\r\n//             <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\r\n//             <h1>Sign up</h1>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className='form-group'>\r\n//                     <input\r\n//                         type='text'\r\n//                         id='name'\r\n//                         placeholder=''\r\n//                         value={name}\r\n//                         onChange={(e) => setName(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                     <label htmlFor='name' className='form-label'>Name</label>\r\n//                 </div>\r\n//                 <div className='form-group'>\r\n//                     <input\r\n//                         type='email'\r\n//                         id='email'\r\n//                         placeholder=''\r\n//                         value={email}\r\n//                         onChange={(e) => setEmail(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                     <label htmlFor='email' className='form-label'>Email</label>\r\n//                 </div>\r\n\r\n//                 <div className='form-group-container'>\r\n//                     <div className='form-group'>\r\n//                         <input\r\n//                             type='password'\r\n//                             id='password'\r\n//                             placeholder=''\r\n//                             value={password}\r\n//                             onChange={(e) => setPassword(e.target.value)}\r\n//                             required\r\n//                         />\r\n//                         <label htmlFor='password' className='form-label'>Password</label>\r\n//                     </div>\r\n\r\n//                     <div className='form-group'>\r\n//                         <input\r\n//                             type='password'\r\n//                             id='confirmPassword'\r\n//                             placeholder=''\r\n//                             value={confirmPassword}\r\n//                             onChange={(e) => setConfirmPassword(e.target.value)}\r\n//                             required\r\n//                         />\r\n//                         <label htmlFor='confirmPassword' className='form-label'>Confirm Password</label>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <button className='signup-button' type='submit'>Sign up</button>\r\n//                 <span>Already have an account? <Link to=\"/login\" className='pages-link'>Login</Link></span>\r\n//             </form>\r\n\r\n//             <span className=\"terms\">\r\n//                 By creating an account, you agree to our \r\n//                 <Link to=\"/terms\" className='terms-pages-link'> Terms of Use</Link>, \r\n//                 <Link to=\"/privacy-policy\" className='terms-pages-link'> Privacy Policy</Link>.\r\n//             </span>\r\n\r\n//             <ToastContainer />\r\n//             {loading && (\r\n//                 <div className={`loading-overlay ${fadeOut ? 'hidden' : ''}`}>\r\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Signup;\r\n\r\n\r\n\r\n// // frontend/src/pages/Signup.js\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate, Link } from 'react-router-dom';\r\n// import { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\r\n// import '../utils/ReactToastifyCustom.css';\r\n// import '../utils/loading.css';\r\n// import '../utils/style/animations.css';\r\n\r\n// function Signup() {\r\n//     const [name, setName] = useState('');\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [confirmPassword, setConfirmPassword] = useState('');\r\n//     const [loading, setLoading] = useState(false);\r\n//     const [fadeIn, setFadeIn] = useState(true);\r\n//     const [fadeOut, setFadeOut] = useState(false);\r\n//     const navigate = useNavigate();\r\n\r\n//     useEffect(() => {\r\n//         const timeoutId = setTimeout(() => {\r\n//             setFadeIn(false);\r\n//         }, 500);\r\n//         return () => clearTimeout(timeoutId);\r\n//     }, []);\r\n\r\n\r\n\r\n//     const handleSubmit = async (event) => {\r\n//         event.preventDefault();\r\n    \r\n//         if (password !== confirmPassword) {\r\n//             handleError('Passwords do not match');\r\n//             return;\r\n//         }\r\n    \r\n//         setLoading(true);\r\n//         setFadeOut(false);\r\n    \r\n//         setTimeout(async () => {\r\n//             setFadeOut(true);\r\n//             setTimeout(async () => {\r\n//                 try {\r\n//                     const response = await fetch(\"http://localhost:8080/auth/signup\", {\r\n//                         method: 'POST',\r\n//                         headers: {\r\n//                             'Content-Type': 'application/json',\r\n//                         },\r\n//                         body: JSON.stringify({ name, email, password }),\r\n//                     });\r\n//                     const result = await response.json();\r\n//                     if (response.ok) {\r\n//                         localStorage.setItem('token', result.accessToken);\r\n//                         localStorage.setItem('refreshToken', result.refreshToken);\r\n//                         localStorage.setItem('loggedInUser', JSON.stringify(result));\r\n//                         handleSuccess('Signup successful! Please verify your email.');\r\n//                         setTimeout(() => navigate('/verify-email', { state: { email } }), 500); // Redirect to verification page\r\n//                     } else {\r\n//                         handleError(result.message || 'An error occurred during signup. Please try again.');\r\n//                     }\r\n//                 } catch (err) {\r\n//                     handleError('Network error. Please check your connection and try again.');\r\n//                 } finally {\r\n//                     setLoading(false);\r\n//                 }\r\n//             }, 250);\r\n//         }, 1000);\r\n//     };\r\n\r\n//     return (\r\n//         <div className={`signup-container container ${fadeIn ? 'fade-in' : ''}`}>\r\n//             <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\r\n//             <h1>Sign up</h1>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className='form-group'>\r\n//                     <input\r\n//                         type='text'\r\n//                         id='name'\r\n//                         placeholder=''\r\n//                         value={name}\r\n//                         onChange={(e) => setName(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                     <label htmlFor='name' className='form-label'>Name</label>\r\n//                 </div>\r\n//                 <div className='form-group'>\r\n//                     <input\r\n//                         type='email'\r\n//                         id='email'\r\n//                         placeholder=''\r\n//                         value={email}\r\n//                         onChange={(e) => setEmail(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                     <label htmlFor='email' className='form-label'>Email</label>\r\n//                 </div>\r\n\r\n//                 <div className='form-group-container'>\r\n//                     <div className='form-group'>\r\n//                         <input\r\n//                             type='password'\r\n//                             id='password'\r\n//                             placeholder=''\r\n//                             value={password}\r\n//                             onChange={(e) => setPassword(e.target.value)}\r\n//                             required\r\n//                         />\r\n//                         <label htmlFor='password' className='form-label'>Password</label>\r\n//                     </div>\r\n\r\n//                     <div className='form-group'>\r\n//                         <input\r\n//                             type='password'\r\n//                             id='confirmPassword'\r\n//                             placeholder=''\r\n//                             value={confirmPassword}\r\n//                             onChange={(e) => setConfirmPassword(e.target.value)}\r\n//                             required\r\n//                         />\r\n//                         <label htmlFor='confirmPassword' className='form-label'>Confirm Password</label>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <button className='signup-button' type='submit'>Sign up</button>\r\n//                 <span>Already have an account? <Link to=\"/login\" className='pages-link'>Login</Link></span>\r\n//             </form>\r\n\r\n//             <span className=\"terms\">\r\n//                 By creating an account, you agree to our \r\n//                 <Link to=\"/terms\" className='terms-pages-link'> Terms of Use</Link>, \r\n//                 <Link to=\"/privacy-policy\" className='terms-pages-link'> Privacy Policy</Link>.\r\n//             </span>\r\n\r\n//             <ToastContainer />\r\n//             {loading && (\r\n//                 <div className={`loading-overlay ${fadeOut ? 'hidden' : ''}`}>\r\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Signup;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// frontend/src/pages/Signup.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\r\nimport '../utils/ReactToastifyCustom.css';\r\nimport '../utils/loading.css';\r\nimport '../utils/style/animations.css';\r\n\r\nfunction Signup() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [fadeIn, setFadeIn] = useState(true);\r\n    const [fadeOut, setFadeOut] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(() => {\r\n            setFadeIn(false);\r\n        }, 500);\r\n        return () => clearTimeout(timeoutId);\r\n    }, []);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n    \r\n        if (password !== confirmPassword) {\r\n            handleError('Passwords do not match');\r\n            return;\r\n        }\r\n    \r\n        setLoading(true);\r\n        setFadeOut(false);\r\n    \r\n        setTimeout(async () => {\r\n            setFadeOut(true);\r\n            try {\r\n                const response = await fetch('/api/auth/signup', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ name, email, password })\r\n                });\r\n    \r\n                const data = await response.json();\r\n    \r\n                if (response.ok) {\r\n                    handleSuccess(data.message);\r\n                    setTimeout(() => navigate(`/verify-email/${data.token}`), 2000);\r\n                } else {\r\n                    handleError(data.message);\r\n                }\r\n    \r\n            } catch (error) {\r\n                handleError('An error occurred. Please try again.');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }, 500);\r\n    };\r\n\r\n    return (\r\n        <div className={`signup-container ${fadeIn ? 'fade-in' : ''} ${fadeOut ? 'fade-out' : ''}`}>\r\n            <ToastContainer />\r\n            <form onSubmit={handleSubmit}>\r\n                <h2>Signup</h2>\r\n                <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Confirm Password</label>\r\n                    <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} required />\r\n                </div>\r\n                <button type=\"submit\" disabled={loading}>Sign Up</button>\r\n                {loading && <div className=\"loading\">Loading...</div>}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}