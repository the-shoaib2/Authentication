{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\pages\\\\UserProfile.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { handleError, handleSuccess } from \"../utils/ReactToastify\";\n// import { ToastContainer } from \"react-toastify\";\n// import \"../utils/ReactToastifyCustom.css\";\n// import \"../utils/style/profile.css\";\n\n// function UserProfile() {\n//   const [user, setUser] = useState({});\n//   const [loading, setLoading] = useState(true);\n//   const [showLogoutModal, setShowLogoutModal] = useState(false);\n//   const [darkMode, setDarkMode] = useState(false);\n//   const [rotate, setRotate] = useState(false);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     fetchUserProfile();\n//   }, []);\n\n//   const fetchUserProfile = async () => {\n//     setLoading(true);\n//     try {\n//       const response = await fetch(\"http://localhost:8080/Users/me\", {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n//         },\n//       });\n//       const result = await response.json();\n//       if (response.ok) {\n//         setUser(result);\n//       } else {\n//         handleError(result.message || \"Failed to fetch user data. Please try again.\");\n//         navigate(\"/login\");\n//       }\n//     } catch (err) {\n//       handleError(\"Network error. Please check your connection and try again.\");\n//       navigate(\"/login\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleLogout = async () => {\n//     try {\n//       const response = await fetch(\"http://localhost:8080/auth/logout\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n//         },\n//         body: JSON.stringify({\n//           refreshToken: localStorage.getItem(\"refreshToken\"),\n//         }),\n//       });\n//       if (response.ok) {\n//         localStorage.removeItem(\"token\");\n//         localStorage.removeItem(\"refreshToken\");\n//         localStorage.removeItem(\"loggedInUser\");\n//         handleSuccess(\"Logged out successfully!\");\n//         setTimeout(() => navigate(\"/login\"), 500);\n//       } else {\n//         handleError(\"Failed to log out. Please try again.\");\n//       }\n//     } catch (err) {\n//       handleError(\"Network error. Please check your connection and try again.\");\n//     }\n//   };\n\n//   const openLogoutModal = () => {\n//     setShowLogoutModal(true);\n//   };\n\n//   const closeLogoutModal = () => {\n//     setShowLogoutModal(false);\n//   };\n\n//   const toggleDarkMode = () => {\n//     setDarkMode(!darkMode);\n//     setRotate(true);\n//     setTimeout(() => setRotate(false), 500); // Adjust timing as needed\n//   };\n\n//   const rotateClass = rotate ? (darkMode ? \"rotate-right\" : \"rotate-left\") : \"\";\n\n//   const fullName = `${user.first_name || ''} ${user.last_name || ''}`;\n\n//   return (\n//     <div className={`profile-container ${darkMode ? \"dark-mode\" : \"\"}`}>\n//       {loading ? (\n//         <div className=\"loading-overlay\">\n//           <img\n//             src=\"/apple-loading.gif\"\n//             alt=\"Loading...\"\n//             className=\"loading-spinner\"\n//           />\n//         </div>\n//       ) : (\n//         <>\n//           <button\n//             className=\"back-button icon-button\"\n//             onClick={() => navigate(-1)}\n//           >\n//             <img src=\"/back-icon.png\" alt=\"Back\" />\n//           </button>\n//           <button\n//             className=\"edit-button icon-button\"\n//             onClick={() => navigate(\"/edit-profile\")}\n//           >\n//             <img src=\"/edit-icon.png\" alt=\"Edit\" />\n//           </button>\n//           <div className=\"user-info\">\n//             <div className=\"avatar\">\n//             <img src='/avater.png' className='profile-picture' alt='Profile' />\n//               {/* <img\n//                 src={user.profile_picture || \"/avatar.png\"}\n//                 className=\"profile-picture\"\n//                 alt=\"Profile\"\n//               /> */}\n//             </div>\n//             <h1 className=\"user-name\">{fullName}</h1>\n//           </div>\n\n//           {/* User Information */}\n//           <div className=\"details-container\">\n//             <p>User Information</p>\n//             <ul className=\"user-details\">\n//               <li data-label=\"Name:\">{fullName}</li>\n//               <li data-label=\"Email:\">{user.email}</li>\n//               <li data-label=\"Username:\">{user.username}</li>\n//               <li data-label=\"Joined:\">\n//                 {new Date(user.createdAt).toLocaleDateString()}\n//               </li>\n//             </ul>\n//           </div>\n\n//           {/* Account Settings */}\n//           <div className=\"details-container\">\n//             <p>Account Settings</p>\n//             <ul className=\"user-details\">\n//               <li>Change Password</li>\n//               <li>Update Email</li>\n//               <li>Manage Two-Factor Authentication</li>\n//             </ul>\n//           </div>\n\n//           {/* Notifications */}\n//           <div className=\"details-container\">\n//             <p>Notifications</p>\n//             <ul className=\"user-details\">\n//               <li>Email Notifications</li>\n//               <li>Push Notifications</li>\n//               <li>SMS Notifications</li>\n//             </ul>\n//           </div>\n\n//           {/* Privacy */}\n//           <div className=\"details-container\">\n//             <p>Privacy</p>\n//             <ul className=\"user-details\">\n//               <li>Manage Blocked Users</li>\n//               <li>Privacy Settings</li>\n//               <li>Data Sharing Preferences</li>\n//             </ul>\n//           </div>\n\n//           {/* Data & Storage */}\n//           <div className=\"details-container\">\n//             <p>Data & Storage</p>\n//             <ul className=\"user-details\">\n//               <li>Data Usage</li>\n//               <li>Storage Space</li>\n//               <li>Download Your Data</li>\n//             </ul>\n//           </div>\n\n//           <div className=\"details-container\">\n//             <p>Appearance</p>\n//             <ul className=\"user-details\">\n//               <li>\n//                 Theme:\n//                 <button\n//                   className={`theme-icon-action-button ${rotateClass}`}\n//                   onClick={toggleDarkMode}\n//                 >\n//                   <img\n//                     src={darkMode ? \"/moon.ico\" : \"/sun.ico\"}\n//                     alt=\"Theme Icon\"\n//                     className=\"theme-icon\"\n//                   />\n//                 </button>\n//               </li>\n//             </ul>\n//           </div>\n//         </>\n//       )}\n//       <div className=\"actions\">\n//         <button className=\"action-button\" onClick={openLogoutModal}>\n//           Logout\n//         </button>\n//       </div>\n//       {showLogoutModal && (\n//         <div className=\"logout-modal\">\n//           <div className=\"logout-modal-content\">\n//             <p>Are you sure you want to logout?</p>\n//             <div className=\"modal-actions\">\n//               <button\n//                 className=\"modal-cancel-button\"\n//                 onClick={closeLogoutModal}\n//               >\n//                 Cancel\n//               </button>\n//               <button className=\"modal-logout-button\" onClick={handleLogout}>\n//                 Logout\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//       <ToastContainer />\n//     </div>\n//   );\n// }\n\n// export default UserProfile;\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { handleError, handleSuccess } from \"../utils/ReactToastify\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"../utils/ReactToastifyCustom.css\";\nimport \"../utils/style/profile.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserProfile() {\n  _s();\n  const [user, setUser] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [editMode, setEditMode] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [rotate, setRotate] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchUserProfile();\n  }, []);\n  const fetchUserProfile = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:8080/Users/me\", {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setUser(result);\n      } else {\n        handleError(result.message || \"Failed to fetch user data. Please try again.\");\n        navigate(\"/login\");\n      }\n    } catch (err) {\n      handleError(\"Network error. Please check your connection and try again.\");\n      navigate(\"/login\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFieldChange = e => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n  const saveChanges = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/Users/updateProfile\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify(user)\n      });\n      if (response.ok) {\n        handleSuccess(\"Profile updated successfully!\");\n        setEditMode(false);\n      } else {\n        handleError(\"Failed to update profile. Please try again.\");\n      }\n    } catch (err) {\n      handleError(\"Network error. Please check your connection and try again.\");\n    }\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    setRotate(true);\n    setTimeout(() => setRotate(false), 500);\n  };\n  const rotateClass = rotate ? darkMode ? \"rotate-right\" : \"rotate-left\" : \"\";\n  const fullName = `${user.first_name || ''} ${user.last_name || ''}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `profile-container ${darkMode ? \"dark-mode\" : \"\"}`,\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/apple-loading.gif\",\n        alt: \"Loading...\",\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button icon-button\",\n        onClick: () => navigate(-1),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/back-icon.png\",\n          alt: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-button icon-button\",\n        onClick: () => setEditMode(!editMode),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: editMode ? \"/save-icon.png\" : \"/edit-icon.png\",\n          alt: editMode ? \"Save\" : \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.profile_picture || '/avater.png',\n            className: \"profile-picture\",\n            alt: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"first_name\",\n          value: user.first_name || '',\n          onChange: handleFieldChange,\n          placeholder: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"user-name\",\n          children: fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"User Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            \"data-label\": \"Name:\",\n            children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"first_name\",\n                value: user.first_name || '',\n                onChange: handleFieldChange,\n                placeholder: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"last_name\",\n                value: user.last_name || '',\n                onChange: handleFieldChange,\n                placeholder: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            \"data-label\": \"Email:\",\n            children: editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: user.email || '',\n              onChange: handleFieldChange,\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 19\n            }, this) : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            \"data-label\": \"Username:\",\n            children: editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              value: user.username || '',\n              onChange: handleFieldChange,\n              placeholder: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this) : user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            \"data-label\": \"Joined:\",\n            children: new Date(user.createdAt).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Appearance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"user-details\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Theme:\", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `theme-icon-action-button ${rotateClass}`,\n              onClick: toggleDarkMode,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: darkMode ? \"/moon.ico\" : \"/sun.ico\",\n                alt: \"Theme Icon\",\n                className: \"theme-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), editMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: saveChanges,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProfile, \"zvK9BUm8j74NsvOZ8VGxPKyoIkA=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","handleError","handleSuccess","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","UserProfile","_s","user","setUser","loading","setLoading","editMode","setEditMode","darkMode","setDarkMode","rotate","setRotate","navigate","fetchUserProfile","response","fetch","headers","Authorization","localStorage","getItem","result","json","ok","message","err","handleFieldChange","e","target","name","value","saveChanges","method","body","JSON","stringify","toggleDarkMode","setTimeout","rotateClass","fullName","first_name","last_name","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","profile_picture","type","onChange","placeholder","email","username","Date","createdAt","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/pages/UserProfile.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { handleError, handleSuccess } from \"../utils/ReactToastify\";\r\n// import { ToastContainer } from \"react-toastify\";\r\n// import \"../utils/ReactToastifyCustom.css\";\r\n// import \"../utils/style/profile.css\";\r\n\r\n// function UserProfile() {\r\n//   const [user, setUser] = useState({});\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [showLogoutModal, setShowLogoutModal] = useState(false);\r\n//   const [darkMode, setDarkMode] = useState(false);\r\n//   const [rotate, setRotate] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     fetchUserProfile();\r\n//   }, []);\r\n\r\n//   const fetchUserProfile = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8080/Users/me\", {\r\n//         headers: {\r\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n//         },\r\n//       });\r\n//       const result = await response.json();\r\n//       if (response.ok) {\r\n//         setUser(result);\r\n//       } else {\r\n//         handleError(result.message || \"Failed to fetch user data. Please try again.\");\r\n//         navigate(\"/login\");\r\n//       }\r\n//     } catch (err) {\r\n//       handleError(\"Network error. Please check your connection and try again.\");\r\n//       navigate(\"/login\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleLogout = async () => {\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8080/auth/logout\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n//         },\r\n//         body: JSON.stringify({\r\n//           refreshToken: localStorage.getItem(\"refreshToken\"),\r\n//         }),\r\n//       });\r\n//       if (response.ok) {\r\n//         localStorage.removeItem(\"token\");\r\n//         localStorage.removeItem(\"refreshToken\");\r\n//         localStorage.removeItem(\"loggedInUser\");\r\n//         handleSuccess(\"Logged out successfully!\");\r\n//         setTimeout(() => navigate(\"/login\"), 500);\r\n//       } else {\r\n//         handleError(\"Failed to log out. Please try again.\");\r\n//       }\r\n//     } catch (err) {\r\n//       handleError(\"Network error. Please check your connection and try again.\");\r\n//     }\r\n//   };\r\n\r\n//   const openLogoutModal = () => {\r\n//     setShowLogoutModal(true);\r\n//   };\r\n\r\n//   const closeLogoutModal = () => {\r\n//     setShowLogoutModal(false);\r\n//   };\r\n\r\n//   const toggleDarkMode = () => {\r\n//     setDarkMode(!darkMode);\r\n//     setRotate(true);\r\n//     setTimeout(() => setRotate(false), 500); // Adjust timing as needed\r\n//   };\r\n\r\n//   const rotateClass = rotate ? (darkMode ? \"rotate-right\" : \"rotate-left\") : \"\";\r\n\r\n//   const fullName = `${user.first_name || ''} ${user.last_name || ''}`;\r\n\r\n//   return (\r\n//     <div className={`profile-container ${darkMode ? \"dark-mode\" : \"\"}`}>\r\n//       {loading ? (\r\n//         <div className=\"loading-overlay\">\r\n//           <img\r\n//             src=\"/apple-loading.gif\"\r\n//             alt=\"Loading...\"\r\n//             className=\"loading-spinner\"\r\n//           />\r\n//         </div>\r\n//       ) : (\r\n//         <>\r\n//           <button\r\n//             className=\"back-button icon-button\"\r\n//             onClick={() => navigate(-1)}\r\n//           >\r\n//             <img src=\"/back-icon.png\" alt=\"Back\" />\r\n//           </button>\r\n//           <button\r\n//             className=\"edit-button icon-button\"\r\n//             onClick={() => navigate(\"/edit-profile\")}\r\n//           >\r\n//             <img src=\"/edit-icon.png\" alt=\"Edit\" />\r\n//           </button>\r\n//           <div className=\"user-info\">\r\n//             <div className=\"avatar\">\r\n//             <img src='/avater.png' className='profile-picture' alt='Profile' />\r\n//               {/* <img\r\n//                 src={user.profile_picture || \"/avatar.png\"}\r\n//                 className=\"profile-picture\"\r\n//                 alt=\"Profile\"\r\n//               /> */}\r\n//             </div>\r\n//             <h1 className=\"user-name\">{fullName}</h1>\r\n//           </div>\r\n\r\n//           {/* User Information */}\r\n//           <div className=\"details-container\">\r\n//             <p>User Information</p>\r\n//             <ul className=\"user-details\">\r\n//               <li data-label=\"Name:\">{fullName}</li>\r\n//               <li data-label=\"Email:\">{user.email}</li>\r\n//               <li data-label=\"Username:\">{user.username}</li>\r\n//               <li data-label=\"Joined:\">\r\n//                 {new Date(user.createdAt).toLocaleDateString()}\r\n//               </li>\r\n//             </ul>\r\n//           </div>\r\n\r\n//           {/* Account Settings */}\r\n//           <div className=\"details-container\">\r\n//             <p>Account Settings</p>\r\n//             <ul className=\"user-details\">\r\n//               <li>Change Password</li>\r\n//               <li>Update Email</li>\r\n//               <li>Manage Two-Factor Authentication</li>\r\n//             </ul>\r\n//           </div>\r\n\r\n//           {/* Notifications */}\r\n//           <div className=\"details-container\">\r\n//             <p>Notifications</p>\r\n//             <ul className=\"user-details\">\r\n//               <li>Email Notifications</li>\r\n//               <li>Push Notifications</li>\r\n//               <li>SMS Notifications</li>\r\n//             </ul>\r\n//           </div>\r\n\r\n//           {/* Privacy */}\r\n//           <div className=\"details-container\">\r\n//             <p>Privacy</p>\r\n//             <ul className=\"user-details\">\r\n//               <li>Manage Blocked Users</li>\r\n//               <li>Privacy Settings</li>\r\n//               <li>Data Sharing Preferences</li>\r\n//             </ul>\r\n//           </div>\r\n\r\n//           {/* Data & Storage */}\r\n//           <div className=\"details-container\">\r\n//             <p>Data & Storage</p>\r\n//             <ul className=\"user-details\">\r\n//               <li>Data Usage</li>\r\n//               <li>Storage Space</li>\r\n//               <li>Download Your Data</li>\r\n//             </ul>\r\n//           </div>\r\n\r\n//           <div className=\"details-container\">\r\n//             <p>Appearance</p>\r\n//             <ul className=\"user-details\">\r\n//               <li>\r\n//                 Theme:\r\n//                 <button\r\n//                   className={`theme-icon-action-button ${rotateClass}`}\r\n//                   onClick={toggleDarkMode}\r\n//                 >\r\n//                   <img\r\n//                     src={darkMode ? \"/moon.ico\" : \"/sun.ico\"}\r\n//                     alt=\"Theme Icon\"\r\n//                     className=\"theme-icon\"\r\n//                   />\r\n//                 </button>\r\n//               </li>\r\n//             </ul>\r\n//           </div>\r\n//         </>\r\n//       )}\r\n//       <div className=\"actions\">\r\n//         <button className=\"action-button\" onClick={openLogoutModal}>\r\n//           Logout\r\n//         </button>\r\n//       </div>\r\n//       {showLogoutModal && (\r\n//         <div className=\"logout-modal\">\r\n//           <div className=\"logout-modal-content\">\r\n//             <p>Are you sure you want to logout?</p>\r\n//             <div className=\"modal-actions\">\r\n//               <button\r\n//                 className=\"modal-cancel-button\"\r\n//                 onClick={closeLogoutModal}\r\n//               >\r\n//                 Cancel\r\n//               </button>\r\n//               <button className=\"modal-logout-button\" onClick={handleLogout}>\r\n//                 Logout\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//       <ToastContainer />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default UserProfile;\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { handleError, handleSuccess } from \"../utils/ReactToastify\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"../utils/ReactToastifyCustom.css\";\r\nimport \"../utils/style/profile.css\";\r\n\r\nfunction UserProfile() {\r\n  const [user, setUser] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [rotate, setRotate] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchUserProfile();\r\n  }, []);\r\n\r\n  const fetchUserProfile = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/Users/me\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        setUser(result);\r\n      } else {\r\n        handleError(result.message || \"Failed to fetch user data. Please try again.\");\r\n        navigate(\"/login\");\r\n      }\r\n    } catch (err) {\r\n      handleError(\"Network error. Please check your connection and try again.\");\r\n      navigate(\"/login\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFieldChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const saveChanges = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/Users/updateProfile\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify(user),\r\n      });\r\n      if (response.ok) {\r\n        handleSuccess(\"Profile updated successfully!\");\r\n        setEditMode(false);\r\n      } else {\r\n        handleError(\"Failed to update profile. Please try again.\");\r\n      }\r\n    } catch (err) {\r\n      handleError(\"Network error. Please check your connection and try again.\");\r\n    }\r\n  };\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n    setRotate(true);\r\n    setTimeout(() => setRotate(false), 500);\r\n  };\r\n\r\n  const rotateClass = rotate ? (darkMode ? \"rotate-right\" : \"rotate-left\") : \"\";\r\n\r\n  const fullName = `${user.first_name || ''} ${user.last_name || ''}`;\r\n\r\n  return (\r\n    <div className={`profile-container ${darkMode ? \"dark-mode\" : \"\"}`}>\r\n      {loading ? (\r\n        <div className=\"loading-overlay\">\r\n          <img\r\n            src=\"/apple-loading.gif\"\r\n            alt=\"Loading...\"\r\n            className=\"loading-spinner\"\r\n          />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <button\r\n            className=\"back-button icon-button\"\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            <img src=\"/back-icon.png\" alt=\"Back\" />\r\n          </button>\r\n          <button\r\n            className=\"edit-button icon-button\"\r\n            onClick={() => setEditMode(!editMode)}\r\n          >\r\n            <img src={editMode ? \"/save-icon.png\" : \"/edit-icon.png\"} alt={editMode ? \"Save\" : \"Edit\"} />\r\n          </button>\r\n          <div className=\"user-info\">\r\n            <div className=\"avatar\">\r\n              <img src={user.profile_picture || '/avater.png'} className='profile-picture' alt='Profile' />\r\n            </div>\r\n            {editMode ? (\r\n              <input\r\n                type=\"text\"\r\n                name=\"first_name\"\r\n                value={user.first_name || ''}\r\n                onChange={handleFieldChange}\r\n                placeholder=\"First Name\"\r\n              />\r\n            ) : (\r\n              <h1 className=\"user-name\">{fullName}</h1>\r\n            )}\r\n          </div>\r\n\r\n          {/* Editable User Information */}\r\n          <div className=\"details-container\">\r\n            <p>User Information</p>\r\n            <ul className=\"user-details\">\r\n              <li data-label=\"Name:\">\r\n                {editMode ? (\r\n                  <>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"first_name\"\r\n                      value={user.first_name || ''}\r\n                      onChange={handleFieldChange}\r\n                      placeholder=\"First Name\"\r\n                    />\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"last_name\"\r\n                      value={user.last_name || ''}\r\n                      onChange={handleFieldChange}\r\n                      placeholder=\"Last Name\"\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  fullName\r\n                )}\r\n              </li>\r\n              <li data-label=\"Email:\">\r\n                {editMode ? (\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={user.email || ''}\r\n                    onChange={handleFieldChange}\r\n                    placeholder=\"Email\"\r\n                  />\r\n                ) : (\r\n                  user.email\r\n                )}\r\n              </li>\r\n              <li data-label=\"Username:\">\r\n                {editMode ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={user.username || ''}\r\n                    onChange={handleFieldChange}\r\n                    placeholder=\"Username\"\r\n                  />\r\n                ) : (\r\n                  user.username\r\n                )}\r\n              </li>\r\n              <li data-label=\"Joined:\">\r\n                {new Date(user.createdAt).toLocaleDateString()}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Other Sections Remain Similar */}\r\n\r\n          <div className=\"details-container\">\r\n            <p>Appearance</p>\r\n            <ul className=\"user-details\">\r\n              <li>\r\n                Theme:\r\n                <button\r\n                  className={`theme-icon-action-button ${rotateClass}`}\r\n                  onClick={toggleDarkMode}\r\n                >\r\n                  <img\r\n                    src={darkMode ? \"/moon.ico\" : \"/sun.ico\"}\r\n                    alt=\"Theme Icon\"\r\n                    className=\"theme-icon\"\r\n                  />\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </>\r\n      )}\r\n      {editMode && (\r\n        <div className=\"actions\">\r\n          <button className=\"action-button\" onClick={saveChanges}>\r\n            Save Changes\r\n          </button>\r\n        </div>\r\n      )}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAOA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,EAAEC,aAAa,QAAQ,wBAAwB;AACnE,SAASC,cAAc,QAAQ,gBAAgB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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}