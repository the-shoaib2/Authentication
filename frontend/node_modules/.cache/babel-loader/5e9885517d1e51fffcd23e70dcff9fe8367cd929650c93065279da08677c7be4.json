{"ast":null,"code":"// // FindUserForgotPassword.js\n\n// import React, { useEffect, useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { handleSuccess, handleError, ToastContainer } from '../../utils/ReactToastify';\n// import '../../utils/ReactToastifyCustom.css';\n// import '../../utils/style/animations.css';\n// import '../../utils/style/FindUserForgotPassword.css';\n\n// function FindUserForgotPassword() {\n//     const [emailOrUsername, setEmailOrUsername] = useState('');\n//     const [user, setUser] = useState(null);\n//     const [loading, setLoading] = useState(false);\n//     const [fadeIn, setFadeIn] = useState(true);\n//     const [showContent, setShowContent] = useState(false);\n//     const [suggestions, setSuggestions] = useState([]);\n//     const [showSuggestions, setShowSuggestions] = useState(false);\n//     const [searchCompleted, setSearchCompleted] = useState(false);\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         if (fadeIn) {\n//             const timeoutId = setTimeout(() => {\n//                 setFadeIn(false);\n//             }, 500);\n//             return () => clearTimeout(timeoutId);\n//         }\n//     }, [fadeIn]);\n\n//     useEffect(() => {\n//         if (loading) {\n//             const timerId = setTimeout(() => {\n//                 setShowContent(true);\n//             }, 500);\n//             return () => clearTimeout(timerId);\n//         } else {\n//             setShowContent(true);\n//         }\n//     }, [loading]);\n\n//     const handleSearch = async (event) => {\n//         event.preventDefault();\n//         setLoading(true);\n//         setShowContent(false);\n\n//         try {\n//             const response = await fetch('http://localhost:8080/verification/forgot-password/find-user', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify({ emailOrUsername }),\n//             });\n\n//             const result = await response.json();\n\n//             setTimeout(() => {\n//                 if (response.ok) {\n//                     handleSuccess(result.message);\n//                     setUser(result.user);\n//                 } else {\n//                     handleError(result.message);\n//                     setUser(null);\n//                 }\n//                 setFadeIn(true);\n//                 setLoading(false);\n//                 setSearchCompleted(true);\n//             }, 500);\n//         } catch (err) {\n//             handleError('Network error. Please check your connection and try again.');\n//             setFadeIn(true);\n//             setLoading(false);\n//             setSearchCompleted(true);\n//         }\n//     };\n\n// // ... [Imports and previous code]\n// const handleSendOtp = async () => {\n//     if (!user) {\n//         handleError('No user found. Please perform a search first.');\n//         return;\n//     }\n\n//     try {\n//         const response = await fetch('http://localhost:8080/verification/forgot-password/send-otp', {\n//             method: 'POST',\n//             headers: { 'Content-Type': 'application/json' },\n//             body: JSON.stringify({ email: user.email }),\n//         });\n\n//         const result = await response.json();\n\n//         if (response.ok) {\n//             handleSuccess(result.message);\n//             navigate('/forgot-password/sent-otp', { state: { email: user.email } });\n//         } else {\n//             handleError(result.message);\n//         }\n//     } catch (err) {\n//         handleError('Failed to send OTP. Please try again.');\n//     }\n// };\n\n// const handleProceed = () => {\n//     if (user && searchCompleted) {\n//         handleSendOtp();\n//         navigate('/forgot-password/sent-otp', { state: { email: user.email } });\n//     } else {\n//         handleError('No user found. Please search for a valid user.');\n//     }\n// };\n\n//     const handleInputChange = (event) => {\n//         const value = event.target.value;\n//         setEmailOrUsername(value);\n//         updateSuggestions(value);\n//     };\n\n//     const updateSuggestions = (value) => {\n//         const suggestionList = [];\n//         const domains = ['gmail.com', 'yahoo.com', 'outlook.com', 'hotmail.com'];\n\n//         if (value.includes('@')) {\n//             const [, domain] = value.split('@');\n//             if (domain.length > 0) {\n//                 domains.forEach((d) => {\n//                     if (d.startsWith(domain)) {\n//                         suggestionList.push(`${value.split('@')[0]}@${d}`);\n//                     }\n//                 });\n//             }\n//         } else {\n//             domains.forEach((d) => {\n//                 suggestionList.push(`${value}@${d}`);\n//             });\n//         }\n\n//         setSuggestions(suggestionList);\n//         setShowSuggestions(suggestionList.length > 0);\n//     };\n\n//     const handleSuggestionClick = (suggestion) => {\n//         setEmailOrUsername(suggestion);\n//         setShowSuggestions(false);\n//     };\n\n//     return (\n//         <div className={`find-user-container container ${fadeIn ? 'fade-in' : ''}`}>\n//             <div className=\"header-container\">\n//                 <div className=\"icon-container-position\">\n//                     <Link to=\"/login\" className='icon-container'>\n//                         <img src=\"/back-icon.png\" alt=\"Back\" className=\"back-icon\" />\n//                     </Link>\n//                 </div>\n\n//                 <div className=\"center-content\">\n//                     <div className=\"logo-container\">\n//                         <img src=\"/app-icon.ico\" alt=\"App Icon\" className=\"app-icon\" />\n//                     </div>\n//                     <h1 className=\"page-title\">Forgot Password</h1>\n//                 </div>\n//             </div>\n\n//             <form onSubmit={handleSearch}>\n//                 <div className=\"input-container\">\n//                     <input\n//                         type=\"search\"\n//                         placeholder=\"Email or Username\"\n//                         value={emailOrUsername}\n//                         onChange={handleInputChange}\n//                         required\n//                     />\n//                     <button type=\"submit\" disabled={loading} className=\"search-icon-wrapper\">\n//                         <img src=\"/search.ico\" alt=\"Search icon\" className=\"search-icon-img\" />\n//                     </button>\n//                     {showSuggestions && (\n//                         <ul className=\"suggestion-list\">\n//                             {suggestions.map((suggestion, index) => (\n//                                 <li key={index} onClick={() => handleSuggestionClick(suggestion)}>\n//                                     {suggestion}\n//                                 </li>\n//                             ))}\n//                         </ul>\n//                     )}\n//                 </div>\n//             </form>\n\n//             <div className=\"confirmation-message\">\n//                 {!searchCompleted ? (\n//                     <br />\n//                 ) : (\n//                     <>\n//                         {user ? (\n//                             <p>Is this you? Please confirm.</p>\n//                         ) : (\n//                             <p>Please try again with a different email or username.</p>\n//                         )}\n//                     </>\n//                 )}\n//             </div>\n\n//             <div className=\"found-user-wrapper\">\n//                 {loading && !showContent ? (\n//                     <div className=\"loading-overlay\">\n//                         <img src='/apple-loading.gif' alt='Loading spinner' className='loading-spinner' />\n//                     </div>\n//                 ) : (\n//                     <div className={`found-user-content ${user && searchCompleted ? 'fade-in-bottom' : ''}`}>\n//                         {user ? (\n//                             <div\n//                                 className=\"user-card\"\n//                                 onClick={handleProceed}\n//                                 style={{ cursor: 'pointer' }}\n//                             >\n//                                 <div className=\"user-card-image\">\n//                                     <img src='/avater.png' alt='User avatar' className='profilePicture' />\n//                                 </div>\n//                                 <div className=\"user-card-details\">\n//                                     <h3>{user.name}</h3>\n//                                     <p>{user.username}</p>\n//                                 </div>\n//                             </div>\n//                         ) : (\n//                             <div className=\"placeholder-message\">\n//                                 <p>Find your profile using Gmail and username</p>\n//                             </div>\n//                         )}\n//                     </div>\n//                 )}\n//             </div>\n\n//             <ToastContainer />\n//         </div>\n//     );\n// }\n\n// export default FindUserForgotPassword;","map":{"version":3,"names":[],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/components/ForgotPassword/FindUserForgotPassword.jsx"],"sourcesContent":["// // FindUserForgotPassword.js\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { handleSuccess, handleError, ToastContainer } from '../../utils/ReactToastify';\r\n// import '../../utils/ReactToastifyCustom.css';\r\n// import '../../utils/style/animations.css';\r\n// import '../../utils/style/FindUserForgotPassword.css';\r\n\r\n// function FindUserForgotPassword() {\r\n//     const [emailOrUsername, setEmailOrUsername] = useState('');\r\n//     const [user, setUser] = useState(null);\r\n//     const [loading, setLoading] = useState(false);\r\n//     const [fadeIn, setFadeIn] = useState(true);\r\n//     const [showContent, setShowContent] = useState(false);\r\n//     const [suggestions, setSuggestions] = useState([]);\r\n//     const [showSuggestions, setShowSuggestions] = useState(false);\r\n//     const [searchCompleted, setSearchCompleted] = useState(false);\r\n//     const navigate = useNavigate();\r\n\r\n//     useEffect(() => {\r\n//         if (fadeIn) {\r\n//             const timeoutId = setTimeout(() => {\r\n//                 setFadeIn(false);\r\n//             }, 500);\r\n//             return () => clearTimeout(timeoutId);\r\n//         }\r\n//     }, [fadeIn]);\r\n\r\n//     useEffect(() => {\r\n//         if (loading) {\r\n//             const timerId = setTimeout(() => {\r\n//                 setShowContent(true);\r\n//             }, 500);\r\n//             return () => clearTimeout(timerId);\r\n//         } else {\r\n//             setShowContent(true);\r\n//         }\r\n//     }, [loading]);\r\n\r\n//     const handleSearch = async (event) => {\r\n//         event.preventDefault();\r\n//         setLoading(true);\r\n//         setShowContent(false);\r\n\r\n//         try {\r\n//             const response = await fetch('http://localhost:8080/verification/forgot-password/find-user', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 body: JSON.stringify({ emailOrUsername }),\r\n//             });\r\n\r\n//             const result = await response.json();\r\n\r\n//             setTimeout(() => {\r\n//                 if (response.ok) {\r\n//                     handleSuccess(result.message);\r\n//                     setUser(result.user);\r\n//                 } else {\r\n//                     handleError(result.message);\r\n//                     setUser(null);\r\n//                 }\r\n//                 setFadeIn(true);\r\n//                 setLoading(false);\r\n//                 setSearchCompleted(true);\r\n//             }, 500);\r\n//         } catch (err) {\r\n//             handleError('Network error. Please check your connection and try again.');\r\n//             setFadeIn(true);\r\n//             setLoading(false);\r\n//             setSearchCompleted(true);\r\n//         }\r\n//     };\r\n\r\n// // ... [Imports and previous code]\r\n// const handleSendOtp = async () => {\r\n//     if (!user) {\r\n//         handleError('No user found. Please perform a search first.');\r\n//         return;\r\n//     }\r\n\r\n//     try {\r\n//         const response = await fetch('http://localhost:8080/verification/forgot-password/send-otp', {\r\n//             method: 'POST',\r\n//             headers: { 'Content-Type': 'application/json' },\r\n//             body: JSON.stringify({ email: user.email }),\r\n//         });\r\n\r\n//         const result = await response.json();\r\n\r\n//         if (response.ok) {\r\n//             handleSuccess(result.message);\r\n//             navigate('/forgot-password/sent-otp', { state: { email: user.email } });\r\n//         } else {\r\n//             handleError(result.message);\r\n//         }\r\n//     } catch (err) {\r\n//         handleError('Failed to send OTP. Please try again.');\r\n//     }\r\n// };\r\n\r\n// const handleProceed = () => {\r\n//     if (user && searchCompleted) {\r\n//         handleSendOtp();\r\n//         navigate('/forgot-password/sent-otp', { state: { email: user.email } });\r\n//     } else {\r\n//         handleError('No user found. Please search for a valid user.');\r\n//     }\r\n// };\r\n\r\n\r\n    \r\n    \r\n\r\n//     const handleInputChange = (event) => {\r\n//         const value = event.target.value;\r\n//         setEmailOrUsername(value);\r\n//         updateSuggestions(value);\r\n//     };\r\n\r\n//     const updateSuggestions = (value) => {\r\n//         const suggestionList = [];\r\n//         const domains = ['gmail.com', 'yahoo.com', 'outlook.com', 'hotmail.com'];\r\n\r\n//         if (value.includes('@')) {\r\n//             const [, domain] = value.split('@');\r\n//             if (domain.length > 0) {\r\n//                 domains.forEach((d) => {\r\n//                     if (d.startsWith(domain)) {\r\n//                         suggestionList.push(`${value.split('@')[0]}@${d}`);\r\n//                     }\r\n//                 });\r\n//             }\r\n//         } else {\r\n//             domains.forEach((d) => {\r\n//                 suggestionList.push(`${value}@${d}`);\r\n//             });\r\n//         }\r\n\r\n//         setSuggestions(suggestionList);\r\n//         setShowSuggestions(suggestionList.length > 0);\r\n//     };\r\n\r\n//     const handleSuggestionClick = (suggestion) => {\r\n//         setEmailOrUsername(suggestion);\r\n//         setShowSuggestions(false);\r\n//     };\r\n\r\n//     return (\r\n//         <div className={`find-user-container container ${fadeIn ? 'fade-in' : ''}`}>\r\n//             <div className=\"header-container\">\r\n//                 <div className=\"icon-container-position\">\r\n//                     <Link to=\"/login\" className='icon-container'>\r\n//                         <img src=\"/back-icon.png\" alt=\"Back\" className=\"back-icon\" />\r\n//                     </Link>\r\n//                 </div>\r\n\r\n//                 <div className=\"center-content\">\r\n//                     <div className=\"logo-container\">\r\n//                         <img src=\"/app-icon.ico\" alt=\"App Icon\" className=\"app-icon\" />\r\n//                     </div>\r\n//                     <h1 className=\"page-title\">Forgot Password</h1>\r\n//                 </div>\r\n//             </div>\r\n\r\n//             <form onSubmit={handleSearch}>\r\n//                 <div className=\"input-container\">\r\n//                     <input\r\n//                         type=\"search\"\r\n//                         placeholder=\"Email or Username\"\r\n//                         value={emailOrUsername}\r\n//                         onChange={handleInputChange}\r\n//                         required\r\n//                     />\r\n//                     <button type=\"submit\" disabled={loading} className=\"search-icon-wrapper\">\r\n//                         <img src=\"/search.ico\" alt=\"Search icon\" className=\"search-icon-img\" />\r\n//                     </button>\r\n//                     {showSuggestions && (\r\n//                         <ul className=\"suggestion-list\">\r\n//                             {suggestions.map((suggestion, index) => (\r\n//                                 <li key={index} onClick={() => handleSuggestionClick(suggestion)}>\r\n//                                     {suggestion}\r\n//                                 </li>\r\n//                             ))}\r\n//                         </ul>\r\n//                     )}\r\n//                 </div>\r\n//             </form>\r\n\r\n//             <div className=\"confirmation-message\">\r\n//                 {!searchCompleted ? (\r\n//                     <br />\r\n//                 ) : (\r\n//                     <>\r\n//                         {user ? (\r\n//                             <p>Is this you? Please confirm.</p>\r\n//                         ) : (\r\n//                             <p>Please try again with a different email or username.</p>\r\n//                         )}\r\n//                     </>\r\n//                 )}\r\n//             </div>\r\n\r\n//             <div className=\"found-user-wrapper\">\r\n//                 {loading && !showContent ? (\r\n//                     <div className=\"loading-overlay\">\r\n//                         <img src='/apple-loading.gif' alt='Loading spinner' className='loading-spinner' />\r\n//                     </div>\r\n//                 ) : (\r\n//                     <div className={`found-user-content ${user && searchCompleted ? 'fade-in-bottom' : ''}`}>\r\n//                         {user ? (\r\n//                             <div\r\n//                                 className=\"user-card\"\r\n//                                 onClick={handleProceed}\r\n//                                 style={{ cursor: 'pointer' }}\r\n//                             >\r\n//                                 <div className=\"user-card-image\">\r\n//                                     <img src='/avater.png' alt='User avatar' className='profilePicture' />\r\n//                                 </div>\r\n//                                 <div className=\"user-card-details\">\r\n//                                     <h3>{user.name}</h3>\r\n//                                     <p>{user.username}</p>\r\n//                                 </div>\r\n//                             </div>\r\n//                         ) : (\r\n//                             <div className=\"placeholder-message\">\r\n//                                 <p>Find your profile using Gmail and username</p>\r\n//                             </div>\r\n//                         )}\r\n//                     </div>\r\n//                 )}\r\n//             </div>\r\n\r\n//             <ToastContainer />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default FindUserForgotPassword;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}