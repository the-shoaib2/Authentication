{"ast":null,"code":"\n// // frontend/src/pages/UserProfile.js\n\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { handleError, handleSuccess } from '../utils/ReactToastify';\n// import { ToastContainer } from 'react-toastify';\n// import '../utils/ReactToastifyCustom.css';\n// import '../utils/style/profile.css';\n\n// function UserProfile() {\n//     const [user, setUser] = useState({});\n//     const [loading, setLoading] = useState(true);\n//     const [showLogoutModal, setShowLogoutModal] = useState(false);\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         fetchUserProfile();\n//     }, []);\n\n//     const fetchUserProfile = async () => {\n//         setLoading(true);\n//         try {\n//             const response = await fetch('http://localhost:8080/Users/me', {\n//                 headers: {\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`\n//                 }\n//             });\n//             const result = await response.json();\n//             if (response.ok) {\n//                 setUser(result);\n//             } else {\n//                 handleError(result.message || 'Failed to fetch user data. Please try again.');\n//                 navigate('/login');\n//             }\n//         } catch (err) {\n//             handleError('Network error. Please check your connection and try again.');\n//             navigate('/login');\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const handleLogout = async () => {\n//         try {\n//             const response = await fetch(\"http://localhost:8080/auth/logout\", {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`\n//                 },\n//                 body: JSON.stringify({ refreshToken: localStorage.getItem('refreshToken') })\n//             });\n//             if (response.ok) {\n//                 localStorage.removeItem('token');\n//                 localStorage.removeItem('refreshToken');\n//                 localStorage.removeItem('loggedInUser');\n//                 handleSuccess('Logged out successfully! Redirecting...');\n//                 setTimeout(() => navigate('/login'), 500);\n//             } else {\n//                 handleError('Failed to log out. Please try again.');\n//             }\n//         } catch (err) {\n//             handleError('Network error. Please check your connection and try again.');\n//         }\n//     };\n\n//     const openLogoutModal = () => {\n//         setShowLogoutModal(true);\n//     };\n\n//     const closeLogoutModal = () => {\n//         setShowLogoutModal(false);\n//     };\n\n//     return (\n//         <div className=\"profile-container\">\n//             {loading ? (\n//                 <div className=\"loading-overlay\">\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\n//                 </div>\n//             ) : (\n//                 <>\n//                     <button className=\"back-button icon-button\" onClick={() => navigate(-1)}>\n//                         <img src=\"/back-icon.png\" alt=\"Back\" />\n//                     </button>\n//                     <button className=\"edit-button icon-button\" onClick={() => navigate('/edit-profile')}>\n//                         <img src=\"/edit-icon.png\" alt=\"Edit\" />\n//                     </button>\n//                     <div className=\"user-info\">\n//                         <div className=\"avatar\">\n//                             <img src='/avater.png' className='profile-picture' alt='Profile' />\n//                         </div>\n//                         <h1 className=\"user-name\">{user.name}</h1>\n//                     </div>\n//                     <div className=\"details-container\">\n//                         <ul className=\"user-details\">\n//                             <li data-label=\"Name:\">{user.name}</li>\n//                             <li data-label=\"Email:\">{user.email}</li>\n//                             <li data-label=\"Username:\">{user.username}</li>\n//                             <li data-label=\"Joined:\">{new Date(user.createdAt).toLocaleDateString()}</li>\n//                         </ul>\n//                     </div>   \n//                     <div className=\"details-container\">\n//                         <ul className=\"user-details\">\n//                             <li data-label=\"Name:\">{user.name}</li>\n//                             <li data-label=\"Email:\">{user.email}</li>\n//                             <li data-label=\"Username:\">{user.username}</li>\n//                             <li data-label=\"Joined:\">{new Date(user.createdAt).toLocaleDateString()}</li>\n//                         </ul>\n//                     </div>\n\n//                     <div className=\"details-container\">\n//                         <ul className=\"user-details\">\n//                             <li data-label=\"Name:\">{user.name}</li>\n//                             <li data-label=\"Email:\">{user.email}</li>\n//                             <li data-label=\"Username:\">{user.username}</li>\n//                             <li data-label=\"Joined:\">{new Date(user.createdAt).toLocaleDateString()}</li>\n//                         </ul>\n//                     </div>\n//                 </>\n//             )}\n//             <div className=\"actions\">\n//                 <button className=\"action-button\" onClick={openLogoutModal}>Logout</button>\n//             </div>\n//             {showLogoutModal && (\n//                 <div className=\"logout-modal\">\n//                     <div className=\"logout-modal-content\">\n//                         <p>Are you sure you want to logout?</p>\n//                         <div className=\"modal-actions\">\n//                             <button className=\"modal-cancel-button\" onClick={closeLogoutModal}>Cancel</button>\n//                             <button className=\"modal-logout-button\" onClick={handleLogout}>Logout</button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             )}\n//             <ToastContainer />\n//         </div>\n//     );\n// }\n\n// export default UserProfile;","map":{"version":3,"names":[],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/pages/UserProfile.jsx"],"sourcesContent":["\r\n// // frontend/src/pages/UserProfile.js\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { handleError, handleSuccess } from '../utils/ReactToastify';\r\n// import { ToastContainer } from 'react-toastify';\r\n// import '../utils/ReactToastifyCustom.css';\r\n// import '../utils/style/profile.css';\r\n\r\n// function UserProfile() {\r\n//     const [user, setUser] = useState({});\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [showLogoutModal, setShowLogoutModal] = useState(false);\r\n//     const navigate = useNavigate();\r\n\r\n//     useEffect(() => {\r\n//         fetchUserProfile();\r\n//     }, []);\r\n\r\n//     const fetchUserProfile = async () => {\r\n//         setLoading(true);\r\n//         try {\r\n//             const response = await fetch('http://localhost:8080/Users/me', {\r\n//                 headers: {\r\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n//                 }\r\n//             });\r\n//             const result = await response.json();\r\n//             if (response.ok) {\r\n//                 setUser(result);\r\n//             } else {\r\n//                 handleError(result.message || 'Failed to fetch user data. Please try again.');\r\n//                 navigate('/login');\r\n//             }\r\n//         } catch (err) {\r\n//             handleError('Network error. Please check your connection and try again.');\r\n//             navigate('/login');\r\n//         } finally {\r\n//             setLoading(false);\r\n//         }\r\n//     };\r\n\r\n//     const handleLogout = async () => {\r\n//         try {\r\n//             const response = await fetch(\"http://localhost:8080/auth/logout\", {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n//                 },\r\n//                 body: JSON.stringify({ refreshToken: localStorage.getItem('refreshToken') })\r\n//             });\r\n//             if (response.ok) {\r\n//                 localStorage.removeItem('token');\r\n//                 localStorage.removeItem('refreshToken');\r\n//                 localStorage.removeItem('loggedInUser');\r\n//                 handleSuccess('Logged out successfully! Redirecting...');\r\n//                 setTimeout(() => navigate('/login'), 500);\r\n//             } else {\r\n//                 handleError('Failed to log out. Please try again.');\r\n//             }\r\n//         } catch (err) {\r\n//             handleError('Network error. Please check your connection and try again.');\r\n//         }\r\n//     };\r\n\r\n//     const openLogoutModal = () => {\r\n//         setShowLogoutModal(true);\r\n//     };\r\n\r\n//     const closeLogoutModal = () => {\r\n//         setShowLogoutModal(false);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"profile-container\">\r\n//             {loading ? (\r\n//                 <div className=\"loading-overlay\">\r\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\r\n//                 </div>\r\n//             ) : (\r\n//                 <>\r\n//                     <button className=\"back-button icon-button\" onClick={() => navigate(-1)}>\r\n//                         <img src=\"/back-icon.png\" alt=\"Back\" />\r\n//                     </button>\r\n//                     <button className=\"edit-button icon-button\" onClick={() => navigate('/edit-profile')}>\r\n//                         <img src=\"/edit-icon.png\" alt=\"Edit\" />\r\n//                     </button>\r\n//                     <div className=\"user-info\">\r\n//                         <div className=\"avatar\">\r\n//                             <img src='/avater.png' className='profile-picture' alt='Profile' />\r\n//                         </div>\r\n//                         <h1 className=\"user-name\">{user.name}</h1>\r\n//                     </div>\r\n//                     <div className=\"details-container\">\r\n//                         <ul className=\"user-details\">\r\n//                             <li data-label=\"Name:\">{user.name}</li>\r\n//                             <li data-label=\"Email:\">{user.email}</li>\r\n//                             <li data-label=\"Username:\">{user.username}</li>\r\n//                             <li data-label=\"Joined:\">{new Date(user.createdAt).toLocaleDateString()}</li>\r\n//                         </ul>\r\n//                     </div>   \r\n//                     <div className=\"details-container\">\r\n//                         <ul className=\"user-details\">\r\n//                             <li data-label=\"Name:\">{user.name}</li>\r\n//                             <li data-label=\"Email:\">{user.email}</li>\r\n//                             <li data-label=\"Username:\">{user.username}</li>\r\n//                             <li data-label=\"Joined:\">{new Date(user.createdAt).toLocaleDateString()}</li>\r\n//                         </ul>\r\n//                     </div>\r\n\r\n//                     <div className=\"details-container\">\r\n//                         <ul className=\"user-details\">\r\n//                             <li data-label=\"Name:\">{user.name}</li>\r\n//                             <li data-label=\"Email:\">{user.email}</li>\r\n//                             <li data-label=\"Username:\">{user.username}</li>\r\n//                             <li data-label=\"Joined:\">{new Date(user.createdAt).toLocaleDateString()}</li>\r\n//                         </ul>\r\n//                     </div>\r\n//                 </>\r\n//             )}\r\n//             <div className=\"actions\">\r\n//                 <button className=\"action-button\" onClick={openLogoutModal}>Logout</button>\r\n//             </div>\r\n//             {showLogoutModal && (\r\n//                 <div className=\"logout-modal\">\r\n//                     <div className=\"logout-modal-content\">\r\n//                         <p>Are you sure you want to logout?</p>\r\n//                         <div className=\"modal-actions\">\r\n//                             <button className=\"modal-cancel-button\" onClick={closeLogoutModal}>Cancel</button>\r\n//                             <button className=\"modal-logout-button\" onClick={handleLogout}>Logout</button>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             )}\r\n//             <ToastContainer />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default UserProfile;\r\n\r\n\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}