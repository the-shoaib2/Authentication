{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\pages\\\\Signup.js\",\n  _s = $RefreshSig$();\n// // Signup.js\n\n// import React, { useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { ToastContainer } from 'react-toastify';\n// import { handleError, handleSuccess } from '../utils/ReactToastify';\n// import '../utils/ReactToastifyCustom.css';\n// import '../utils/loading.css';\n\n// function Signup() {\n//     const [signupInfo, setSignupInfo] = useState({\n//         name: '',\n//         email: '',\n//         password: ''\n//     });\n\n//     const [loading, setLoading] = useState(false); // Add loading state\n//     const [loadingCompleted, setLoadingCompleted] = useState(false); // Track loading completion\n//     const navigate = useNavigate();\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         const copySignupInfo = { ...signupInfo };\n//         copySignupInfo[name] = value;\n//         setSignupInfo(copySignupInfo);\n//     }\n\n//     const handleSignup = async (e) => {\n//         e.preventDefault();\n//         const { name, email, password } = signupInfo;\n//         if (!name || !email || !password) {\n//             return handleError('Name, email, and password are required');\n//         }\n//         setLoading(true);\n//         setLoadingCompleted(false);\n\n//         try {\n//             const url = `http://localhost:8080/auth/signup`;\n//             const response = await fetch(url, {\n//                 method: \"POST\",\n//                 headers: {\n//                     'Content-Type': 'application/json'\n//                 },\n//                 body: JSON.stringify(signupInfo)\n//             });\n//             const result = await response.json();\n\n//             setLoading(false);\n//             setLoadingCompleted(true);\n\n//             if (response.status === 409) {\n//                 handleError(result.message);  // Email already in use\n//             } else if (response.status === 201) {\n//                 handleSuccess(result.message);\n//                 setTimeout(() => navigate('/login'), 1000);\n//             } else {\n//                 handleError(result.message);\n//             }\n//         } catch (err) {\n//             setLoading(false);\n//             setLoadingCompleted(true);\n//             handleError(err.message || 'An error occurred');\n//         }\n//     }\n\n//     return (\n//         <div className='container'>\n//             <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\n//             <h1>Sign up</h1>\n//             <form onSubmit={handleSignup}>\n//                 <div className='form-group'>\n//                     <input\n//                         onChange={handleChange}\n//                         type='text'\n//                         name='name'\n//                         id='name'\n//                         autoFocus\n//                         placeholder='Enter your name...'\n//                         value={signupInfo.name}\n//                     />\n//                     <label htmlFor='name' className='form-label'>Name</label>\n//                 </div>\n//                 <div className='form-group'>\n//                     <input\n//                         onChange={handleChange}\n//                         type='email'\n//                         name='email'\n//                         id='email'\n//                         placeholder='Enter your email...'\n//                         value={signupInfo.email}\n//                     />\n//                     <label htmlFor='email' className='form-label'>Email</label>\n//                 </div>\n//                 <div className='form-group'>\n//                     <input\n//                         onChange={handleChange}\n//                         type='password'\n//                         name='password'\n//                         id='password'\n//                         placeholder='Enter your password...'\n//                         value={signupInfo.password}\n//                     />\n//                     <label htmlFor='password' className='form-label'>Password</label>\n//                 </div>\n//                 <button type='submit'>Signup</button>\n//                 <span>Already have an account? <Link to=\"/login\" className='signup-link'>Login</Link></span>\n//             </form>\n//             <ToastContainer />\n\n//             {loading && (\n//                 <div className={`loading-overlay ${loadingCompleted ? 'hidden' : ''}`}>\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default Signup;\n\n// Signup.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { apiRequest } from '../utils/api';\nimport { handleError, handleSuccess } from '../utils/ReactToastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSignup = async e => {\n    e.preventDefault();\n    try {\n      await apiRequest('/auth/signup', 'POST', {\n        name,\n        email,\n        password\n      }, false);\n      handleSuccess('Signup successful. Please log in.');\n      navigate('/login');\n    } catch (error) {\n      handleError(error.message || 'Signup failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignup,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n};\n_s(Signup, \"csJiuSlQmiH49sngUzydjkZ0k9I=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","apiRequest","handleError","handleSuccess","jsxDEV","_jsxDEV","Signup","_s","name","setName","email","setEmail","password","setPassword","navigate","handleSignup","e","preventDefault","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/pages/Signup.js"],"sourcesContent":["// // Signup.js\r\n\r\n// import React, { useState } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { ToastContainer } from 'react-toastify';\r\n// import { handleError, handleSuccess } from '../utils/ReactToastify';\r\n// import '../utils/ReactToastifyCustom.css';\r\n// import '../utils/loading.css';\r\n\r\n\r\n// function Signup() {\r\n//     const [signupInfo, setSignupInfo] = useState({\r\n//         name: '',\r\n//         email: '',\r\n//         password: ''\r\n//     });\r\n\r\n//     const [loading, setLoading] = useState(false); // Add loading state\r\n//     const [loadingCompleted, setLoadingCompleted] = useState(false); // Track loading completion\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         const copySignupInfo = { ...signupInfo };\r\n//         copySignupInfo[name] = value;\r\n//         setSignupInfo(copySignupInfo);\r\n//     }\r\n\r\n\r\n//     const handleSignup = async (e) => {\r\n//         e.preventDefault();\r\n//         const { name, email, password } = signupInfo;\r\n//         if (!name || !email || !password) {\r\n//             return handleError('Name, email, and password are required');\r\n//         }\r\n//         setLoading(true);\r\n//         setLoadingCompleted(false);\r\n    \r\n//         try {\r\n//             const url = `http://localhost:8080/auth/signup`;\r\n//             const response = await fetch(url, {\r\n//                 method: \"POST\",\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json'\r\n//                 },\r\n//                 body: JSON.stringify(signupInfo)\r\n//             });\r\n//             const result = await response.json();\r\n    \r\n//             setLoading(false);\r\n//             setLoadingCompleted(true);\r\n    \r\n//             if (response.status === 409) {\r\n//                 handleError(result.message);  // Email already in use\r\n//             } else if (response.status === 201) {\r\n//                 handleSuccess(result.message);\r\n//                 setTimeout(() => navigate('/login'), 1000);\r\n//             } else {\r\n//                 handleError(result.message);\r\n//             }\r\n//         } catch (err) {\r\n//             setLoading(false);\r\n//             setLoadingCompleted(true);\r\n//             handleError(err.message || 'An error occurred');\r\n//         }\r\n//     }\r\n    \r\n//     return (\r\n//         <div className='container'>\r\n//             <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\r\n//             <h1>Sign up</h1>\r\n//             <form onSubmit={handleSignup}>\r\n//                 <div className='form-group'>\r\n//                     <input\r\n//                         onChange={handleChange}\r\n//                         type='text'\r\n//                         name='name'\r\n//                         id='name'\r\n//                         autoFocus\r\n//                         placeholder='Enter your name...'\r\n//                         value={signupInfo.name}\r\n//                     />\r\n//                     <label htmlFor='name' className='form-label'>Name</label>\r\n//                 </div>\r\n//                 <div className='form-group'>\r\n//                     <input\r\n//                         onChange={handleChange}\r\n//                         type='email'\r\n//                         name='email'\r\n//                         id='email'\r\n//                         placeholder='Enter your email...'\r\n//                         value={signupInfo.email}\r\n//                     />\r\n//                     <label htmlFor='email' className='form-label'>Email</label>\r\n//                 </div>\r\n//                 <div className='form-group'>\r\n//                     <input\r\n//                         onChange={handleChange}\r\n//                         type='password'\r\n//                         name='password'\r\n//                         id='password'\r\n//                         placeholder='Enter your password...'\r\n//                         value={signupInfo.password}\r\n//                     />\r\n//                     <label htmlFor='password' className='form-label'>Password</label>\r\n//                 </div>\r\n//                 <button type='submit'>Signup</button>\r\n//                 <span>Already have an account? <Link to=\"/login\" className='signup-link'>Login</Link></span>\r\n//             </form>\r\n//             <ToastContainer />\r\n            \r\n//             {loading && (\r\n//                 <div className={`loading-overlay ${loadingCompleted ? 'hidden' : ''}`}>\r\n//                     <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Signup;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Signup.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { apiRequest } from '../utils/api';\r\nimport { handleError, handleSuccess } from '../utils/ReactToastify';\r\n\r\nconst Signup = () => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSignup = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await apiRequest('/auth/signup', 'POST', { name, email, password }, false);\r\n            handleSuccess('Signup successful. Please log in.');\r\n            navigate('/login');\r\n        } catch (error) {\r\n            handleError(error.message || 'Signup failed');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"signup-container\">\r\n            <h1>Signup</h1>\r\n            <form onSubmit={handleSignup}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Signup</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}