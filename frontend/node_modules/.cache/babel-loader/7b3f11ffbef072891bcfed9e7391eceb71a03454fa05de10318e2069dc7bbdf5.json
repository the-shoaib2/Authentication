{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nexport async function refreshToken() {\n  try {\n    const response = await fetch('http://localhost:8080/auth/refresh', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        refreshToken: localStorage.getItem('refreshToken')\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      localStorage.setItem('token', data.accessToken);\n      return true;\n    }\n    return false;\n  } catch (error) {\n    console.error('Error refreshing token:', error);\n    return false;\n  }\n}\nexport async function checkAuthentication() {\n  const token = localStorage.getItem('token');\n  if (!token) return false;\n  try {\n    const response = await fetch('http://localhost:8080/auth/verify', {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      const refreshed = await refreshToken();\n      return refreshed;\n    }\n    return true;\n  } catch (error) {\n    console.error('Error verifying token:', error);\n    return false;\n  }\n}\nfunction RefreshHandler({\n  setIsAuthenticated\n}) {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const verifyAndRefresh = useCallback(async () => {\n    const isAuth = await checkAuthentication();\n    setIsAuthenticated(isAuth);\n    if (!isAuth && !['/login', '/signup', '/find-user'].includes(location.pathname)) {\n      navigate('/login');\n    }\n  }, [setIsAuthenticated, navigate, location.pathname]);\n  useEffect(() => {\n    verifyAndRefresh();\n    const intervalId = setInterval(verifyAndRefresh, 5 * 60 * 1000); // Check every 5 minutes\n    return () => clearInterval(intervalId);\n  }, [verifyAndRefresh]);\n  return null;\n}\n_s(RefreshHandler, \"JRDBBNndcjJx+QktlwMQdxVaRgA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = RefreshHandler;\nexport default RefreshHandler;\nvar _c;\n$RefreshReg$(_c, \"RefreshHandler\");","map":{"version":3,"names":["useEffect","useCallback","useLocation","useNavigate","refreshToken","response","fetch","method","headers","body","JSON","stringify","localStorage","getItem","data","json","ok","setItem","accessToken","error","console","checkAuthentication","token","refreshed","RefreshHandler","setIsAuthenticated","_s","location","navigate","verifyAndRefresh","isAuth","includes","pathname","intervalId","setInterval","clearInterval","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/utils/RefreshHandler.js"],"sourcesContent":["import { useEffect, useCallback } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nexport async function refreshToken() {\r\n  try {\r\n    const response = await fetch('http://localhost:8080/auth/refresh', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        refreshToken: localStorage.getItem('refreshToken'),\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      localStorage.setItem('token', data.accessToken);\r\n      return true;\r\n    }\r\n    return false;\r\n  } catch (error) {\r\n    console.error('Error refreshing token:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function checkAuthentication() {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) return false;\r\n  \r\n  try {\r\n    const response = await fetch('http://localhost:8080/auth/verify', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n    if (!response.ok) {\r\n      const refreshed = await refreshToken();\r\n      return refreshed;\r\n    }\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error verifying token:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction RefreshHandler({ setIsAuthenticated }) {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const verifyAndRefresh = useCallback(async () => {\r\n    const isAuth = await checkAuthentication();\r\n    setIsAuthenticated(isAuth);\r\n    if (!isAuth && !['/login', '/signup', '/find-user'].includes(location.pathname)) {\r\n      navigate('/login');\r\n    }\r\n  }, [setIsAuthenticated, navigate, location.pathname]);\r\n\r\n  useEffect(() => {\r\n    verifyAndRefresh();\r\n    const intervalId = setInterval(verifyAndRefresh, 5 * 60 * 1000); // Check every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [verifyAndRefresh]);\r\n\r\n  return null;\r\n}\r\n\r\nexport default RefreshHandler;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC9C,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAE3D,OAAO,eAAeC,YAAYA,CAAA,EAAG;EACnC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBP,YAAY,EAAEQ,YAAY,CAACC,OAAO,CAAC,cAAc;MACnD,CAAC;IACH,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClC,IAAIV,QAAQ,CAACW,EAAE,EAAE;MACfJ,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,WAAW,CAAC;MAC/C,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,KAAK;EACd;AACF;AAEA,OAAO,eAAeE,mBAAmBA,CAAA,EAAG;EAC1C,MAAMC,KAAK,GAAGV,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACS,KAAK,EAAE,OAAO,KAAK;EAExB,IAAI;IACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAChEE,OAAO,EAAE;QACP,eAAe,EAAE,UAAUc,KAAK;MAClC;IACF,CAAC,CAAC;IACF,IAAI,CAACjB,QAAQ,CAACW,EAAE,EAAE;MAChB,MAAMO,SAAS,GAAG,MAAMnB,YAAY,CAAC,CAAC;MACtC,OAAOmB,SAAS;IAClB;IACA,OAAO,IAAI;EACb,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,KAAK;EACd;AACF;AAEA,SAASK,cAAcA,CAAC;EAAEC;AAAmB,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAMC,QAAQ,GAAGzB,WAAW,CAAC,CAAC;EAC9B,MAAM0B,QAAQ,GAAGzB,WAAW,CAAC,CAAC;EAE9B,MAAM0B,gBAAgB,GAAG5B,WAAW,CAAC,YAAY;IAC/C,MAAM6B,MAAM,GAAG,MAAMT,mBAAmB,CAAC,CAAC;IAC1CI,kBAAkB,CAACK,MAAM,CAAC;IAC1B,IAAI,CAACA,MAAM,IAAI,CAAC,CAAC,QAAQ,EAAE,SAAS,EAAE,YAAY,CAAC,CAACC,QAAQ,CAACJ,QAAQ,CAACK,QAAQ,CAAC,EAAE;MAC/EJ,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACH,kBAAkB,EAAEG,QAAQ,EAAED,QAAQ,CAACK,QAAQ,CAAC,CAAC;EAErDhC,SAAS,CAAC,MAAM;IACd6B,gBAAgB,CAAC,CAAC;IAClB,MAAMI,UAAU,GAAGC,WAAW,CAACL,gBAAgB,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;IACjE,OAAO,MAAMM,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,CAACJ,gBAAgB,CAAC,CAAC;EAEtB,OAAO,IAAI;AACb;AAACH,EAAA,CAnBQF,cAAc;EAAA,QACJtB,WAAW,EACXC,WAAW;AAAA;AAAAiC,EAAA,GAFrBZ,cAAc;AAqBvB,eAAeA,cAAc;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}