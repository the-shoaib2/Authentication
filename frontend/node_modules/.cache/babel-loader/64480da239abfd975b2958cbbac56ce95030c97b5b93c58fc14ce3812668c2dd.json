{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// // App.js\n// import { Navigate, Route, Routes } from 'react-router-dom';\n// import { useState } from 'react';\n// import Login from './pages/Login';\n// import Signup from './pages/Signup';\n// import Home from './pages/Home';\n// import UserProfile from './pages/UserProfile';\n// import FindUserForgotPassword from './components/ForgotPassword/FindUserForgotPassword';\n// import SentOtpForgotPassword from './components/ForgotPassword/SentOtpForgotPassword';\n// import ResetPassword from './components/ForgotPassword/ResetPassword';\n// import RefrshHandler from './utils/RefreshHandler';\n// import 'react-toastify/dist/ReactToastify.css';\n// import VerifyCodeConfirmAccount from './pages/VerifyCodeConfirmAccount'; \n\n// // For Debugging..\n// import { useLocation } from 'react-router-dom';\n\n// function App() {\n//     // For Debugging..\n//     const location = useLocation();\n//     console.log('Current location:', location.pathname);\n//     // For Debugging..\n\n//     const [isAuthenticated, setIsAuthenticated] = useState(false);\n//     console.log('Is authenticated:', isAuthenticated);\n\n//     const PrivateRoute = ({ element }) => {\n//         return isAuthenticated ? element : <Navigate to=\"/login\" />\n//     }\n\n//     return (\n//         <div className=\"App\">\n//             <RefrshHandler setIsAuthenticated={setIsAuthenticated} />\n//             <Routes>\n//                 <Route path='/' element={<Navigate to=\"/login\" />} />\n//                 <Route path='/login' element={<Login />} />\n//                 <Route path='/signup' element={<Signup />} />\n//                 <Route path=\"/verify-email\"  element={<VerifyCodeConfirmAccount/>} /> \n//                 <Route path='/home' element={<PrivateRoute element={<Home />} />} />\n//                 <Route path=\"/user-profile\" element={<UserProfile />} />\n\n//                 <Route path='/find-user' element={<FindUserForgotPassword />} />\n//                 <Route path='/forgot-password/verification-code' element={<SentOtpForgotPassword />} />\n//                 <Route path='/forgot-password/reset-password' element={<ResetPassword />} />\n//             </Routes>\n//         </div>\n//     );\n// }\n\n// export default App;\n\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { useState } from 'react';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Home from './pages/Home';\nimport UserProfile from './pages/UserProfile';\nimport FindUserForgotPassword from './components/ForgotPassword/FindUserForgotPassword';\nimport SentOtpForgotPassword from './components/ForgotPassword/SentOtpForgotPassword';\nimport ResetPassword from './components/ForgotPassword/ResetPassword';\nimport RefrshHandler from './utils/RefreshHandler';\nimport 'react-toastify/dist/ReactToastify.css';\nimport VerifyCodeConfirmAccount from './pages/VerifyCodeConfirmAccount';\nimport ProtectedRoute from './components/ProtectedRoute'; // Import the ProtectedRoute component\n\n// For Debugging..\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // For Debugging..\n  const location = useLocation();\n  console.log('Current location:', location.pathname);\n  // For Debugging..\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  console.log('Is authenticated:', isAuthenticated);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(RefrshHandler, {\n      setIsAuthenticated: setIsAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/verify-email\",\n        element: /*#__PURE__*/_jsxDEV(VerifyCodeConfirmAccount, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        path: \"/home\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        path: \"/user-profile\",\n        component: UserProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/find-user\",\n        element: /*#__PURE__*/_jsxDEV(FindUserForgotPassword, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/forgot-password/verification-code\",\n        element: /*#__PURE__*/_jsxDEV(SentOtpForgotPassword, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 75\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/forgot-password/reset-password\",\n        element: /*#__PURE__*/_jsxDEV(ResetPassword, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"13lf9urUNNnbMmZjZQnGiCyBsGs=\", false, function () {\n  return [useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navigate","Route","Routes","useState","Login","Signup","Home","UserProfile","FindUserForgotPassword","SentOtpForgotPassword","ResetPassword","RefrshHandler","VerifyCodeConfirmAccount","ProtectedRoute","useLocation","jsxDEV","_jsxDEV","App","_s","location","console","log","pathname","isAuthenticated","setIsAuthenticated","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","component","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/App.js"],"sourcesContent":["\r\n// // App.js\r\n// import { Navigate, Route, Routes } from 'react-router-dom';\r\n// import { useState } from 'react';\r\n// import Login from './pages/Login';\r\n// import Signup from './pages/Signup';\r\n// import Home from './pages/Home';\r\n// import UserProfile from './pages/UserProfile';\r\n// import FindUserForgotPassword from './components/ForgotPassword/FindUserForgotPassword';\r\n// import SentOtpForgotPassword from './components/ForgotPassword/SentOtpForgotPassword';\r\n// import ResetPassword from './components/ForgotPassword/ResetPassword';\r\n// import RefrshHandler from './utils/RefreshHandler';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n// import VerifyCodeConfirmAccount from './pages/VerifyCodeConfirmAccount'; \r\n\r\n// // For Debugging..\r\n// import { useLocation } from 'react-router-dom';\r\n\r\n// function App() {\r\n//     // For Debugging..\r\n//     const location = useLocation();\r\n//     console.log('Current location:', location.pathname);\r\n//     // For Debugging..\r\n\r\n//     const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n//     console.log('Is authenticated:', isAuthenticated);\r\n\r\n\r\n//     const PrivateRoute = ({ element }) => {\r\n//         return isAuthenticated ? element : <Navigate to=\"/login\" />\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"App\">\r\n//             <RefrshHandler setIsAuthenticated={setIsAuthenticated} />\r\n//             <Routes>\r\n//                 <Route path='/' element={<Navigate to=\"/login\" />} />\r\n//                 <Route path='/login' element={<Login />} />\r\n//                 <Route path='/signup' element={<Signup />} />\r\n//                 <Route path=\"/verify-email\"  element={<VerifyCodeConfirmAccount/>} /> \r\n//                 <Route path='/home' element={<PrivateRoute element={<Home />} />} />\r\n//                 <Route path=\"/user-profile\" element={<UserProfile />} />\r\n\r\n\r\n//                 <Route path='/find-user' element={<FindUserForgotPassword />} />\r\n//                 <Route path='/forgot-password/verification-code' element={<SentOtpForgotPassword />} />\r\n//                 <Route path='/forgot-password/reset-password' element={<ResetPassword />} />\r\n//             </Routes>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\nimport { Navigate, Route, Routes } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/Signup';\r\nimport Home from './pages/Home';\r\nimport UserProfile from './pages/UserProfile';\r\nimport FindUserForgotPassword from './components/ForgotPassword/FindUserForgotPassword';\r\nimport SentOtpForgotPassword from './components/ForgotPassword/SentOtpForgotPassword';\r\nimport ResetPassword from './components/ForgotPassword/ResetPassword';\r\nimport RefrshHandler from './utils/RefreshHandler';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport VerifyCodeConfirmAccount from './pages/VerifyCodeConfirmAccount';\r\nimport ProtectedRoute from './components/ProtectedRoute'; // Import the ProtectedRoute component\r\n\r\n// For Debugging..\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction App() {\r\n    // For Debugging..\r\n    const location = useLocation();\r\n    console.log('Current location:', location.pathname);\r\n    // For Debugging..\r\n\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    console.log('Is authenticated:', isAuthenticated);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <RefrshHandler setIsAuthenticated={setIsAuthenticated} />\r\n            <Routes>\r\n                <Route path='/' element={<Navigate to=\"/login\" />} />\r\n                <Route path='/login' element={<Login />} />\r\n                <Route path='/signup' element={<Signup />} />\r\n                <Route path=\"/verify-email\" element={<VerifyCodeConfirmAccount />} />\r\n                <ProtectedRoute path='/home' component={Home} />\r\n                <ProtectedRoute path=\"/user-profile\" component={UserProfile} />\r\n                <Route path='/find-user' element={<FindUserForgotPassword />} />\r\n                <Route path='/forgot-password/verification-code' element={<SentOtpForgotPassword />} />\r\n                <Route path='/forgot-password/reset-password' element={<ResetPassword />} />\r\n            </Routes>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}