{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\components\\\\Services\\\\ChatServices\\\\ChatList.jsx\";\nimport React from \"react\";\nimport \"../../../assets/style/ServicesStyle/ChatServicesStyle/ChatList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatList = ({\n  selectedUser,\n  handleUserSelect\n}) => {\n  const users = [{\n    id: 1,\n    name: \"John Doe\",\n    lastMessage: \"Hey, how are you?\",\n    time: \"2:30 PM\",\n    avatar: \"/images/avatar/avatar-Alice.png\",\n    unread: 2,\n    active: true,\n    status: \"seen\"\n  }, {\n    id: 2,\n    name: \"Jane Smith\",\n    lastMessage: \"Can we meet tomorrow?\",\n    time: \"Yesterday\",\n    avatar: \"/images/avatar/avatar-Bob.png\",\n    unread: 0,\n    active: false,\n    status: \"delivered\"\n  }, {\n    id: 3,\n    name: \"Bob Johnson\",\n    lastMessage: \"Thanks for your help!\",\n    time: \"2 days ago\",\n    avatar: \"/images/avatar/avatar-Charlie.png\",\n    unread: 5,\n    active: true,\n    status: \"sent\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-sidebar\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"chat-list\",\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `chat-list-item ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === user.id ? \"active\" : \"\"}`,\n        onClick: () => handleUserSelect(user),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-item-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.avatar,\n              alt: user.name,\n              className: \"chat-avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `chat-name ${user.unread > 0 ? \"unread\" : \"\"}`,\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"chat-time\",\n                children: user.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-footer\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"chat-last-message\",\n                children: user.lastMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), user.unread > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"unread-badge\",\n                children: user.unread\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = ChatList;\nexport default ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ChatList","selectedUser","handleUserSelect","users","id","name","lastMessage","time","avatar","unread","active","status","className","children","map","user","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/components/Services/ChatServices/ChatList.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"../../../assets/style/ServicesStyle/ChatServicesStyle/ChatList.css\";\r\n\r\nconst ChatList = ({ selectedUser, handleUserSelect }) => {\r\n  const users = [\r\n    {\r\n      id: 1,\r\n      name: \"John Doe\",\r\n      lastMessage: \"Hey, how are you?\",\r\n      time: \"2:30 PM\",\r\n      avatar: \"/images/avatar/avatar-Alice.png\",\r\n      unread: 2,\r\n      active: true,\r\n      status: \"seen\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Jane Smith\",\r\n      lastMessage: \"Can we meet tomorrow?\",\r\n      time: \"Yesterday\",\r\n      avatar: \"/images/avatar/avatar-Bob.png\",\r\n      unread: 0,\r\n      active: false,\r\n      status: \"delivered\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Bob Johnson\",\r\n      lastMessage: \"Thanks for your help!\",\r\n      time: \"2 days ago\",\r\n      avatar: \"/images/avatar/avatar-Charlie.png\",\r\n      unread: 5,\r\n      active: true,\r\n      status: \"sent\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"chat-sidebar\">\r\n      <ul className=\"chat-list\">\r\n        {users.map((user) => (\r\n          <li\r\n            key={user.id}\r\n            className={`chat-list-item ${selectedUser?.id === user.id ? \"active\" : \"\"}`}\r\n            onClick={() => handleUserSelect(user)}\r\n          >\r\n            <div className=\"chat-item-content\">\r\n              <div className=\"avatar-container\">\r\n                <img src={user.avatar} alt={user.name} className=\"chat-avatar\" />\r\n              </div>\r\n              <div className=\"chat-info\">\r\n                <div className=\"chat-header\">\r\n                  <span className={`chat-name ${user.unread > 0 ? \"unread\" : \"\"}`}>\r\n                    {user.name}\r\n                  </span>\r\n                  <span className=\"chat-time\">{user.time}</span>\r\n                </div>\r\n                <div className=\"chat-footer\">\r\n                  <span className=\"chat-last-message\">{user.lastMessage}</span>\r\n                  {user.unread > 0 && <span className=\"unread-badge\">{user.unread}</span>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}