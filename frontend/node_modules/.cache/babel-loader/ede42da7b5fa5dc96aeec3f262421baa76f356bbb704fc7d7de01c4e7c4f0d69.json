{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { checkAuthentication } from '../utils/ApiService';\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    auth,\n    setAuth\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkExistingAuth = async () => {\n      const isAuth = await checkAuthentication();\n      if (!isAuth) {\n        setAuth({\n          isAuthenticated: false\n        });\n        navigate('/login', {\n          replace: true\n        });\n      } else {\n        setAuth({\n          isAuthenticated: true\n        });\n      }\n    };\n    checkExistingAuth();\n  }, [navigate, setAuth]);\n  return auth.isAuthenticated ? children : null;\n};\n_s(ProtectedRoute, \"ed+1Mt+nkP273rfaD9yJjEjTeNg=\", false, function () {\n  return [useNavigate];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","useEffect","Navigate","useNavigate","AuthContext","checkAuthentication","ProtectedRoute","children","_s","auth","setAuth","navigate","checkExistingAuth","isAuth","isAuthenticated","replace","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/utils/ProtectedRoute.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\nimport { checkAuthentication } from '../utils/ApiService';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n    const { auth, setAuth } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const checkExistingAuth = async () => {\r\n            const isAuth = await checkAuthentication();\r\n            if (!isAuth) {\r\n                setAuth({ isAuthenticated: false });\r\n                navigate('/login', { replace: true });\r\n            } else {\r\n                setAuth({ isAuthenticated: true });\r\n            }\r\n        };\r\n        checkExistingAuth();\r\n    }, [navigate, setAuth]);\r\n\r\n    return auth.isAuthenticated ? children : null;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,mBAAmB,QAAQ,qBAAqB;AAEzD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGV,UAAU,CAACI,WAAW,CAAC;EACjD,MAAMO,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ,MAAMW,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,MAAMC,MAAM,GAAG,MAAMR,mBAAmB,CAAC,CAAC;MAC1C,IAAI,CAACQ,MAAM,EAAE;QACTH,OAAO,CAAC;UAAEI,eAAe,EAAE;QAAM,CAAC,CAAC;QACnCH,QAAQ,CAAC,QAAQ,EAAE;UAAEI,OAAO,EAAE;QAAK,CAAC,CAAC;MACzC,CAAC,MAAM;QACHL,OAAO,CAAC;UAAEI,eAAe,EAAE;QAAK,CAAC,CAAC;MACtC;IACJ,CAAC;IACDF,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACD,QAAQ,EAAED,OAAO,CAAC,CAAC;EAEvB,OAAOD,IAAI,CAACK,eAAe,GAAGP,QAAQ,GAAG,IAAI;AACjD,CAAC;AAACC,EAAA,CAlBIF,cAAc;EAAA,QAECH,WAAW;AAAA;AAAAa,EAAA,GAF1BV,cAAc;AAoBpB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}