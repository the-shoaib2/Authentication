{"ast":null,"code":"\n// // VerifyCodeConfirmAccount.js\n// import React, { useState, useEffect, useRef } from 'react';\n// import { useNavigate, useLocation } from 'react-router-dom';\n// import { handleSuccess, handleError, ToastContainer } from '../../utils/ReactToastify';\n// import '../../utils/ReactToastifyCustom.css';\n// import '../../utils/style/SentOtpForgotPassword.css';\n// import OtpInput from '../../Services/OtpInput'; \n\n// function SentOtpForgotPassword() {\n//     const [otp, setOtp] = useState('');\n//     const [timer, setTimer] = useState(60);\n//     const [isResendEnabled, setIsResendEnabled] = useState(false);\n//     const [isComplete, setIsComplete] = useState(false);\n//     const { state } = useLocation();\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         const countdown = timer > 0 ? setInterval(() => {\n//             setTimer((prev) => prev - 1);\n//         }, 1000) : null;\n\n//         if (timer === 0) {\n//             setIsResendEnabled(true);\n//         }\n\n//         return () => {\n//             if (countdown) clearInterval(countdown);\n//         };\n//     }, [timer]);\n\n// const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     try {\n//         const response = await fetch('http://localhost:8080/auth/singup', {\n//             method: 'POST',\n//             headers: { 'Content-Type': 'application/json' },\n//             body: JSON.stringify({ email: state.email, otp }),\n//         });\n\n//         const result = await response.json();\n\n//         if (response.ok) {\n//             handleSuccess(result.message);\n//             navigate('/forgot-password/reset-password', { state: { email: state.email } });\n//         } else {\n//             handleError(result.message);\n//         }\n//     } catch (err) {\n//         handleError('Network error. Please check your connection and try again.');\n//     }\n// };\n\n//     const handleResendOtp = async () => {\n//         try {\n//             setIsResendEnabled(false);\n//             setTimer(60); // Reset timer\n//             const response = await fetch('http://localhost:8080/verification/forgot-password/send-otp', {\n//                 method: 'POST',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify({ email: state.email }),\n//             });\n\n//             const result = await response.json();\n\n//             if (response.ok) {\n//                 handleSuccess(result.message);\n//             } else {\n//                 handleError(result.message);\n//             }\n//         } catch (err) {\n//             handleError('Failed to resend OTP. Please try again.');\n//         }\n//     };\n\n//     return (\n//         <div className=\"otp-wrapper\">\n//             <div>\n//             <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\n//             </div>\n//             <h1 className=\"otp-title\">Verification Code</h1>\n//             <div className=\"otp-timer\">\n//                 <p>We've sent a verification code to your registered email address.</p>\n//             <div className=\"timer\">\n//                 <p  >Time Remaining: {timer} s</p>\n//             </div>\n//             </div>\n//             <form onSubmit={handleSubmit}>\n//                 <OtpInput\n//                     length={6}\n//                     onOtpSubmit={(otp) => setOtp(otp)}\n//                     onOtpComplete={(complete) => setIsComplete(complete)}\n//                 />\n//                 <div className=\"otp-buttons\">\n//                     {timer === 0 ? (\n//                         <>\n//                           <div className=\"otp-massage\">\n//                           <p>Didn't receive the code?</p>\n//                           </div>\n\n//                             <button\n//                                 type=\"button\"\n//                                 className=\"otp-btn resend\"\n//                                 onClick={handleResendOtp}\n//                             >\n//                                 Resend Code\n//                             </button>\n//                         </>\n//                     ) : (\n//                         <>\n//                        <div className=\"otp-massage\">\n//                           <br/>\n//                         </div>\n//                         <button\n//                             type=\"submit\"\n//                             className={`otp-btn verify ${isComplete ? 'active' : ''}`}\n//                             disabled={!isComplete}\n//                         >\n//                             Verify Code\n//                         </button>\n//                         </>\n//                     )}\n//                 </div>\n//             </form>\n//             <ToastContainer />\n//         </div>\n//     );\n// }\n\n// export default SentOtpForgotPassword;","map":{"version":3,"names":[],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/pages/VerifyCodeAccount.js"],"sourcesContent":["\r\n// // VerifyCodeConfirmAccount.js\r\n// import React, { useState, useEffect, useRef } from 'react';\r\n// import { useNavigate, useLocation } from 'react-router-dom';\r\n// import { handleSuccess, handleError, ToastContainer } from '../../utils/ReactToastify';\r\n// import '../../utils/ReactToastifyCustom.css';\r\n// import '../../utils/style/SentOtpForgotPassword.css';\r\n// import OtpInput from '../../Services/OtpInput'; \r\n\r\n// function SentOtpForgotPassword() {\r\n//     const [otp, setOtp] = useState('');\r\n//     const [timer, setTimer] = useState(60);\r\n//     const [isResendEnabled, setIsResendEnabled] = useState(false);\r\n//     const [isComplete, setIsComplete] = useState(false);\r\n//     const { state } = useLocation();\r\n//     const navigate = useNavigate();\r\n\r\n//     useEffect(() => {\r\n//         const countdown = timer > 0 ? setInterval(() => {\r\n//             setTimer((prev) => prev - 1);\r\n//         }, 1000) : null;\r\n\r\n//         if (timer === 0) {\r\n//             setIsResendEnabled(true);\r\n//         }\r\n\r\n//         return () => {\r\n//             if (countdown) clearInterval(countdown);\r\n//         };\r\n//     }, [timer]);\r\n\r\n\r\n// const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     try {\r\n//         const response = await fetch('http://localhost:8080/auth/singup', {\r\n//             method: 'POST',\r\n//             headers: { 'Content-Type': 'application/json' },\r\n//             body: JSON.stringify({ email: state.email, otp }),\r\n//         });\r\n\r\n//         const result = await response.json();\r\n\r\n//         if (response.ok) {\r\n//             handleSuccess(result.message);\r\n//             navigate('/forgot-password/reset-password', { state: { email: state.email } });\r\n//         } else {\r\n//             handleError(result.message);\r\n//         }\r\n//     } catch (err) {\r\n//         handleError('Network error. Please check your connection and try again.');\r\n//     }\r\n// };\r\n\r\n\r\n//     const handleResendOtp = async () => {\r\n//         try {\r\n//             setIsResendEnabled(false);\r\n//             setTimer(60); // Reset timer\r\n//             const response = await fetch('http://localhost:8080/verification/forgot-password/send-otp', {\r\n//                 method: 'POST',\r\n//                 headers: { 'Content-Type': 'application/json' },\r\n//                 body: JSON.stringify({ email: state.email }),\r\n//             });\r\n\r\n//             const result = await response.json();\r\n\r\n//             if (response.ok) {\r\n//                 handleSuccess(result.message);\r\n//             } else {\r\n//                 handleError(result.message);\r\n//             }\r\n//         } catch (err) {\r\n//             handleError('Failed to resend OTP. Please try again.');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"otp-wrapper\">\r\n//             <div>\r\n//             <img src='/app-icon.ico' alt='App Icon' className='app-icon' />\r\n//             </div>\r\n//             <h1 className=\"otp-title\">Verification Code</h1>\r\n//             <div className=\"otp-timer\">\r\n//                 <p>We've sent a verification code to your registered email address.</p>\r\n//             <div className=\"timer\">\r\n//                 <p  >Time Remaining: {timer} s</p>\r\n//             </div>\r\n//             </div>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <OtpInput\r\n//                     length={6}\r\n//                     onOtpSubmit={(otp) => setOtp(otp)}\r\n//                     onOtpComplete={(complete) => setIsComplete(complete)}\r\n//                 />\r\n//                 <div className=\"otp-buttons\">\r\n//                     {timer === 0 ? (\r\n//                         <>\r\n//                           <div className=\"otp-massage\">\r\n//                           <p>Didn't receive the code?</p>\r\n//                           </div>\r\n                            \r\n//                             <button\r\n//                                 type=\"button\"\r\n//                                 className=\"otp-btn resend\"\r\n//                                 onClick={handleResendOtp}\r\n//                             >\r\n//                                 Resend Code\r\n//                             </button>\r\n//                         </>\r\n//                     ) : (\r\n//                         <>\r\n//                        <div className=\"otp-massage\">\r\n//                           <br/>\r\n//                         </div>\r\n//                         <button\r\n//                             type=\"submit\"\r\n//                             className={`otp-btn verify ${isComplete ? 'active' : ''}`}\r\n//                             disabled={!isComplete}\r\n//                         >\r\n//                             Verify Code\r\n//                         </button>\r\n//                         </>\r\n//                     )}\r\n//                 </div>\r\n//             </form>\r\n//             <ToastContainer />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default SentOtpForgotPassword;\r\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}