{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\LOGIN_SINGUP - Copy\\\\LOGIN_SINGUP - Copy\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\n// // Home.js\n\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { handleError, handleSuccess } from '../utils/ReactToastify';\n// import { ToastContainer } from 'react-toastify';\n// import '../utils/ReactToastifyCustom.css';\n// import '../utils/loading.css';\n\n// function Home() {\n//     const [loggedInUser, setLoggedInUser] = useState('');\n//     const [users, setUsers] = useState([]);\n//     const [loading, setLoading] = useState(false);\n//     const [fadeOut, setFadeOut] = useState(false);\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         setLoggedInUser(localStorage.getItem('loggedInUser'));\n//     }, []);\n\n//     const handleLogout = () => {\n//         setLoading(true);\n//         setFadeOut(false);\n\n//         setTimeout(() => {\n//             setFadeOut(true);\n//             setTimeout(() => {\n//                 localStorage.removeItem('token');\n//                 localStorage.removeItem('loggedInUser');\n//                 handleSuccess('User logged out successfully');\n//                 navigate('/login');\n//             }, 250);\n//         }, 1000);\n//     };\n\n//     const fetchUsers = async () => {\n//         setLoading(true);\n//         try {\n//             const url = \"http://localhost:8080/Users\";\n//             const headers = {\n//                 headers: {\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`\n//                 }\n//             };\n//             const response = await fetch(url, headers);\n//             const result = await response.json();\n//             setUsers(result);\n//         } catch (err) {\n//             handleError(err.message || 'An error occurred');\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     useEffect(() => {\n//         fetchUsers();\n//     }, []);\n\n//     return (\n//         <div className='container'>\n//             <h1>Welcome {loggedInUser}</h1>\n//             <div>\n//                 {loading ? (\n//                     <div className={`loading-overlay ${fadeOut ? 'hidden' : ''}`}>\n//                         <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\n//                     </div>\n//                 ) : users.length > 0 ? (\n//                     users.map((user, index) => (\n//                         <ul key={index}>\n//                             <li>Name: {user.name}</li>\n//                             <li>Email: {user.email}</li>\n//                             <li>Joined: {new Date(user.createdAt).toLocaleDateString()}</li>\n//                         </ul>\n//                     ))\n//                 ) : (\n//                     <p>No users found</p>\n//                 )}\n//             </div>\n\n//             <button onClick={handleLogout}>Logout</button>\n\n//             <ToastContainer />\n//         </div>\n//     );\n// }\n\n// export default Home;\n\n// Home.js\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { handleError, handleSuccess } from '../utils/ReactToastify';\nimport { ToastContainer } from 'react-toastify';\nimport '../utils/ReactToastifyCustom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProtectedData = async () => {\n      const accessToken = localStorage.getItem('accessToken');\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (!accessToken || !refreshToken) {\n        handleError('Session expired. Please log in again.');\n        localStorage.clear();\n        navigate('/login');\n        return;\n      }\n      try {\n        const response = await fetch('http://localhost:8080/protected-route', {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        if (response.status === 403) {\n          // Token expired, try refreshing it\n          const refreshResponse = await fetch('http://localhost:8080/auth/refresh-token', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              refreshToken\n            })\n          });\n          const refreshResult = await refreshResponse.json();\n          const {\n            success,\n            newAccessToken,\n            message\n          } = refreshResult;\n          if (success) {\n            localStorage.setItem('accessToken', newAccessToken);\n            // Retry the original request with the new access token\n            const retryResponse = await fetch('http://localhost:8080/protected-route', {\n              method: 'GET',\n              headers: {\n                Authorization: `Bearer ${newAccessToken}`\n              }\n            });\n            if (retryResponse.ok) {\n              const data = await retryResponse.json();\n              handleSuccess('Welcome back!');\n              // Handle your protected data here\n            } else {\n              handleError('Failed to fetch protected data');\n            }\n          } else {\n            handleError(message || 'Session expired. Please log in again.');\n            localStorage.clear();\n            navigate('/login');\n          }\n        } else if (response.ok) {\n          const data = await response.json();\n          handleSuccess('Welcome back!');\n          // Handle your protected data here\n        } else {\n          handleError('Failed to fetch protected data');\n        }\n      } catch (err) {\n        handleError('An error occurred');\n        navigate('/login');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProtectedData();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/apple-loading.gif\",\n        alt: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"y3JVj3H+DZT4skK8GcW7cVdM7zQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","handleError","handleSuccess","ToastContainer","jsxDEV","_jsxDEV","Home","_s","loading","setLoading","navigate","fetchProtectedData","accessToken","localStorage","getItem","refreshToken","clear","response","fetch","method","headers","Authorization","status","refreshResponse","body","JSON","stringify","refreshResult","json","success","newAccessToken","message","setItem","retryResponse","ok","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/LOGIN_SINGUP - Copy/LOGIN_SINGUP - Copy/frontend/src/pages/Home.js"],"sourcesContent":["// // Home.js\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { handleError, handleSuccess } from '../utils/ReactToastify';\r\n// import { ToastContainer } from 'react-toastify';\r\n// import '../utils/ReactToastifyCustom.css';\r\n// import '../utils/loading.css';\r\n\r\n// function Home() {\r\n//     const [loggedInUser, setLoggedInUser] = useState('');\r\n//     const [users, setUsers] = useState([]);\r\n//     const [loading, setLoading] = useState(false);\r\n//     const [fadeOut, setFadeOut] = useState(false);\r\n//     const navigate = useNavigate();\r\n\r\n//     useEffect(() => {\r\n//         setLoggedInUser(localStorage.getItem('loggedInUser'));\r\n//     }, []);\r\n\r\n//     const handleLogout = () => {\r\n//         setLoading(true);\r\n//         setFadeOut(false);\r\n\r\n//         setTimeout(() => {\r\n//             setFadeOut(true);\r\n//             setTimeout(() => {\r\n//                 localStorage.removeItem('token');\r\n//                 localStorage.removeItem('loggedInUser');\r\n//                 handleSuccess('User logged out successfully');\r\n//                 navigate('/login');\r\n//             }, 250);\r\n//         }, 1000);\r\n//     };\r\n\r\n//     const fetchUsers = async () => {\r\n//         setLoading(true);\r\n//         try {\r\n//             const url = \"http://localhost:8080/Users\";\r\n//             const headers = {\r\n//                 headers: {\r\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n//                 }\r\n//             };\r\n//             const response = await fetch(url, headers);\r\n//             const result = await response.json();\r\n//             setUsers(result);\r\n//         } catch (err) {\r\n//             handleError(err.message || 'An error occurred');\r\n//         } finally {\r\n//             setLoading(false);\r\n//         }\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         fetchUsers();\r\n//     }, []);\r\n\r\n//     return (\r\n//         <div className='container'>\r\n//             <h1>Welcome {loggedInUser}</h1>\r\n//             <div>\r\n//                 {loading ? (\r\n//                     <div className={`loading-overlay ${fadeOut ? 'hidden' : ''}`}>\r\n//                         <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\r\n//                     </div>\r\n//                 ) : users.length > 0 ? (\r\n//                     users.map((user, index) => (\r\n//                         <ul key={index}>\r\n//                             <li>Name: {user.name}</li>\r\n//                             <li>Email: {user.email}</li>\r\n//                             <li>Joined: {new Date(user.createdAt).toLocaleDateString()}</li>\r\n//                         </ul>\r\n//                     ))\r\n//                 ) : (\r\n//                     <p>No users found</p>\r\n//                 )}\r\n//             </div>\r\n\r\n//             <button onClick={handleLogout}>Logout</button>\r\n\r\n//             <ToastContainer />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Home;\r\n\r\n\r\n\r\n\r\n// Home.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { handleError, handleSuccess } from '../utils/ReactToastify';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport '../utils/ReactToastifyCustom.css';\r\n\r\nfunction Home() {\r\n    const [loading, setLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchProtectedData = async () => {\r\n            const accessToken = localStorage.getItem('accessToken');\r\n            const refreshToken = localStorage.getItem('refreshToken');\r\n\r\n            if (!accessToken || !refreshToken) {\r\n                handleError('Session expired. Please log in again.');\r\n                localStorage.clear();\r\n                navigate('/login');\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await fetch('http://localhost:8080/protected-route', {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        Authorization: `Bearer ${accessToken}`\r\n                    }\r\n                });\r\n\r\n                if (response.status === 403) {\r\n                    // Token expired, try refreshing it\r\n                    const refreshResponse = await fetch('http://localhost:8080/auth/refresh-token', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify({ refreshToken })\r\n                    });\r\n\r\n                    const refreshResult = await refreshResponse.json();\r\n                    const { success, newAccessToken, message } = refreshResult;\r\n\r\n                    if (success) {\r\n                        localStorage.setItem('accessToken', newAccessToken);\r\n                        // Retry the original request with the new access token\r\n                        const retryResponse = await fetch('http://localhost:8080/protected-route', {\r\n                            method: 'GET',\r\n                            headers: {\r\n                                Authorization: `Bearer ${newAccessToken}`\r\n                            }\r\n                        });\r\n\r\n                        if (retryResponse.ok) {\r\n                            const data = await retryResponse.json();\r\n                            handleSuccess('Welcome back!');\r\n                            // Handle your protected data here\r\n                        } else {\r\n                            handleError('Failed to fetch protected data');\r\n                        }\r\n                    } else {\r\n                        handleError(message || 'Session expired. Please log in again.');\r\n                        localStorage.clear();\r\n                        navigate('/login');\r\n                    }\r\n                } else if (response.ok) {\r\n                    const data = await response.json();\r\n                    handleSuccess('Welcome back!');\r\n                    // Handle your protected data here\r\n                } else {\r\n                    handleError('Failed to fetch protected data');\r\n                }\r\n            } catch (err) {\r\n                handleError('An error occurred');\r\n                navigate('/login');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchProtectedData();\r\n    }, [navigate]);\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h1>Home</h1>\r\n            {loading ? (\r\n                <div className='loading-spinner'>\r\n                    <img src='/apple-loading.gif' alt='Loading...' />\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    {/* Protected content goes here */}\r\n                </div>\r\n            )}\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}