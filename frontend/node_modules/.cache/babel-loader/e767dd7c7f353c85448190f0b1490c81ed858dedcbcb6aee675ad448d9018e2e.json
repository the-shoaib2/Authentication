{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\components\\\\ForgotPassword\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { handleSuccess, handleError, ToastContainer } from \"../../utils/ReactToastify\";\nimport \"../../assets/style/styleutils/ReactToastifyCustom.css\";\nimport \"../../assets/style/VerificationStyle/ResetPassword.css\";\nimport PasswordStrengthMeter from \"../../Extension/PasswordStrengthMeter\";\nimport StarIcon from '../../components/StarIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(false);\n  const [confirmPasswordError, setConfirmPasswordError] = useState(false);\n  const [matchError, setMatchError] = useState(false); // New state for match error\n  const {\n    state\n  } = useForgotPasswordState();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!state.codeVerified) {\n      navigate('/find-user');\n    }\n  }, [state.codeVerified, navigate]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    let hasError = false;\n\n    // Validate inputs\n    if (!password) {\n      setPasswordError(true);\n      hasError = true;\n    } else {\n      setPasswordError(false);\n    }\n    if (!confirmPassword) {\n      setConfirmPasswordError(true);\n      hasError = true;\n    } else {\n      setConfirmPasswordError(false);\n    }\n    if (password !== confirmPassword) {\n      setMatchError(true); // Set match error\n      handleError(\"Passwords do not match\");\n      hasError = true;\n    } else {\n      setMatchError(false); // Clear match error if passwords match\n    }\n    if (hasError) return;\n    try {\n      const response = await fetch(\"http://localhost:8080/verification/reset-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: state.email,\n          newPassword: password\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        handleSuccess(result.message);\n        navigate(\"/login\");\n      } else {\n        handleError(result.message);\n      }\n    } catch (err) {\n      handleError(\"Network error. Please check your connection and try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container fade-in-bottom\",\n    children: [/*#__PURE__*/_jsxDEV(StarIcon, {\n      width: 80,\n      height: 80\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button-forgotpaass icon-button fade-in\",\n      onClick: () => navigate(\"/sent-otp-forgot-password\") // Navigate to SentOtpForgotPassword page\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/icon/back-icon.png\",\n        alt: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"fade-in\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `input-wrapper ${matchError ? \"error\" : \"\"} fade-in`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group-reset-password ${passwordError ? \"error\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"new-password\",\n            placeholder: \"\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"new-password\",\n            className: \"form-label-reset-password\",\n            children: \"New password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group-reset-password ${confirmPasswordError ? \"error\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirm-password\",\n            placeholder: \"\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirm-password\",\n            className: \"form-label-reset-password\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PasswordStrengthMeter, {\n          password: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"scale-in\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"8fgQuuJbYc0Or+h5tsVhUZTFYd4=\", true, function () {\n  return [useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","handleSuccess","handleError","ToastContainer","PasswordStrengthMeter","StarIcon","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","matchError","setMatchError","state","useForgotPasswordState","navigate","codeVerified","handleSubmit","event","preventDefault","hasError","response","fetch","method","headers","body","JSON","stringify","email","newPassword","result","json","ok","message","err","className","children","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","onSubmit","type","id","placeholder","value","onChange","e","target","required","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/components/ForgotPassword/ResetPassword.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport {\r\n  handleSuccess,\r\n  handleError,\r\n  ToastContainer,\r\n} from \"../../utils/ReactToastify\";\r\nimport \"../../assets/style/styleutils/ReactToastifyCustom.css\";\r\nimport \"../../assets/style/VerificationStyle/ResetPassword.css\";\r\nimport PasswordStrengthMeter from \"../../Extension/PasswordStrengthMeter\"; \r\nimport StarIcon from '../../components/StarIcon';\r\n\r\nfunction ResetPassword() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(false);\r\n  const [matchError, setMatchError] = useState(false); // New state for match error\r\n  const { state } = useForgotPasswordState();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!state.codeVerified) {\r\n      navigate('/find-user');\r\n    }\r\n  }, [state.codeVerified, navigate]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let hasError = false;\r\n\r\n    // Validate inputs\r\n    if (!password) {\r\n      setPasswordError(true);\r\n      hasError = true;\r\n    } else {\r\n      setPasswordError(false);\r\n    }\r\n\r\n    if (!confirmPassword) {\r\n      setConfirmPasswordError(true);\r\n      hasError = true;\r\n    } else {\r\n      setConfirmPasswordError(false);\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setMatchError(true); // Set match error\r\n      handleError(\"Passwords do not match\");\r\n      hasError = true;\r\n    } else {\r\n      setMatchError(false); // Clear match error if passwords match\r\n    }\r\n\r\n    if (hasError) return;\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:8080/verification/reset-password\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ email: state.email, newPassword: password }),\r\n        }\r\n      );\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        handleSuccess(result.message);\r\n        navigate(\"/login\");\r\n      } else {\r\n        handleError(result.message);\r\n      }\r\n    } catch (err) {\r\n      handleError(\"Network error. Please check your connection and try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reset-password-container fade-in-bottom\">\r\n      <StarIcon width={80} height={80}/>\r\n      <button\r\n        className=\"back-button-forgotpaass icon-button fade-in\"\r\n        onClick={() => navigate(\"/sent-otp-forgot-password\")} // Navigate to SentOtpForgotPassword page\r\n      >\r\n        <img src=\"/images/icon/back-icon.png\" alt=\"Back\" />\r\n      </button>\r\n\r\n      <h1 className=\"fade-in\">Reset Password</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={`input-wrapper ${matchError ? \"error\" : \"\"} fade-in`}>\r\n          <div\r\n            className={`form-group-reset-password ${\r\n              passwordError ? \"error\" : \"\"\r\n            }`}\r\n          >\r\n            <input\r\n              type=\"password\"\r\n              id=\"new-password\"\r\n              placeholder=\"\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            <label htmlFor=\"new-password\" className=\"form-label-reset-password\">\r\n              New password\r\n            </label>\r\n          </div>\r\n          <div\r\n            className={`form-group-reset-password ${\r\n              confirmPasswordError ? \"error\" : \"\"\r\n            }`}\r\n          >\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirm-password\"\r\n              placeholder=\"\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              required\r\n            />\r\n            <label\r\n              htmlFor=\"confirm-password\"\r\n              className=\"form-label-reset-password\"\r\n            >\r\n              Confirm Password\r\n            </label>\r\n          </div>\r\n          <PasswordStrengthMeter password={password} />\r\n        </div>\r\n        <button type=\"submit\" className=\"scale-in\">\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}