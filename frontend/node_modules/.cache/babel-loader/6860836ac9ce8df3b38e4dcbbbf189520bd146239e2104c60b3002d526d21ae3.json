{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\components\\\\ConfirmAccountPopup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ConfirmAccountPopup({\n  isActive,\n  email,\n  token,\n  show,\n  onClose,\n  accountExpiryDate,\n  onLogout,\n  onAccountExpired\n}) {\n  _s();\n  const [showPopup, setShowPopup] = useState(false);\n  const [remainingDays, setRemainingDays] = useState(0);\n  const [countdown, setCountdown] = useState(10);\n  const [showCountdown, setShowCountdown] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isActive && show) {\n      setShowPopup(true);\n    }\n  }, [isActive, show]);\n  useEffect(() => {\n    if (accountExpiryDate) {\n      const checkAccountStatus = async () => {\n        try {\n          const response = await fetch('http://localhost:8080/Users/check-account-status', {\n            method: 'GET',\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          const data = await response.json();\n          if (data.expired) {\n            setShowCountdown(true);\n          } else {\n            setRemainingDays(data.remainingDays);\n          }\n        } catch (error) {\n          console.error('Error checking account status:', error);\n        }\n      };\n      checkAccountStatus();\n    }\n  }, [accountExpiryDate, token]);\n  useEffect(() => {\n    let timer;\n    if (showCountdown && countdown > 0) {\n      timer = setInterval(() => setCountdown(prev => prev - 1), 1000);\n    } else if (showCountdown && countdown === 0) {\n      onAccountExpired();\n    }\n    return () => clearInterval(timer);\n  }, [showCountdown, countdown, onAccountExpired]);\n  if (isActive) return null;\n  const handleClose = () => {\n    setShowPopup(false);\n    if (onClose) onClose();\n  };\n  const getMessage = () => {\n    if (showCountdown) {\n      return `Your account has expired. It will be deleted in ${countdown} seconds.`;\n    } else if (remainingDays > 0) {\n      return `Confirm your email within ${remainingDays} day${remainingDays > 1 ? 's' : ''}. Expires: ${new Date(accountExpiryDate).toLocaleDateString()}. Account will be auto-deleted after expiration. Note: Account deletion unavailable after confirmation.`;\n    } else {\n      return \"Your account has expired and will be deleted soon. Please contact support if you wish to reactivate it.\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirm-account-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"confirm-account-message\",\n        children: getMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), remainingDays > 0 && !showCountdown && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/verify-email\",\n        className: \"confirm-email-button\",\n        state: {\n          token: token,\n          email: email\n        },\n        children: \"Confirm Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), showCountdown && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdown-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdown-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Account Expiration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: getMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(ConfirmAccountPopup, \"vwDG2UmR+fDrKBKyEravL5maFSA=\", false, function () {\n  return [useNavigate];\n});\n_c = ConfirmAccountPopup;\nexport default ConfirmAccountPopup;\nvar _c;\n$RefreshReg$(_c, \"ConfirmAccountPopup\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ConfirmAccountPopup","isActive","email","token","show","onClose","accountExpiryDate","onLogout","onAccountExpired","_s","showPopup","setShowPopup","remainingDays","setRemainingDays","countdown","setCountdown","showCountdown","setShowCountdown","navigate","checkAccountStatus","response","fetch","method","headers","data","json","expired","error","console","timer","setInterval","prev","clearInterval","handleClose","getMessage","Date","toLocaleDateString","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","state","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/components/ConfirmAccountPopup.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nfunction ConfirmAccountPopup({ isActive, email, token, show, onClose, accountExpiryDate, onLogout, onAccountExpired }) {\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [remainingDays, setRemainingDays] = useState(0);\r\n    const [countdown, setCountdown] = useState(10);\r\n    const [showCountdown, setShowCountdown] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!isActive && show) {\r\n            setShowPopup(true);\r\n        }\r\n    }, [isActive, show]);\r\n\r\n    useEffect(() => {\r\n        if (accountExpiryDate) {\r\n            const checkAccountStatus = async () => {\r\n                try {\r\n                    const response = await fetch('http://localhost:8080/Users/check-account-status', {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Authorization': `Bearer ${token}`\r\n                        }\r\n                    });\r\n                    const data = await response.json();\r\n                    if (data.expired) {\r\n                        setShowCountdown(true);\r\n                    } else {\r\n                        setRemainingDays(data.remainingDays);\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error checking account status:', error);\r\n                }\r\n            };\r\n            checkAccountStatus();\r\n        }\r\n    }, [accountExpiryDate, token]);\r\n\r\n    useEffect(() => {\r\n        let timer;\r\n        if (showCountdown && countdown > 0) {\r\n            timer = setInterval(() => setCountdown(prev => prev - 1), 1000);\r\n        } else if (showCountdown && countdown === 0) {\r\n            onAccountExpired();\r\n        }\r\n        return () => clearInterval(timer);\r\n    }, [showCountdown, countdown, onAccountExpired]);\r\n\r\n    if (isActive) return null;\r\n\r\n    const handleClose = () => {\r\n        setShowPopup(false);\r\n        if (onClose) onClose();\r\n    };\r\n\r\n    const getMessage = () => {\r\n        if (showCountdown) {\r\n            return `Your account has expired. It will be deleted in ${countdown} seconds.`;\r\n        } else if (remainingDays > 0) {\r\n            return `Confirm your email within ${remainingDays} day${remainingDays > 1 ? 's' : ''}. Expires: ${new Date(accountExpiryDate).toLocaleDateString()}. Account will be auto-deleted after expiration. Note: Account deletion unavailable after confirmation.`;\r\n        } else {\r\n            return \"Your account has expired and will be deleted soon. Please contact support if you wish to reactivate it.\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"confirm-account-bar\">\r\n                <span className=\"confirm-account-message\">\r\n                    {getMessage()}\r\n                </span>\r\n                {remainingDays > 0 && !showCountdown && (\r\n                    <Link \r\n                        to=\"/verify-email\" \r\n                        className=\"confirm-email-button\"\r\n                        state={{ \r\n                            token: token,\r\n                            email: email\r\n                        }}\r\n                    >\r\n                        Confirm Email\r\n                    </Link>\r\n                )}\r\n            </div>\r\n            {showCountdown && (\r\n                <div className=\"countdown-overlay\">\r\n                    <div className=\"countdown-container\">\r\n                        <h1>Account Expiration</h1>\r\n                        <p>{getMessage()}</p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ConfirmAccountPopup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}