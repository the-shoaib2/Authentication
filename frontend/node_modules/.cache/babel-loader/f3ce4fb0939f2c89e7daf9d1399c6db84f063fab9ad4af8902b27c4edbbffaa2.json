{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\Extension\\\\AvatarUploadPopup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport \"../assets/style/ExtensionStyle/AvatarUploadPopup.css\";\nimport { uploadAvatar } from \"../utils/ApiService\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AvatarUploadPopup = ({\n  onClose\n}) => {\n  _s();\n  const fileInputRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(false); // Add loading state\n\n  const handleUploadClick = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n  const handleFileChange = async event => {\n    const file = event.target.files[0];\n    if (file) {\n      setIsLoading(true); // Set loading to true when upload starts\n      try {\n        await uploadAvatar(file);\n        onClose(); // Close the popup on successful upload\n      } catch (error) {\n        console.error(\"Upload failed:\", error);\n      } finally {\n        setIsLoading(false); // Reset loading state\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"avatar-upload-popup-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-upload-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"popup-title\",\n        children: \"Change Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-options\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this) // Show loading indicator\n        : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"popup-option-button\",\n            onClick: handleUploadClick,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleFileChange,\n            className: \"file-input\",\n            ref: fileInputRef,\n            style: {\n              display: \"none\"\n            } // Hide the input element\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"popup-option-button\",\n            children: \"Remove Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"popup-option-button\",\n            onClick: onClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(AvatarUploadPopup, \"6obZJuxAX7kBLf6QOufNWbcq57Y=\");\n_c = AvatarUploadPopup;\nexport default AvatarUploadPopup;\nvar _c;\n$RefreshReg$(_c, \"AvatarUploadPopup\");","map":{"version":3,"names":["React","useState","useRef","uploadAvatar","jsxDEV","_jsxDEV","Fragment","_Fragment","AvatarUploadPopup","onClose","_s","fileInputRef","isLoading","setIsLoading","handleUploadClick","current","click","handleFileChange","event","file","target","files","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","accept","onChange","ref","style","display","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/Extension/AvatarUploadPopup.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport \"../assets/style/ExtensionStyle/AvatarUploadPopup.css\";\r\nimport { uploadAvatar } from \"../utils/ApiService\";\r\n\r\nconst AvatarUploadPopup = ({ onClose }) => {\r\n  const fileInputRef = useRef(null);\r\n  const [isLoading, setIsLoading] = useState(false); // Add loading state\r\n\r\n  const handleUploadClick = () => {\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  const handleFileChange = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setIsLoading(true); // Set loading to true when upload starts\r\n      try {\r\n        await uploadAvatar(file);\r\n        onClose(); // Close the popup on successful upload\r\n      } catch (error) {\r\n        console.error(\"Upload failed:\", error);\r\n      } finally {\r\n        setIsLoading(false); // Reset loading state\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"avatar-upload-popup-overlay\">\r\n      <div className=\"avatar-upload-popup\">\r\n        <p className=\"popup-title\">Change Avatar</p>\r\n        <div className=\"popup-options\">\r\n          {isLoading ? (\r\n            <p>Loading...</p> // Show loading indicator\r\n          ) : (\r\n            <>\r\n              <button className=\"popup-option-button\" onClick={handleUploadClick}>\r\n                Upload\r\n              </button>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleFileChange}\r\n                className=\"file-input\"\r\n                ref={fileInputRef}\r\n                style={{ display: \"none\" }} // Hide the input element\r\n              />\r\n              <button className=\"popup-option-button\">Remove Avatar</button>\r\n              <button className=\"popup-option-button\" onClick={onClose}>\r\n                Cancel\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvatarUploadPopup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}