{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\components\\\\ForgotPassword\\\\FindUserForgotPassword.jsx\",\n  _s = $RefreshSig$();\n// // FindUserForgotPassword.js\n\n// import React, { useEffect, useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { handleSuccess, handleError, ToastContainer } from '../../utils/ReactToastify';\n// import '../../utils/ReactToastifyCustom.css';\n// import '../../utils/style/animations.css';\n// import '../../utils/style/FindUserForgotPassword.css';\n\n// function FindUserForgotPassword() {\n//     const [emailOrUsername, setEmailOrUsername] = useState('');\n//     const [user, setUser] = useState(null);\n//     const [loading, setLoading] = useState(false);\n//     const [fadeIn, setFadeIn] = useState(true);\n//     const [showContent, setShowContent] = useState(false);\n//     const [suggestions, setSuggestions] = useState([]);\n//     const [showSuggestions, setShowSuggestions] = useState(false);\n//     const [searchCompleted, setSearchCompleted] = useState(false);\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         if (fadeIn) {\n//             const timeoutId = setTimeout(() => {\n//                 setFadeIn(false);\n//             }, 500);\n//             return () => clearTimeout(timeoutId);\n//         }\n//     }, [fadeIn]);\n\n//     useEffect(() => {\n//         if (loading) {\n//             const timerId = setTimeout(() => {\n//                 setShowContent(true);\n//             }, 500);\n//             return () => clearTimeout(timerId);\n//         } else {\n//             setShowContent(true);\n//         }\n//     }, [loading]);\n\n//     const handleSearch = async (event) => {\n//         event.preventDefault();\n//         setLoading(true);\n//         setShowContent(false);\n\n//         try {\n//             const response = await fetch('http://localhost:8080/verification/forgot-password/find-user', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify({ emailOrUsername }),\n//             });\n\n//             const result = await response.json();\n\n//             setTimeout(() => {\n//                 if (response.ok) {\n//                     handleSuccess(result.message);\n//                     setUser(result.user);\n//                 } else {\n//                     handleError(result.message);\n//                     setUser(null);\n//                 }\n//                 setFadeIn(true);\n//                 setLoading(false);\n//                 setSearchCompleted(true);\n//             }, 500);\n//         } catch (err) {\n//             handleError('Network error. Please check your connection and try again.');\n//             setFadeIn(true);\n//             setLoading(false);\n//             setSearchCompleted(true);\n//         }\n//     };\n\n// // ... [Imports and previous code]\n// const handleSendOtp = async () => {\n//     if (!user) {\n//         handleError('No user found. Please perform a search first.');\n//         return;\n//     }\n\n//     try {\n//         const response = await fetch('http://localhost:8080/verification/forgot-password/send-otp', {\n//             method: 'POST',\n//             headers: { 'Content-Type': 'application/json' },\n//             body: JSON.stringify({ email: user.email }),\n//         });\n\n//         const result = await response.json();\n\n//         if (response.ok) {\n//             handleSuccess(result.message);\n//             navigate('/forgot-password/sent-otp', { state: { email: user.email } });\n//         } else {\n//             handleError(result.message);\n//         }\n//     } catch (err) {\n//         handleError('Failed to send OTP. Please try again.');\n//     }\n// };\n\n// const handleProceed = () => {\n//     if (user && searchCompleted) {\n//         handleSendOtp();\n//         navigate('/forgot-password/sent-otp', { state: { email: user.email } });\n//     } else {\n//         handleError('No user found. Please search for a valid user.');\n//     }\n// };\n\n//     const handleInputChange = (event) => {\n//         const value = event.target.value;\n//         setEmailOrUsername(value);\n//         updateSuggestions(value);\n//     };\n\n//     const updateSuggestions = (value) => {\n//         const suggestionList = [];\n//         const domains = ['gmail.com', 'yahoo.com', 'outlook.com', 'hotmail.com'];\n\n//         if (value.includes('@')) {\n//             const [, domain] = value.split('@');\n//             if (domain.length > 0) {\n//                 domains.forEach((d) => {\n//                     if (d.startsWith(domain)) {\n//                         suggestionList.push(`${value.split('@')[0]}@${d}`);\n//                     }\n//                 });\n//             }\n//         } else {\n//             domains.forEach((d) => {\n//                 suggestionList.push(`${value}@${d}`);\n//             });\n//         }\n\n//         setSuggestions(suggestionList);\n//         setShowSuggestions(suggestionList.length > 0);\n//     };\n\n//     const handleSuggestionClick = (suggestion) => {\n//         setEmailOrUsername(suggestion);\n//         setShowSuggestions(false);\n//     };\n\n//     return (\n//         <div className={`find-user-container container ${fadeIn ? 'fade-in' : ''}`}>\n//             <div className=\"header-container\">\n//                 <div className=\"icon-container-position\">\n//                     <Link to=\"/login\" className='icon-container'>\n//                         <img src=\"/back-icon.png\" alt=\"Back\" className=\"back-icon\" />\n//                     </Link>\n//                 </div>\n\n//                 <div className=\"center-content\">\n//                     <div className=\"logo-container\">\n//                         <img src=\"/app-icon.ico\" alt=\"App Icon\" className=\"app-icon\" />\n//                     </div>\n//                     <h1 className=\"page-title\">Forgot Password</h1>\n//                 </div>\n//             </div>\n\n//             <form onSubmit={handleSearch}>\n//                 <div className=\"input-container\">\n//                     <input\n//                         type=\"search\"\n//                         placeholder=\"Email or Username\"\n//                         value={emailOrUsername}\n//                         onChange={handleInputChange}\n//                         required\n//                     />\n//                     <button type=\"submit\" disabled={loading} className=\"search-icon-wrapper\">\n//                         <img src=\"/search.ico\" alt=\"Search icon\" className=\"search-icon-img\" />\n//                     </button>\n//                     {showSuggestions && (\n//                         <ul className=\"suggestion-list\">\n//                             {suggestions.map((suggestion, index) => (\n//                                 <li key={index} onClick={() => handleSuggestionClick(suggestion)}>\n//                                     {suggestion}\n//                                 </li>\n//                             ))}\n//                         </ul>\n//                     )}\n//                 </div>\n//             </form>\n\n//             <div className=\"confirmation-message\">\n//                 {!searchCompleted ? (\n//                     <br />\n//                 ) : (\n//                     <>\n//                         {user ? (\n//                             <p>Is this you? Please confirm.</p>\n//                         ) : (\n//                             <p>Please try again with a different email or username.</p>\n//                         )}\n//                     </>\n//                 )}\n//             </div>\n\n//             <div className=\"found-user-wrapper\">\n//                 {loading && !showContent ? (\n//                     <div className=\"loading-overlay\">\n//                         <img src='/apple-loading.gif' alt='Loading spinner' className='loading-spinner' />\n//                     </div>\n//                 ) : (\n//                     <div className={`found-user-content ${user && searchCompleted ? 'fade-in-bottom' : ''}`}>\n//                         {user ? (\n//                             <div\n//                                 className=\"user-card\"\n//                                 onClick={handleProceed}\n//                                 style={{ cursor: 'pointer' }}\n//                             >\n//                                 <div className=\"user-card-image\">\n//                                     <img src='/avater.png' alt='User avatar' className='profilePicture' />\n//                                 </div>\n//                                 <div className=\"user-card-details\">\n//                                     <h3>{user.name}</h3>\n//                                     <p>{user.username}</p>\n//                                 </div>\n//                             </div>\n//                         ) : (\n//                             <div className=\"placeholder-message\">\n//                                 <p>Find your profile using Gmail and username</p>\n//                             </div>\n//                         )}\n//                     </div>\n//                 )}\n//             </div>\n\n//             <ToastContainer />\n//         </div>\n//     );\n// }\n\n// export default FindUserForgotPassword;\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { handleSuccess, handleError, ToastContainer } from '../../utils/ReactToastify';\nimport '../../utils/ReactToastifyCustom.css';\nimport '../../utils/style/animations.css';\nimport '../../utils/style/FindUserForgotPassword.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FindUserForgotPassword() {\n  _s();\n  const [emailOrUsername, setEmailOrUsername] = useState('');\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [fadeIn, setFadeIn] = useState(true);\n  const [showContent, setShowContent] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [searchCompleted, setSearchCompleted] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (fadeIn) {\n      const timeoutId = setTimeout(() => {\n        setFadeIn(false);\n      }, 500);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [fadeIn]);\n  useEffect(() => {\n    if (loading) {\n      const timerId = setTimeout(() => {\n        setShowContent(true);\n      }, 500);\n      return () => clearTimeout(timerId);\n    } else {\n      setShowContent(true);\n    }\n  }, [loading]);\n  const handleSearch = async event => {\n    event.preventDefault();\n    setLoading(true);\n    setShowContent(false);\n    try {\n      const response = await fetch('http://localhost:8080/verification/forgot-password/find-user', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          emailOrUsername\n        })\n      });\n      const result = await response.json();\n      setTimeout(() => {\n        if (response.ok) {\n          handleSuccess(result.message);\n          setUser(result.user);\n        } else {\n          handleError(result.message);\n          setUser(null);\n        }\n        setFadeIn(true);\n        setLoading(false);\n        setSearchCompleted(true);\n      }, 500);\n    } catch (err) {\n      handleError('Network error. Please check your connection and try again.');\n      setFadeIn(true);\n      setLoading(false);\n      setSearchCompleted(true);\n    }\n  };\n  const handleInputChange = event => {\n    const value = event.target.value;\n    setEmailOrUsername(value);\n    updateSuggestions(value);\n  };\n  const updateSuggestions = value => {\n    const suggestionList = [];\n    const domains = ['gmail.com', 'yahoo.com', 'outlook.com', 'hotmail.com'];\n    if (value.includes('@')) {\n      const [, domain] = value.split('@');\n      if (domain.length > 0) {\n        domains.forEach(d => {\n          if (d.startsWith(domain)) {\n            suggestionList.push(`${value.split('@')[0]}@${d}`);\n          }\n        });\n      }\n    } else {\n      domains.forEach(d => {\n        suggestionList.push(`${value}@${d}`);\n      });\n    }\n    setSuggestions(suggestionList);\n    setShowSuggestions(suggestionList.length > 0);\n  };\n  const handleSuggestionClick = suggestion => {\n    setEmailOrUsername(suggestion);\n    setShowSuggestions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `find-user-container container ${fadeIn ? 'fade-in' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-container-position\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"icon-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/back-icon.png\",\n            alt: \"Back\",\n            className: \"back-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/app-icon.ico\",\n            alt: \"App Icon\",\n            className: \"app-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"page-title\",\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"Email or Username\",\n          value: emailOrUsername,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          className: \"search-icon-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/search.ico\",\n            alt: \"Search icon\",\n            className: \"search-icon-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }, this), showSuggestions && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestion-list\",\n          children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleSuggestionClick(suggestion),\n            children: suggestion\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-message\",\n      children: !searchCompleted ? /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: user ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Is this you? Please confirm.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please try again with a different email or username.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 29\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"found-user-wrapper\",\n      children: loading && !showContent ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/apple-loading.gif\",\n          alt: \"Loading spinner\",\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `found-user-content ${user && searchCompleted ? 'fade-in-bottom' : ''}`,\n        children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-card\",\n          style: {\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-card-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/avater.png\",\n              alt: \"User avatar\",\n              className: \"profilePicture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-card-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Find your profile using Gmail and username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 355,\n    columnNumber: 9\n  }, this);\n}\n_s(FindUserForgotPassword, \"BvzQu7hwznS+CjaXAjCiPA3YXy4=\", false, function () {\n  return [useNavigate];\n});\n_c = FindUserForgotPassword;\nexport default FindUserForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"FindUserForgotPassword\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","handleSuccess","handleError","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","FindUserForgotPassword","_s","emailOrUsername","setEmailOrUsername","user","setUser","loading","setLoading","fadeIn","setFadeIn","showContent","setShowContent","suggestions","setSuggestions","showSuggestions","setShowSuggestions","searchCompleted","setSearchCompleted","navigate","timeoutId","setTimeout","clearTimeout","timerId","handleSearch","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","ok","message","err","handleInputChange","value","target","updateSuggestions","suggestionList","domains","includes","domain","split","length","forEach","d","startsWith","push","handleSuggestionClick","suggestion","className","children","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","disabled","map","index","onClick","style","cursor","name","username","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/components/ForgotPassword/FindUserForgotPassword.jsx"],"sourcesContent":["// // FindUserForgotPassword.js\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { handleSuccess, handleError, ToastContainer } from '../../utils/ReactToastify';\r\n// import '../../utils/ReactToastifyCustom.css';\r\n// import '../../utils/style/animations.css';\r\n// import '../../utils/style/FindUserForgotPassword.css';\r\n\r\n// function FindUserForgotPassword() {\r\n//     const [emailOrUsername, setEmailOrUsername] = useState('');\r\n//     const [user, setUser] = useState(null);\r\n//     const [loading, setLoading] = useState(false);\r\n//     const [fadeIn, setFadeIn] = useState(true);\r\n//     const [showContent, setShowContent] = useState(false);\r\n//     const [suggestions, setSuggestions] = useState([]);\r\n//     const [showSuggestions, setShowSuggestions] = useState(false);\r\n//     const [searchCompleted, setSearchCompleted] = useState(false);\r\n//     const navigate = useNavigate();\r\n\r\n//     useEffect(() => {\r\n//         if (fadeIn) {\r\n//             const timeoutId = setTimeout(() => {\r\n//                 setFadeIn(false);\r\n//             }, 500);\r\n//             return () => clearTimeout(timeoutId);\r\n//         }\r\n//     }, [fadeIn]);\r\n\r\n//     useEffect(() => {\r\n//         if (loading) {\r\n//             const timerId = setTimeout(() => {\r\n//                 setShowContent(true);\r\n//             }, 500);\r\n//             return () => clearTimeout(timerId);\r\n//         } else {\r\n//             setShowContent(true);\r\n//         }\r\n//     }, [loading]);\r\n\r\n//     const handleSearch = async (event) => {\r\n//         event.preventDefault();\r\n//         setLoading(true);\r\n//         setShowContent(false);\r\n\r\n//         try {\r\n//             const response = await fetch('http://localhost:8080/verification/forgot-password/find-user', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 body: JSON.stringify({ emailOrUsername }),\r\n//             });\r\n\r\n//             const result = await response.json();\r\n\r\n//             setTimeout(() => {\r\n//                 if (response.ok) {\r\n//                     handleSuccess(result.message);\r\n//                     setUser(result.user);\r\n//                 } else {\r\n//                     handleError(result.message);\r\n//                     setUser(null);\r\n//                 }\r\n//                 setFadeIn(true);\r\n//                 setLoading(false);\r\n//                 setSearchCompleted(true);\r\n//             }, 500);\r\n//         } catch (err) {\r\n//             handleError('Network error. Please check your connection and try again.');\r\n//             setFadeIn(true);\r\n//             setLoading(false);\r\n//             setSearchCompleted(true);\r\n//         }\r\n//     };\r\n\r\n// // ... [Imports and previous code]\r\n// const handleSendOtp = async () => {\r\n//     if (!user) {\r\n//         handleError('No user found. Please perform a search first.');\r\n//         return;\r\n//     }\r\n\r\n//     try {\r\n//         const response = await fetch('http://localhost:8080/verification/forgot-password/send-otp', {\r\n//             method: 'POST',\r\n//             headers: { 'Content-Type': 'application/json' },\r\n//             body: JSON.stringify({ email: user.email }),\r\n//         });\r\n\r\n//         const result = await response.json();\r\n\r\n//         if (response.ok) {\r\n//             handleSuccess(result.message);\r\n//             navigate('/forgot-password/sent-otp', { state: { email: user.email } });\r\n//         } else {\r\n//             handleError(result.message);\r\n//         }\r\n//     } catch (err) {\r\n//         handleError('Failed to send OTP. Please try again.');\r\n//     }\r\n// };\r\n\r\n// const handleProceed = () => {\r\n//     if (user && searchCompleted) {\r\n//         handleSendOtp();\r\n//         navigate('/forgot-password/sent-otp', { state: { email: user.email } });\r\n//     } else {\r\n//         handleError('No user found. Please search for a valid user.');\r\n//     }\r\n// };\r\n\r\n\r\n    \r\n    \r\n\r\n//     const handleInputChange = (event) => {\r\n//         const value = event.target.value;\r\n//         setEmailOrUsername(value);\r\n//         updateSuggestions(value);\r\n//     };\r\n\r\n//     const updateSuggestions = (value) => {\r\n//         const suggestionList = [];\r\n//         const domains = ['gmail.com', 'yahoo.com', 'outlook.com', 'hotmail.com'];\r\n\r\n//         if (value.includes('@')) {\r\n//             const [, domain] = value.split('@');\r\n//             if (domain.length > 0) {\r\n//                 domains.forEach((d) => {\r\n//                     if (d.startsWith(domain)) {\r\n//                         suggestionList.push(`${value.split('@')[0]}@${d}`);\r\n//                     }\r\n//                 });\r\n//             }\r\n//         } else {\r\n//             domains.forEach((d) => {\r\n//                 suggestionList.push(`${value}@${d}`);\r\n//             });\r\n//         }\r\n\r\n//         setSuggestions(suggestionList);\r\n//         setShowSuggestions(suggestionList.length > 0);\r\n//     };\r\n\r\n//     const handleSuggestionClick = (suggestion) => {\r\n//         setEmailOrUsername(suggestion);\r\n//         setShowSuggestions(false);\r\n//     };\r\n\r\n//     return (\r\n//         <div className={`find-user-container container ${fadeIn ? 'fade-in' : ''}`}>\r\n//             <div className=\"header-container\">\r\n//                 <div className=\"icon-container-position\">\r\n//                     <Link to=\"/login\" className='icon-container'>\r\n//                         <img src=\"/back-icon.png\" alt=\"Back\" className=\"back-icon\" />\r\n//                     </Link>\r\n//                 </div>\r\n\r\n//                 <div className=\"center-content\">\r\n//                     <div className=\"logo-container\">\r\n//                         <img src=\"/app-icon.ico\" alt=\"App Icon\" className=\"app-icon\" />\r\n//                     </div>\r\n//                     <h1 className=\"page-title\">Forgot Password</h1>\r\n//                 </div>\r\n//             </div>\r\n\r\n//             <form onSubmit={handleSearch}>\r\n//                 <div className=\"input-container\">\r\n//                     <input\r\n//                         type=\"search\"\r\n//                         placeholder=\"Email or Username\"\r\n//                         value={emailOrUsername}\r\n//                         onChange={handleInputChange}\r\n//                         required\r\n//                     />\r\n//                     <button type=\"submit\" disabled={loading} className=\"search-icon-wrapper\">\r\n//                         <img src=\"/search.ico\" alt=\"Search icon\" className=\"search-icon-img\" />\r\n//                     </button>\r\n//                     {showSuggestions && (\r\n//                         <ul className=\"suggestion-list\">\r\n//                             {suggestions.map((suggestion, index) => (\r\n//                                 <li key={index} onClick={() => handleSuggestionClick(suggestion)}>\r\n//                                     {suggestion}\r\n//                                 </li>\r\n//                             ))}\r\n//                         </ul>\r\n//                     )}\r\n//                 </div>\r\n//             </form>\r\n\r\n//             <div className=\"confirmation-message\">\r\n//                 {!searchCompleted ? (\r\n//                     <br />\r\n//                 ) : (\r\n//                     <>\r\n//                         {user ? (\r\n//                             <p>Is this you? Please confirm.</p>\r\n//                         ) : (\r\n//                             <p>Please try again with a different email or username.</p>\r\n//                         )}\r\n//                     </>\r\n//                 )}\r\n//             </div>\r\n\r\n//             <div className=\"found-user-wrapper\">\r\n//                 {loading && !showContent ? (\r\n//                     <div className=\"loading-overlay\">\r\n//                         <img src='/apple-loading.gif' alt='Loading spinner' className='loading-spinner' />\r\n//                     </div>\r\n//                 ) : (\r\n//                     <div className={`found-user-content ${user && searchCompleted ? 'fade-in-bottom' : ''}`}>\r\n//                         {user ? (\r\n//                             <div\r\n//                                 className=\"user-card\"\r\n//                                 onClick={handleProceed}\r\n//                                 style={{ cursor: 'pointer' }}\r\n//                             >\r\n//                                 <div className=\"user-card-image\">\r\n//                                     <img src='/avater.png' alt='User avatar' className='profilePicture' />\r\n//                                 </div>\r\n//                                 <div className=\"user-card-details\">\r\n//                                     <h3>{user.name}</h3>\r\n//                                     <p>{user.username}</p>\r\n//                                 </div>\r\n//                             </div>\r\n//                         ) : (\r\n//                             <div className=\"placeholder-message\">\r\n//                                 <p>Find your profile using Gmail and username</p>\r\n//                             </div>\r\n//                         )}\r\n//                     </div>\r\n//                 )}\r\n//             </div>\r\n\r\n//             <ToastContainer />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default FindUserForgotPassword;\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { handleSuccess, handleError, ToastContainer } from '../../utils/ReactToastify';\r\nimport '../../utils/ReactToastifyCustom.css';\r\nimport '../../utils/style/animations.css';\r\nimport '../../utils/style/FindUserForgotPassword.css';\r\n\r\nfunction FindUserForgotPassword() {\r\n    const [emailOrUsername, setEmailOrUsername] = useState('');\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [fadeIn, setFadeIn] = useState(true);\r\n    const [showContent, setShowContent] = useState(false);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [showSuggestions, setShowSuggestions] = useState(false);\r\n    const [searchCompleted, setSearchCompleted] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (fadeIn) {\r\n            const timeoutId = setTimeout(() => {\r\n                setFadeIn(false);\r\n            }, 500);\r\n            return () => clearTimeout(timeoutId);\r\n        }\r\n    }, [fadeIn]);\r\n\r\n    useEffect(() => {\r\n        if (loading) {\r\n            const timerId = setTimeout(() => {\r\n                setShowContent(true);\r\n            }, 500);\r\n            return () => clearTimeout(timerId);\r\n        } else {\r\n            setShowContent(true);\r\n        }\r\n    }, [loading]);\r\n\r\n    const handleSearch = async (event) => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        setShowContent(false);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8080/verification/forgot-password/find-user', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ emailOrUsername }),\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            setTimeout(() => {\r\n                if (response.ok) {\r\n                    handleSuccess(result.message);\r\n                    setUser(result.user);\r\n                } else {\r\n                    handleError(result.message);\r\n                    setUser(null);\r\n                }\r\n                setFadeIn(true);\r\n                setLoading(false);\r\n                setSearchCompleted(true);\r\n            }, 500);\r\n        } catch (err) {\r\n            handleError('Network error. Please check your connection and try again.');\r\n            setFadeIn(true);\r\n            setLoading(false);\r\n            setSearchCompleted(true);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        const value = event.target.value;\r\n        setEmailOrUsername(value);\r\n        updateSuggestions(value);\r\n    };\r\n\r\n    const updateSuggestions = (value) => {\r\n        const suggestionList = [];\r\n        const domains = ['gmail.com', 'yahoo.com', 'outlook.com', 'hotmail.com'];\r\n\r\n        if (value.includes('@')) {\r\n            const [, domain] = value.split('@');\r\n            if (domain.length > 0) {\r\n                domains.forEach((d) => {\r\n                    if (d.startsWith(domain)) {\r\n                        suggestionList.push(`${value.split('@')[0]}@${d}`);\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            domains.forEach((d) => {\r\n                suggestionList.push(`${value}@${d}`);\r\n            });\r\n        }\r\n\r\n        setSuggestions(suggestionList);\r\n        setShowSuggestions(suggestionList.length > 0);\r\n    };\r\n\r\n    const handleSuggestionClick = (suggestion) => {\r\n        setEmailOrUsername(suggestion);\r\n        setShowSuggestions(false);\r\n    };\r\n\r\n    return (\r\n        <div className={`find-user-container container ${fadeIn ? 'fade-in' : ''}`}>\r\n            <div className=\"header-container\">\r\n                <div className=\"icon-container-position\">\r\n                    <Link to=\"/login\" className='icon-container'>\r\n                        <img src=\"/back-icon.png\" alt=\"Back\" className=\"back-icon\" />\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"center-content\">\r\n                    <div className=\"logo-container\">\r\n                        <img src=\"/app-icon.ico\" alt=\"App Icon\" className=\"app-icon\" />\r\n                    </div>\r\n                    <h1 className=\"page-title\">Forgot Password</h1>\r\n                </div>\r\n            </div>\r\n\r\n            <form onSubmit={handleSearch}>\r\n                <div className=\"input-container\">\r\n                    <input\r\n                        type=\"search\"\r\n                        placeholder=\"Email or Username\"\r\n                        value={emailOrUsername}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                    />\r\n                    <button type=\"submit\" disabled={loading} className=\"search-icon-wrapper\">\r\n                        <img src=\"/search.ico\" alt=\"Search icon\" className=\"search-icon-img\" />\r\n                    </button>\r\n                    {showSuggestions && (\r\n                        <ul className=\"suggestion-list\">\r\n                            {suggestions.map((suggestion, index) => (\r\n                                <li key={index} onClick={() => handleSuggestionClick(suggestion)}>\r\n                                    {suggestion}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            </form>\r\n\r\n            <div className=\"confirmation-message\">\r\n                {!searchCompleted ? (\r\n                    <br />\r\n                ) : (\r\n                    <>\r\n                        {user ? (\r\n                            <p>Is this you? Please confirm.</p>\r\n                        ) : (\r\n                            <p>Please try again with a different email or username.</p>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"found-user-wrapper\">\r\n                {loading && !showContent ? (\r\n                    <div className=\"loading-overlay\">\r\n                        <img src='/apple-loading.gif' alt='Loading spinner' className='loading-spinner' />\r\n                    </div>\r\n                ) : (\r\n                    <div className={`found-user-content ${user && searchCompleted ? 'fade-in-bottom' : ''}`}>\r\n                        {user ? (\r\n                            <div className=\"user-card\" style={{ cursor: 'pointer' }}>\r\n                                <div className=\"user-card-image\">\r\n                                    <img src='/avater.png' alt='User avatar' className='profilePicture' />\r\n                                </div>\r\n                                <div className=\"user-card-details\">\r\n                                    <h3>{user.name}</h3>\r\n                                    <p>{user.username}</p>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"placeholder-message\">\r\n                                <p>Find your profile using Gmail and username</p>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FindUserForgotPassword;\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,aAAa,EAAEC,W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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}