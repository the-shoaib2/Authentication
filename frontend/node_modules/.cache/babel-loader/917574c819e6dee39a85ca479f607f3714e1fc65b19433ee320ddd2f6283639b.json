{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\components\\\\SentOtpForgotPassword.js\",\n  _s = $RefreshSig$();\n// SentOtpForgotPassword.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { handleError, handleSuccess, ToastContainer } from '../utils/ReactToastify';\nimport '../utils/ReactToastifyCustom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SentOtpForgotPassword() {\n  _s();\n  const [otp, setOtp] = useState('');\n  const [timer, setTimer] = useState(30); // Timer for OTP validity\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimer(prevTimer => {\n        if (prevTimer <= 1) {\n          clearInterval(interval);\n          return 0;\n        }\n        return prevTimer - 1;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleSubmit = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8080/auth/verifyOtp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          otp\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        navigate('/resetPassword');\n      } else {\n        handleError(result.message || 'Invalid or expired OTP');\n      }\n    } catch (err) {\n      handleError('Network error. Please check your connection and try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sent-otp-forgot-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enter OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter OTP\",\n      value: otp,\n      onChange: e => setOtp(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: loading || timer === 0,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: timer > 0 ? `Time remaining: ${timer}s` : 'OTP expired'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(SentOtpForgotPassword, \"drpDK8/mQUQ8f/z4heCqPvtOzUk=\", false, function () {\n  return [useNavigate];\n});\n_c = SentOtpForgotPassword;\nexport default SentOtpForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"SentOtpForgotPassword\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","handleError","handleSuccess","ToastContainer","jsxDEV","_jsxDEV","SentOtpForgotPassword","_s","otp","setOtp","timer","setTimer","loading","setLoading","navigate","interval","setInterval","prevTimer","clearInterval","handleSubmit","response","fetch","method","headers","body","JSON","stringify","result","json","ok","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","required","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/components/SentOtpForgotPassword.js"],"sourcesContent":["// SentOtpForgotPassword.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { handleError, handleSuccess, ToastContainer } from '../utils/ReactToastify';\r\nimport '../utils/ReactToastifyCustom.css';\r\n\r\nfunction SentOtpForgotPassword() {\r\n    const [otp, setOtp] = useState('');\r\n    const [timer, setTimer] = useState(30); // Timer for OTP validity\r\n    const [loading, setLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setTimer(prevTimer => {\r\n                if (prevTimer <= 1) {\r\n                    clearInterval(interval);\r\n                    return 0;\r\n                }\r\n                return prevTimer - 1;\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    const handleSubmit = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch('http://localhost:8080/auth/verifyOtp', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ otp })\r\n            });\r\n            const result = await response.json();\r\n            if (response.ok) {\r\n                navigate('/resetPassword');\r\n            } else {\r\n                handleError(result.message || 'Invalid or expired OTP');\r\n            }\r\n        } catch (err) {\r\n            handleError('Network error. Please check your connection and try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"sent-otp-forgot-password-container\">\r\n            <h1>Enter OTP</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter OTP\"\r\n                value={otp}\r\n                onChange={(e) => setOtp(e.target.value)}\r\n                required\r\n            />\r\n            <button onClick={handleSubmit} disabled={loading || timer === 0}>Submit</button>\r\n            <p>{timer > 0 ? `Time remaining: ${timer}s` : 'OTP expired'}</p>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SentOtpForgotPassword;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,EAAEC,aAAa,EAAEC,cAAc,QAAQ,wBAAwB;AACnF,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,qBAAqBA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMgB,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,MAAMgB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BL,QAAQ,CAACM,SAAS,IAAI;QAClB,IAAIA,SAAS,IAAI,CAAC,EAAE;UAChBC,aAAa,CAACH,QAAQ,CAAC;UACvB,OAAO,CAAC;QACZ;QACA,OAAOE,SAAS,GAAG,CAAC;MACxB,CAAC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7BN,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAElB;QAAI,CAAC;MAChC,CAAC,CAAC;MACF,MAAMmB,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACpC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACbf,QAAQ,CAAC,gBAAgB,CAAC;MAC9B,CAAC,MAAM;QACHb,WAAW,CAAC0B,MAAM,CAACG,OAAO,IAAI,wBAAwB,CAAC;MAC3D;IACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACV9B,WAAW,CAAC,4DAA4D,CAAC;IAC7E,CAAC,SAAS;MACNY,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACIR,OAAA;IAAK2B,SAAS,EAAC,oCAAoC;IAAAC,QAAA,gBAC/C5B,OAAA;MAAA4B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBhC,OAAA;MACIiC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,WAAW;MACvBC,KAAK,EAAEhC,GAAI;MACXiC,QAAQ,EAAGC,CAAC,IAAKjC,MAAM,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACxCI,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFhC,OAAA;MAAQwC,OAAO,EAAE1B,YAAa;MAAC2B,QAAQ,EAAElC,OAAO,IAAIF,KAAK,KAAK,CAAE;MAAAuB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChFhC,OAAA;MAAA4B,QAAA,EAAIvB,KAAK,GAAG,CAAC,GAAG,mBAAmBA,KAAK,GAAG,GAAG;IAAa;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChEhC,OAAA,CAACF,cAAc;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEd;AAAC9B,EAAA,CAxDQD,qBAAqB;EAAA,QAITN,WAAW;AAAA;AAAA+C,EAAA,GAJvBzC,qBAAqB;AA0D9B,eAAeA,qBAAqB;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}