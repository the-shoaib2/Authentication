{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\components\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\nimport '../utils/ReactToastifyCustom.css';\nimport '../utils/loading.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPassword() {\n  _s();\n  var _location$state;\n  const [otp, setOtp] = useState('');\n  const [timer, setTimer] = useState(30);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const email = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email;\n  useEffect(() => {\n    if (timer > 0) {\n      const countdown = setTimeout(() => setTimer(timer - 1), 1000);\n      return () => clearTimeout(countdown);\n    }\n  }, [timer]);\n  const handleSendOtp = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/forgotPassword\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setTimer(30);\n        handleSuccess('OTP sent! Please check your email.');\n      } else {\n        handleError(result.message || 'Error sending OTP. Please try again.');\n      }\n    } catch (err) {\n      handleError('Network error. Please check your connection and try again.');\n    }\n  };\n  const handleVerifyOtp = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/resetPassword\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          otp,\n          newPassword: ''\n        }) // Temporarily send empty password to verify OTP\n      });\n      const result = await response.json();\n      if (response.ok) {\n        navigate('/resetPassword', {\n          state: {\n            email,\n            otp\n          }\n        });\n      } else {\n        handleError(result.message || 'Invalid or expired OTP. Please try again.');\n      }\n    } catch (err) {\n      handleError('Network error. Please check your connection and try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enter OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter the OTP sent to your email\",\n      value: otp,\n      onChange: e => setOtp(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVerifyOtp,\n      children: \"Verify OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Didn't receive the OTP? \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendOtp,\n        disabled: timer > 0,\n        children: \"Resend OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 40\n      }, this), \" (\", timer, \"s)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(ForgotPassword, \"rfHz/GOU5h2lRvcct5wHMVJRlag=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","handleSuccess","handleError","ToastContainer","jsxDEV","_jsxDEV","ForgotPassword","_s","_location$state","otp","setOtp","timer","setTimer","navigate","location","email","state","countdown","setTimeout","clearTimeout","handleSendOtp","response","fetch","method","headers","body","JSON","stringify","result","json","ok","message","err","handleVerifyOtp","newPassword","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/components/ForgotPassword.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { handleSuccess, handleError, ToastContainer } from '../utils/ReactToastify';\r\nimport '../utils/ReactToastifyCustom.css';\r\nimport '../utils/loading.css';\r\n\r\nfunction ForgotPassword() {\r\n    const [otp, setOtp] = useState('');\r\n    const [timer, setTimer] = useState(30);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const email = location.state?.email;\r\n\r\n    useEffect(() => {\r\n        if (timer > 0) {\r\n            const countdown = setTimeout(() => setTimer(timer - 1), 1000);\r\n            return () => clearTimeout(countdown);\r\n        }\r\n    }, [timer]);\r\n\r\n    const handleSendOtp = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/auth/forgotPassword\", {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ email }),\r\n            });\r\n\r\n            const result = await response.json();\r\n            if (response.ok) {\r\n                setTimer(30);\r\n                handleSuccess('OTP sent! Please check your email.');\r\n            } else {\r\n                handleError(result.message || 'Error sending OTP. Please try again.');\r\n            }\r\n        } catch (err) {\r\n            handleError('Network error. Please check your connection and try again.');\r\n        }\r\n    };\r\n\r\n    const handleVerifyOtp = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/auth/resetPassword\", {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ email, otp, newPassword: '' }), // Temporarily send empty password to verify OTP\r\n            });\r\n\r\n            const result = await response.json();\r\n            if (response.ok) {\r\n                navigate('/resetPassword', { state: { email, otp } });\r\n            } else {\r\n                handleError(result.message || 'Invalid or expired OTP. Please try again.');\r\n            }\r\n        } catch (err) {\r\n            handleError('Network error. Please check your connection and try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"forgot-password-container\">\r\n            <h1>Enter OTP</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter the OTP sent to your email\"\r\n                value={otp}\r\n                onChange={(e) => setOtp(e.target.value)}\r\n            />\r\n            <button onClick={handleVerifyOtp}>Verify OTP</button>\r\n            <p>Didn't receive the OTP? <button onClick={handleSendOtp} disabled={timer > 0}>Resend OTP</button> ({timer}s)</p>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}