{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\components\\\\SentOtpForgotPassword.js\",\n  _s = $RefreshSig$();\n// pages/SentOtpForgotPassword.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { handleError, handleSuccess, ToastContainer } from '../utils/ReactToastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SentOtpForgotPassword() {\n  _s();\n  const [otp, setOtp] = useState('');\n  const [timer, setTimer] = useState(30);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setTimer(prev => {\n        if (prev <= 1) clearInterval(intervalId);\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8080/auth/verify-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          otp\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        handleSuccess('OTP verified! Redirecting...');\n        navigate('/reset-password');\n      } else {\n        handleError(result.message || 'Invalid or expired OTP. Please try again.');\n      }\n    } catch (err) {\n      handleError('Network error. Please check your connection and try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sent-otp-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enter OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Enter the OTP sent to your email. Time remaining: \", timer, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP...\",\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: timer <= 0,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), timer <= 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"OTP expired. Please request a new one.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(SentOtpForgotPassword, \"drpDK8/mQUQ8f/z4heCqPvtOzUk=\", false, function () {\n  return [useNavigate];\n});\n_c = SentOtpForgotPassword;\nexport default SentOtpForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"SentOtpForgotPassword\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","handleError","handleSuccess","ToastContainer","jsxDEV","_jsxDEV","SentOtpForgotPassword","_s","otp","setOtp","timer","setTimer","loading","setLoading","navigate","intervalId","setInterval","prev","clearInterval","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","ok","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/components/SentOtpForgotPassword.js"],"sourcesContent":["// pages/SentOtpForgotPassword.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { handleError, handleSuccess, ToastContainer } from '../utils/ReactToastify';\r\n\r\nfunction SentOtpForgotPassword() {\r\n    const [otp, setOtp] = useState('');\r\n    const [timer, setTimer] = useState(30);\r\n    const [loading, setLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setTimer((prev) => {\r\n                if (prev <= 1) clearInterval(intervalId);\r\n                return prev - 1;\r\n            });\r\n        }, 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, []);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8080/auth/verify-otp', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ otp }),\r\n            });\r\n            const result = await response.json();\r\n            if (response.ok) {\r\n                handleSuccess('OTP verified! Redirecting...');\r\n                navigate('/reset-password');\r\n            } else {\r\n                handleError(result.message || 'Invalid or expired OTP. Please try again.');\r\n            }\r\n        } catch (err) {\r\n            handleError('Network error. Please check your connection and try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"sent-otp-container\">\r\n            <h1>Enter OTP</h1>\r\n            <p>Enter the OTP sent to your email. Time remaining: {timer}s</p>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter OTP...\"\r\n                    value={otp}\r\n                    onChange={(e) => setOtp(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\" disabled={timer <= 0}>Submit</button>\r\n                {timer <= 0 && <p>OTP expired. Please request a new one.</p>}\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SentOtpForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}