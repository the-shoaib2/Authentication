{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication - Copy\\\\frontend\\\\src\\\\components\\\\Services\\\\ChatServices\\\\ActiveUsersList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport socketService from '../../../utils/socketService'; // Import socket service\nimport { formatTime } from '../../../utils/formatTime'; // Import the formatTime function\nimport '../../../assets/style/ServicesStyle/ChatServicesStyle/ActiveUsersList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActiveUsersList = () => {\n  _s();\n  const [friends, setFriends] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchFriends = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\"http://localhost:8080/chat-services/friends\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Error fetching friends');\n      }\n      const data = await response.json();\n      setFriends(data.friends || []);\n    } catch (error) {\n      console.error(\"Error fetching friends:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchFriends();\n\n    // Listen for user status updates\n    socketService.on('user_status', data => {\n      setFriends(prevFriends => prevFriends.map(friend => friend._id === data.userId ? {\n        ...friend,\n        onlineStatus: data.status === 'online'\n      } : friend));\n    });\n\n    // Listen for friend unfriend notifications\n    socketService.onFriendUnfriended(data => {\n      setFriends(prev => prev.filter(friend => friend._id !== data.userId));\n    });\n    return () => {\n      socketService.off('user_status');\n      socketService.off('friend_unfriended');\n    };\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading friends...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"active-users-list\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: friends.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"active-user-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.profile_picture || 'default-avatar.png',\n          alt: user.first_name,\n          className: \"active-user-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"active-user-name\",\n          children: `${user.first_name} ${user.last_name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"active-status-indicator\",\n          children: user.onlineStatus ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-dot active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this) : user.lastActive ? formatTime(user.lastActive) : 'Last active'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(ActiveUsersList, \"GluWeJ1iRXfQhrdorhvHk0aSAeM=\");\n_c = ActiveUsersList;\nexport default ActiveUsersList;\nvar _c;\n$RefreshReg$(_c, \"ActiveUsersList\");","map":{"version":3,"names":["React","useEffect","useState","socketService","formatTime","jsxDEV","_jsxDEV","ActiveUsersList","_s","friends","setFriends","loading","setLoading","fetchFriends","token","localStorage","getItem","response","fetch","method","headers","Authorization","ok","Error","data","json","error","console","on","prevFriends","map","friend","_id","userId","onlineStatus","status","onFriendUnfriended","prev","filter","off","children","fileName","_jsxFileName","lineNumber","columnNumber","className","user","src","profile_picture","alt","first_name","last_name","lastActive","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication - Copy/frontend/src/components/Services/ChatServices/ActiveUsersList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport socketService from '../../../utils/socketService'; // Import socket service\r\nimport { formatTime } from '../../../utils/formatTime'; // Import the formatTime function\r\nimport '../../../assets/style/ServicesStyle/ChatServicesStyle/ActiveUsersList.css';\r\n\r\nconst ActiveUsersList = () => {\r\n    const [friends, setFriends] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const fetchFriends = async () => {\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n            const response = await fetch(\"http://localhost:8080/chat-services/friends\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Error fetching friends');\r\n            }\r\n\r\n            const data = await response.json();\r\n            setFriends(data.friends || []);\r\n        } catch (error) {\r\n            console.error(\"Error fetching friends:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchFriends();\r\n\r\n        // Listen for user status updates\r\n        socketService.on('user_status', (data) => {\r\n            setFriends(prevFriends => \r\n                prevFriends.map(friend => \r\n                    friend._id === data.userId ? { ...friend, onlineStatus: data.status === 'online' } : friend\r\n                )\r\n            );\r\n        });\r\n\r\n        // Listen for friend unfriend notifications\r\n        socketService.onFriendUnfriended((data) => {\r\n            setFriends(prev => prev.filter(friend => friend._id !== data.userId));\r\n        });\r\n\r\n        return () => {\r\n            socketService.off('user_status');\r\n            socketService.off('friend_unfriended');\r\n        };\r\n    }, []);\r\n\r\n    if (loading) return <div>Loading friends...</div>;\r\n\r\n    return (\r\n        <div className=\"active-users-list\">\r\n            <ul>\r\n                {friends.map(user => (\r\n                    <li key={user._id} className=\"active-user-item\">\r\n                        <img \r\n                            src={user.profile_picture || 'default-avatar.png'} \r\n                            alt={user.first_name} \r\n                            className=\"active-user-avatar\" \r\n                        />\r\n                        <span className=\"active-user-name\">{`${user.first_name} ${user.last_name}`}</span>\r\n                        <span className=\"active-status-indicator\">\r\n                            {user.onlineStatus ? (\r\n                                <span className=\"status-dot active\"></span>\r\n                            ) : (\r\n                                user.lastActive ? formatTime(user.lastActive) : 'Last active'\r\n                            )}\r\n                        </span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActiveUsersList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}