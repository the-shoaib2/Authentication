{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\components\\\\ForgotPassword\\\\VerificationCodeForgotPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { handleSuccess, handleError, ToastContainer } from '../../utils/ReactToastify';\nimport '../../assets/style/ReactToastifyCustom.css';\nimport '../../assets/style/SentOtpForgotPassword.css';\nimport OtpInput from '../../Services/OtpInput';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VerificationCodeForgotPassword() {\n  _s();\n  const [otp, setOtp] = useState('');\n  const [timer, setTimer] = useState(0);\n  const [isResendEnabled, setIsResendEnabled] = useState(false);\n  const [isComplete, setIsComplete] = useState(false);\n  const [hasCodeBeenSent, setHasCodeBeenSent] = useState(false);\n  const [cooldownPeriod, setCooldownPeriod] = useState(0);\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const storedCodeSentStatus = localStorage.getItem('codeSentStatus');\n    const storedTimerStart = localStorage.getItem('timerStart');\n    const storedCooldownPeriod = localStorage.getItem('cooldownPeriod');\n    if (storedCodeSentStatus && storedTimerStart) {\n      const timeElapsed = Math.floor((Date.now() - parseInt(storedTimerStart, 10)) / 1000);\n      const remainingTime = Math.max(60 - timeElapsed, 0);\n      setHasCodeBeenSent(true);\n      setTimer(remainingTime);\n      if (remainingTime > 0) {\n        startCountdown(remainingTime);\n      } else {\n        setIsResendEnabled(true);\n      }\n    }\n    return () => clearLocalStorage();\n  }, []);\n  const startCountdown = duration => {\n    const countdown = setInterval(() => {\n      setTimer(prev => {\n        if (prev <= 1) {\n          clearInterval(countdown);\n          setIsResendEnabled(true);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n  const handleSendOtp = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/verification/verification-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: state.email\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setHasCodeBeenSent(true);\n        setIsResendEnabled(false);\n        localStorage.setItem('codeSentStatus', 'true');\n        localStorage.setItem('timerStart', Date.now().toString());\n        setTimer(60);\n        startCountdown(60);\n        handleSuccess(result.message);\n      } else if (response.status === 429) {\n        setCooldownPeriod(result.cooldownPeriod);\n        startCountdown(result.cooldownPeriod);\n        handleError(result.message);\n      } else {\n        handleError(result.message);\n      }\n    } catch (err) {\n      handleError('Failed to send OTP. Please try again.');\n    }\n  };\n  const handleResendOtp = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/verification/verification-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: state.email\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setIsResendEnabled(false);\n        setTimer(60);\n        localStorage.setItem('timerStart', Date.now().toString());\n        startCountdown(60);\n        handleSuccess(result.message);\n      } else if (response.status === 429) {\n        setCooldownPeriod(result.cooldownPeriod);\n        startCountdown(result.cooldownPeriod);\n        handleError(result.message);\n      } else {\n        handleError(result.message);\n      }\n    } catch (err) {\n      handleError('Failed to resend OTP. Please try again.');\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8080/verification/verify-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: state.email,\n          otp\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        handleSuccess(result.message);\n        clearLocalStorage();\n        navigate('/forgot-password/reset-password', {\n          state: {\n            email: state.email\n          }\n        });\n      } else {\n        handleError(result.message);\n      }\n    } catch (err) {\n      handleError('Network error. Please check your connection and try again.');\n    }\n  };\n  const clearLocalStorage = () => {\n    localStorage.removeItem('codeSentStatus');\n    localStorage.removeItem('timerStart');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/app-icon.ico\",\n        alt: \"App Icon\",\n        className: \"app-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"otp-title\",\n      children: \"Verification code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-timer\",\n      children: [cooldownPeriod > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Too many attempts. Please wait for \", timer, \" seconds before trying again.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this) : hasCodeBeenSent ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"We've sent a verification code to your registered email address.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click the button to send the verification code to your email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this), (hasCodeBeenSent || cooldownPeriod > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time Remaining: \", timer, \" s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otp-buttons\",\n        children: !hasCodeBeenSent && cooldownPeriod === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"otp-btn send\",\n          onClick: handleSendOtp,\n          children: \"Send Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this) : timer === 0 && isResendEnabled ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"otp-btn resend\",\n          onClick: handleResendOtp,\n          children: \"Resend Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this) : hasCodeBeenSent && timer > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(OtpInput, {\n            length: 6,\n            onOtpSubmit: otp => setOtp(otp),\n            onOtpComplete: complete => setIsComplete(complete)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `otp-btn verify ${isComplete ? 'active' : ''}`,\n            disabled: !isComplete,\n            children: \"Verify Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n_s(VerificationCodeForgotPassword, \"zrbsNKt2plO1cD/JDdqiX+xGQxQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = VerificationCodeForgotPassword;\nexport default VerificationCodeForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"VerificationCodeForgotPassword\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","handleSuccess","handleError","ToastContainer","OtpInput","jsxDEV","_jsxDEV","Fragment","_Fragment","VerificationCodeForgotPassword","_s","otp","setOtp","timer","setTimer","isResendEnabled","setIsResendEnabled","isComplete","setIsComplete","hasCodeBeenSent","setHasCodeBeenSent","cooldownPeriod","setCooldownPeriod","state","navigate","storedCodeSentStatus","localStorage","getItem","storedTimerStart","storedCooldownPeriod","timeElapsed","Math","floor","Date","now","parseInt","remainingTime","max","startCountdown","clearLocalStorage","duration","countdown","setInterval","prev","clearInterval","handleSendOtp","response","fetch","method","headers","body","JSON","stringify","email","result","json","ok","setItem","toString","message","status","err","handleResendOtp","handleSubmit","event","preventDefault","removeItem","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onClick","length","onOtpSubmit","onOtpComplete","complete","disabled","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/components/ForgotPassword/VerificationCodeForgotPassword.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { handleSuccess, handleError, ToastContainer } from '../../utils/ReactToastify';\r\nimport '../../assets/style/ReactToastifyCustom.css';\r\nimport '../../assets/style/SentOtpForgotPassword.css';\r\nimport OtpInput from '../../Services/OtpInput';\r\n\r\nfunction VerificationCodeForgotPassword() {\r\n    const [otp, setOtp] = useState('');\r\n    const [timer, setTimer] = useState(0);\r\n    const [isResendEnabled, setIsResendEnabled] = useState(false);\r\n    const [isComplete, setIsComplete] = useState(false);\r\n    const [hasCodeBeenSent, setHasCodeBeenSent] = useState(false);\r\n    const [cooldownPeriod, setCooldownPeriod] = useState(0);\r\n    const { state } = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const storedCodeSentStatus = localStorage.getItem('codeSentStatus');\r\n        const storedTimerStart = localStorage.getItem('timerStart');\r\n        const storedCooldownPeriod = localStorage.getItem('cooldownPeriod');\r\n\r\n        if (storedCodeSentStatus && storedTimerStart) {\r\n            const timeElapsed = Math.floor((Date.now() - parseInt(storedTimerStart, 10)) / 1000);\r\n            const remainingTime = Math.max(60 - timeElapsed, 0);\r\n\r\n            setHasCodeBeenSent(true);\r\n            setTimer(remainingTime);\r\n\r\n            if (remainingTime > 0) {\r\n                startCountdown(remainingTime);\r\n            } else {\r\n                setIsResendEnabled(true);\r\n            }\r\n        }\r\n\r\n        return () => clearLocalStorage();\r\n    }, []);\r\n\r\n    const startCountdown = (duration) => {\r\n        const countdown = setInterval(() => {\r\n            setTimer((prev) => {\r\n                if (prev <= 1) {\r\n                    clearInterval(countdown);\r\n                    setIsResendEnabled(true);\r\n                    return 0;\r\n                }\r\n                return prev - 1;\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    const handleSendOtp = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8080/verification/verification-code', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email: state.email }),\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            if (response.ok) {\r\n                setHasCodeBeenSent(true);\r\n                setIsResendEnabled(false);\r\n                localStorage.setItem('codeSentStatus', 'true');\r\n                localStorage.setItem('timerStart', Date.now().toString());\r\n                setTimer(60);\r\n                startCountdown(60);\r\n                handleSuccess(result.message);\r\n            } else if (response.status === 429) {\r\n                setCooldownPeriod(result.cooldownPeriod);\r\n                startCountdown(result.cooldownPeriod);\r\n                handleError(result.message);\r\n            } else {\r\n                handleError(result.message);\r\n            }\r\n        } catch (err) {\r\n            handleError('Failed to send OTP. Please try again.');\r\n        }\r\n    };\r\n\r\n    const handleResendOtp = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8080/verification/verification-code', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email: state.email }),\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            if (response.ok) {\r\n                setIsResendEnabled(false);\r\n                setTimer(60);\r\n                localStorage.setItem('timerStart', Date.now().toString());\r\n                startCountdown(60);\r\n                handleSuccess(result.message);\r\n            } else if (response.status === 429) {\r\n                setCooldownPeriod(result.cooldownPeriod);\r\n                startCountdown(result.cooldownPeriod);\r\n                handleError(result.message);\r\n            } else {\r\n                handleError(result.message);\r\n            }\r\n        } catch (err) {\r\n            handleError('Failed to resend OTP. Please try again.');\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await fetch('http://localhost:8080/verification/verify-code', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email: state.email, otp }),\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            if (response.ok) {\r\n                handleSuccess(result.message);\r\n                clearLocalStorage();\r\n                navigate('/forgot-password/reset-password', { state: { email: state.email } });\r\n            } else {\r\n                handleError(result.message);\r\n            }\r\n        } catch (err) {\r\n            handleError('Network error. Please check your connection and try again.');\r\n        }\r\n    };\r\n\r\n    const clearLocalStorage = () => {\r\n        localStorage.removeItem('codeSentStatus');\r\n        localStorage.removeItem('timerStart');\r\n    };\r\n\r\n    return (\r\n        <div className=\"otp-wrapper\">\r\n            <div>\r\n                <img src='/images/app-icon.ico' alt='App Icon' className='app-icon' />\r\n            </div>\r\n            <h1 className=\"otp-title\">Verification code</h1>\r\n            <div className=\"otp-timer\">\r\n                {cooldownPeriod > 0 ? (\r\n                    <p>Too many attempts. Please wait for {timer} seconds before trying again.</p>\r\n                ) : hasCodeBeenSent ? (\r\n                    <p>We've sent a verification code to your registered email address.</p>\r\n                ) : (\r\n                    <p>Click the button to send the verification code to your email.</p>\r\n                )}\r\n                {(hasCodeBeenSent || cooldownPeriod > 0) && (\r\n                    <div className=\"timer\">\r\n                        <p>Time Remaining: {timer} s</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"otp-buttons\">\r\n                    {!hasCodeBeenSent && cooldownPeriod === 0 ? (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"otp-btn send\"\r\n                            onClick={handleSendOtp}\r\n                        >\r\n                            Send Code\r\n                        </button>\r\n                    ) : timer === 0 && isResendEnabled ? (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"otp-btn resend\"\r\n                            onClick={handleResendOtp}\r\n                        >\r\n                            Resend Code\r\n                        </button>\r\n                    ) : hasCodeBeenSent && timer > 0 ? (\r\n                        <>\r\n                            <OtpInput\r\n                                length={6}\r\n                                onOtpSubmit={(otp) => setOtp(otp)}\r\n                                onOtpComplete={(complete) => setIsComplete(complete)}\r\n                            />\r\n                            <button\r\n                                type=\"submit\"\r\n                                className={`otp-btn verify ${isComplete ? 'active' : ''}`}\r\n                                disabled={!isComplete}\r\n                            >\r\n                                Verify Code\r\n                            </button>\r\n                        </>\r\n                    ) : null}\r\n                </div>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VerificationCodeForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}