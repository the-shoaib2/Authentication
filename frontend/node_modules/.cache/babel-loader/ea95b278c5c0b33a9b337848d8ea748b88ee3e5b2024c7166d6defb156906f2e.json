{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import { handleError } from '../utils/ReactToastify';\n// import { ToastContainer } from 'react-toastify';\n// import '../utils/ReactToastifyCustom.css';\n// import '../utils/style/home.css';\n// import '../utils/loading.css';\n\n// function Home() {\n//     const [loggedInUser, setLoggedInUser] = useState({});\n//     const [loading, setLoading] = useState(true);\n//     const [fadeIn, setFadeIn] = useState(true);\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         fetchLoggedInUser();\n\n//         const timeoutId = setTimeout(() => {\n//             setFadeIn(false);\n//         }, 500);\n\n//         return () => clearTimeout(timeoutId);\n//     }, []);\n\n//     const fetchLoggedInUser = async () => {\n//         setLoading(true);\n//         try {\n//             const url = \"http://localhost:8080/Users/me\";\n//             const headers = {\n//                 headers: {\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`\n//                 }\n//             };\n//             const response = await fetch(url, headers);\n//             const result = await response.json();\n//             if (response.ok) {\n//                 setLoggedInUser(result);\n//             } else {\n//                 handleError(result.message || 'Failed to fetch user data. Please try again.');\n//                 navigate('/login');\n//             }\n//         } catch (err) {\n//             handleError('Network error. Please check your connection and try again.');\n//             navigate('/login');\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     if (loading) {\n//         return (\n//             <div className=\"loading-overlay\">\n//                 <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\n//             </div>\n//         );\n//     }\n\n//     if (!loggedInUser.isActive) {\n//         return (\n//             <div className={`home-container container ${fadeIn ? 'fade-in' : ''}`}>\n//                 <div className=\"inactive-account-message-container\">\n//                     <h1>Your account is not confirmed yet.</h1>\n//                     <p>Please check your email to confirm your account.</p>\n//                     <Link to=\"/verify-email\" className=\"confirm-account-link\">\n//                         <button className=\"confirm-account-button\">\n//                             Activate Account\n//                         </button>\n//                     </Link>\n//                 </div>\n//                 <ToastContainer />\n//             </div>\n//         );\n//     }\n\n//     return (\n//         <div className={`home-container container ${fadeIn ? 'fade-in' : ''}`}>\n//             <div className=\"user-image-icon-container\">\n//                 <Link to=\"/user-profile\" className='pages-link'>\n//                     <div className=\"user-icon-image\">\n//                         <img src='/avater.png' className='profilePicture' alt='Profile' />\n//                     </div>\n//                 </Link>\n//                 <h1 className=\"user-name\">{loggedInUser.name}</h1>\n//             </div>\n//             {/* Render additional content for confirmed users */}\n//             <ToastContainer />\n//         </div>\n//     );\n// }\n\n// export default Home;","map":{"version":3,"names":[],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/pages/Home.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate, Link } from 'react-router-dom';\r\n// import { handleError } from '../utils/ReactToastify';\r\n// import { ToastContainer } from 'react-toastify';\r\n// import '../utils/ReactToastifyCustom.css';\r\n// import '../utils/style/home.css';\r\n// import '../utils/loading.css';\r\n\r\n// function Home() {\r\n//     const [loggedInUser, setLoggedInUser] = useState({});\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [fadeIn, setFadeIn] = useState(true);\r\n//     const navigate = useNavigate();\r\n\r\n//     useEffect(() => {\r\n//         fetchLoggedInUser();\r\n\r\n//         const timeoutId = setTimeout(() => {\r\n//             setFadeIn(false);\r\n//         }, 500);\r\n\r\n//         return () => clearTimeout(timeoutId);\r\n//     }, []);\r\n\r\n//     const fetchLoggedInUser = async () => {\r\n//         setLoading(true);\r\n//         try {\r\n//             const url = \"http://localhost:8080/Users/me\";\r\n//             const headers = {\r\n//                 headers: {\r\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n//                 }\r\n//             };\r\n//             const response = await fetch(url, headers);\r\n//             const result = await response.json();\r\n//             if (response.ok) {\r\n//                 setLoggedInUser(result);\r\n//             } else {\r\n//                 handleError(result.message || 'Failed to fetch user data. Please try again.');\r\n//                 navigate('/login');\r\n//             }\r\n//         } catch (err) {\r\n//             handleError('Network error. Please check your connection and try again.');\r\n//             navigate('/login');\r\n//         } finally {\r\n//             setLoading(false);\r\n//         }\r\n//     };\r\n\r\n//     if (loading) {\r\n//         return (\r\n//             <div className=\"loading-overlay\">\r\n//                 <img src='/apple-loading.gif' alt='Loading...' className='loading-spinner' />\r\n//             </div>\r\n//         );\r\n//     }\r\n\r\n//     if (!loggedInUser.isActive) {\r\n//         return (\r\n//             <div className={`home-container container ${fadeIn ? 'fade-in' : ''}`}>\r\n//                 <div className=\"inactive-account-message-container\">\r\n//                     <h1>Your account is not confirmed yet.</h1>\r\n//                     <p>Please check your email to confirm your account.</p>\r\n//                     <Link to=\"/verify-email\" className=\"confirm-account-link\">\r\n//                         <button className=\"confirm-account-button\">\r\n//                             Activate Account\r\n//                         </button>\r\n//                     </Link>\r\n//                 </div>\r\n//                 <ToastContainer />\r\n//             </div>\r\n//         );\r\n//     }\r\n\r\n//     return (\r\n//         <div className={`home-container container ${fadeIn ? 'fade-in' : ''}`}>\r\n//             <div className=\"user-image-icon-container\">\r\n//                 <Link to=\"/user-profile\" className='pages-link'>\r\n//                     <div className=\"user-icon-image\">\r\n//                         <img src='/avater.png' className='profilePicture' alt='Profile' />\r\n//                     </div>\r\n//                 </Link>\r\n//                 <h1 className=\"user-name\">{loggedInUser.name}</h1>\r\n//             </div>\r\n//             {/* Render additional content for confirmed users */}\r\n//             <ToastContainer />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Home;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}