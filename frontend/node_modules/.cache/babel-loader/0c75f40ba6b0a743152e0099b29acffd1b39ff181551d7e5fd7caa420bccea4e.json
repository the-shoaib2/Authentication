{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { handleError, handleSuccess } from \"../utils/ReactToastify\";\n// import { ToastContainer } from \"react-toastify\";\n// import \"../utils/ReactToastifyCustom.css\";\n// import \"../utils/style/profile.css\";\n\n// function UserProfile() {\n//   const [user, setUser] = useState({});\n//   const [loading, setLoading] = useState(true);\n//   const [showLogoutModal, setShowLogoutModal] = useState(false);\n//   const [darkMode, setDarkMode] = useState(false);\n//   const [rotate, setRotate] = useState(false);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     fetchUserProfile();\n//   }, []);\n\n//   const fetchUserProfile = async () => {\n//     setLoading(true);\n//     try {\n//       const response = await fetch(\"http://localhost:8080/Users/me\", {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n//         },\n//       });\n//       const result = await response.json();\n//       if (response.ok) {\n//         setUser(result);\n//       } else {\n//         handleError(result.message || \"Failed to fetch user data. Please try again.\");\n//         navigate(\"/login\");\n//       }\n//     } catch (err) {\n//       handleError(\"Network error. Please check your connection and try again.\");\n//       navigate(\"/login\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleLogout = async () => {\n//     try {\n//       const response = await fetch(\"http://localhost:8080/auth/logout\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n//         },\n//         body: JSON.stringify({\n//           refreshToken: localStorage.getItem(\"refreshToken\"),\n//         }),\n//       });\n//       if (response.ok) {\n//         localStorage.removeItem(\"token\");\n//         localStorage.removeItem(\"refreshToken\");\n//         localStorage.removeItem(\"loggedInUser\");\n//         handleSuccess(\"Logged out successfully!\");\n//         setTimeout(() => navigate(\"/login\"), 500);\n//       } else {\n//         handleError(\"Failed to log out. Please try again.\");\n//       }\n//     } catch (err) {\n//       handleError(\"Network error. Please check your connection and try again.\");\n//     }\n//   };\n\n//   const openLogoutModal = () => {\n//     setShowLogoutModal(true);\n//   };\n\n//   const closeLogoutModal = () => {\n//     setShowLogoutModal(false);\n//   };\n\n//   const toggleDarkMode = () => {\n//     setDarkMode(!darkMode);\n//     setRotate(true);\n//     setTimeout(() => setRotate(false), 500); // Adjust timing as needed\n//   };\n\n//   const rotateClass = rotate ? (darkMode ? \"rotate-right\" : \"rotate-left\") : \"\";\n\n//   const fullName = `${user.first_name || ''} ${user.last_name || ''}`;\n\n//   return (\n//     <div className={`profile-container ${darkMode ? \"dark-mode\" : \"\"}`}>\n//       {loading ? (\n//         <div className=\"loading-overlay\">\n//           <img\n//             src=\"/apple-loading.gif\"\n//             alt=\"Loading...\"\n//             className=\"loading-spinner\"\n//           />\n//         </div>\n//       ) : (\n//         <>\n//           <button\n//             className=\"back-button icon-button\"\n//             onClick={() => navigate(-1)}\n//           >\n//             <img src=\"/back-icon.png\" alt=\"Back\" />\n//           </button>\n//           <button\n//             className=\"edit-button icon-button\"\n//             onClick={() => navigate(\"/edit-profile\")}\n//           >\n//             <img src=\"/edit-icon.png\" alt=\"Edit\" />\n//           </button>\n//           <div className=\"user-info\">\n//             <div className=\"avatar\">\n//             <img src='/avater.png' className='profile-picture' alt='Profile' />\n//               {/* <img\n//                 src={user.profile_picture || \"/avatar.png\"}\n//                 className=\"profile-picture\"\n//                 alt=\"Profile\"\n//               /> */}\n//             </div>\n//             <h1 className=\"user-name\">{fullName}</h1>\n//           </div>\n\n//           {/* User Information */}\n//           <div className=\"details-container\">\n//             <p>User Information</p>\n//             <ul className=\"user-details\">\n//               <li data-label=\"Name:\">{fullName}</li>\n//               <li data-label=\"Email:\">{user.email}</li>\n//               <li data-label=\"Username:\">{user.username}</li>\n//               <li data-label=\"Joined:\">\n//                 {new Date(user.createdAt).toLocaleDateString()}\n//               </li>\n//             </ul>\n//           </div>\n\n//           {/* Account Settings */}\n//           <div className=\"details-container\">\n//             <p>Account Settings</p>\n//             <ul className=\"user-details\">\n//               <li>Change Password</li>\n//               <li>Update Email</li>\n//               <li>Manage Two-Factor Authentication</li>\n//             </ul>\n//           </div>\n\n//           {/* Notifications */}\n//           <div className=\"details-container\">\n//             <p>Notifications</p>\n//             <ul className=\"user-details\">\n//               <li>Email Notifications</li>\n//               <li>Push Notifications</li>\n//               <li>SMS Notifications</li>\n//             </ul>\n//           </div>\n\n//           {/* Privacy */}\n//           <div className=\"details-container\">\n//             <p>Privacy</p>\n//             <ul className=\"user-details\">\n//               <li>Manage Blocked Users</li>\n//               <li>Privacy Settings</li>\n//               <li>Data Sharing Preferences</li>\n//             </ul>\n//           </div>\n\n//           {/* Data & Storage */}\n//           <div className=\"details-container\">\n//             <p>Data & Storage</p>\n//             <ul className=\"user-details\">\n//               <li>Data Usage</li>\n//               <li>Storage Space</li>\n//               <li>Download Your Data</li>\n//             </ul>\n//           </div>\n\n//           <div className=\"details-container\">\n//             <p>Appearance</p>\n//             <ul className=\"user-details\">\n//               <li>\n//                 Theme:\n//                 <button\n//                   className={`theme-icon-action-button ${rotateClass}`}\n//                   onClick={toggleDarkMode}\n//                 >\n//                   <img\n//                     src={darkMode ? \"/moon.ico\" : \"/sun.ico\"}\n//                     alt=\"Theme Icon\"\n//                     className=\"theme-icon\"\n//                   />\n//                 </button>\n//               </li>\n//             </ul>\n//           </div>\n//         </>\n//       )}\n//       <div className=\"actions\">\n//         <button className=\"action-button\" onClick={openLogoutModal}>\n//           Logout\n//         </button>\n//       </div>\n//       {showLogoutModal && (\n//         <div className=\"logout-modal\">\n//           <div className=\"logout-modal-content\">\n//             <p>Are you sure you want to logout?</p>\n//             <div className=\"modal-actions\">\n//               <button\n//                 className=\"modal-cancel-button\"\n//                 onClick={closeLogoutModal}\n//               >\n//                 Cancel\n//               </button>\n//               <button className=\"modal-logout-button\" onClick={handleLogout}>\n//                 Logout\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//       <ToastContainer />\n//     </div>\n//   );\n// }\n\n// export default UserProfile;","map":{"version":3,"names":[],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/pages/UserProfile.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { handleError, handleSuccess } from \"../utils/ReactToastify\";\r\n// import { ToastContainer } from \"react-toastify\";\r\n// import \"../utils/ReactToastifyCustom.css\";\r\n// import \"../utils/style/profile.css\";\r\n\r\n// function UserProfile() {\r\n//   const [user, setUser] = useState({});\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [showLogoutModal, setShowLogoutModal] = useState(false);\r\n//   const [darkMode, setDarkMode] = useState(false);\r\n//   const [rotate, setRotate] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     fetchUserProfile();\r\n//   }, []);\r\n\r\n//   const fetchUserProfile = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8080/Users/me\", {\r\n//         headers: {\r\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n//         },\r\n//       });\r\n//       const result = await response.json();\r\n//       if (response.ok) {\r\n//         setUser(result);\r\n//       } else {\r\n//         handleError(result.message || \"Failed to fetch user data. Please try again.\");\r\n//         navigate(\"/login\");\r\n//       }\r\n//     } catch (err) {\r\n//       handleError(\"Network error. Please check your connection and try again.\");\r\n//       navigate(\"/login\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleLogout = async () => {\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8080/auth/logout\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n//         },\r\n//         body: JSON.stringify({\r\n//           refreshToken: localStorage.getItem(\"refreshToken\"),\r\n//         }),\r\n//       });\r\n//       if (response.ok) {\r\n//         localStorage.removeItem(\"token\");\r\n//         localStorage.removeItem(\"refreshToken\");\r\n//         localStorage.removeItem(\"loggedInUser\");\r\n//         handleSuccess(\"Logged out successfully!\");\r\n//         setTimeout(() => navigate(\"/login\"), 500);\r\n//       } else {\r\n//         handleError(\"Failed to log out. Please try again.\");\r\n//       }\r\n//     } catch (err) {\r\n//       handleError(\"Network error. Please check your connection and try again.\");\r\n//     }\r\n//   };\r\n\r\n//   const openLogoutModal = () => {\r\n//     setShowLogoutModal(true);\r\n//   };\r\n\r\n//   const closeLogoutModal = () => {\r\n//     setShowLogoutModal(false);\r\n//   };\r\n\r\n//   const toggleDarkMode = () => {\r\n//     setDarkMode(!darkMode);\r\n//     setRotate(true);\r\n//     setTimeout(() => setRotate(false), 500); // Adjust timing as needed\r\n//   };\r\n\r\n//   const rotateClass = rotate ? (darkMode ? \"rotate-right\" : \"rotate-left\") : \"\";\r\n\r\n//   const fullName = `${user.first_name || ''} ${user.last_name || ''}`;\r\n\r\n//   return (\r\n//     <div className={`profile-container ${darkMode ? \"dark-mode\" : \"\"}`}>\r\n//       {loading ? (\r\n//         <div className=\"loading-overlay\">\r\n//           <img\r\n//             src=\"/apple-loading.gif\"\r\n//             alt=\"Loading...\"\r\n//             className=\"loading-spinner\"\r\n//           />\r\n//         </div>\r\n//       ) : (\r\n//         <>\r\n//           <button\r\n//             className=\"back-button icon-button\"\r\n//             onClick={() => navigate(-1)}\r\n//           >\r\n//             <img src=\"/back-icon.png\" alt=\"Back\" />\r\n//           </button>\r\n//           <button\r\n//             className=\"edit-button icon-button\"\r\n//             onClick={() => navigate(\"/edit-profile\")}\r\n//           >\r\n//             <img src=\"/edit-icon.png\" alt=\"Edit\" />\r\n//           </button>\r\n//           <div className=\"user-info\">\r\n//             <div className=\"avatar\">\r\n//             <img src='/avater.png' className='profile-picture' alt='Profile' />\r\n//               {/* <img\r\n//                 src={user.profile_picture || \"/avatar.png\"}\r\n//                 className=\"profile-picture\"\r\n//                 alt=\"Profile\"\r\n//               /> */}\r\n//             </div>\r\n//             <h1 className=\"user-name\">{fullName}</h1>\r\n//           </div>\r\n\r\n//           {/* User Information */}\r\n//           <div className=\"details-container\">\r\n//             <p>User Information</p>\r\n//             <ul className=\"user-details\">\r\n//               <li data-label=\"Name:\">{fullName}</li>\r\n//               <li data-label=\"Email:\">{user.email}</li>\r\n//               <li data-label=\"Username:\">{user.username}</li>\r\n//               <li data-label=\"Joined:\">\r\n//                 {new Date(user.createdAt).toLocaleDateString()}\r\n//               </li>\r\n//             </ul>\r\n//           </div>\r\n\r\n//           {/* Account Settings */}\r\n//           <div className=\"details-container\">\r\n//             <p>Account Settings</p>\r\n//             <ul className=\"user-details\">\r\n//               <li>Change Password</li>\r\n//               <li>Update Email</li>\r\n//               <li>Manage Two-Factor Authentication</li>\r\n//             </ul>\r\n//           </div>\r\n\r\n//           {/* Notifications */}\r\n//           <div className=\"details-container\">\r\n//             <p>Notifications</p>\r\n//             <ul className=\"user-details\">\r\n//               <li>Email Notifications</li>\r\n//               <li>Push Notifications</li>\r\n//               <li>SMS Notifications</li>\r\n//             </ul>\r\n//           </div>\r\n\r\n//           {/* Privacy */}\r\n//           <div className=\"details-container\">\r\n//             <p>Privacy</p>\r\n//             <ul className=\"user-details\">\r\n//               <li>Manage Blocked Users</li>\r\n//               <li>Privacy Settings</li>\r\n//               <li>Data Sharing Preferences</li>\r\n//             </ul>\r\n//           </div>\r\n\r\n//           {/* Data & Storage */}\r\n//           <div className=\"details-container\">\r\n//             <p>Data & Storage</p>\r\n//             <ul className=\"user-details\">\r\n//               <li>Data Usage</li>\r\n//               <li>Storage Space</li>\r\n//               <li>Download Your Data</li>\r\n//             </ul>\r\n//           </div>\r\n\r\n//           <div className=\"details-container\">\r\n//             <p>Appearance</p>\r\n//             <ul className=\"user-details\">\r\n//               <li>\r\n//                 Theme:\r\n//                 <button\r\n//                   className={`theme-icon-action-button ${rotateClass}`}\r\n//                   onClick={toggleDarkMode}\r\n//                 >\r\n//                   <img\r\n//                     src={darkMode ? \"/moon.ico\" : \"/sun.ico\"}\r\n//                     alt=\"Theme Icon\"\r\n//                     className=\"theme-icon\"\r\n//                   />\r\n//                 </button>\r\n//               </li>\r\n//             </ul>\r\n//           </div>\r\n//         </>\r\n//       )}\r\n//       <div className=\"actions\">\r\n//         <button className=\"action-button\" onClick={openLogoutModal}>\r\n//           Logout\r\n//         </button>\r\n//       </div>\r\n//       {showLogoutModal && (\r\n//         <div className=\"logout-modal\">\r\n//           <div className=\"logout-modal-content\">\r\n//             <p>Are you sure you want to logout?</p>\r\n//             <div className=\"modal-actions\">\r\n//               <button\r\n//                 className=\"modal-cancel-button\"\r\n//                 onClick={closeLogoutModal}\r\n//               >\r\n//                 Cancel\r\n//               </button>\r\n//               <button className=\"modal-logout-button\" onClick={handleLogout}>\r\n//                 Logout\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//       <ToastContainer />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default UserProfile;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}