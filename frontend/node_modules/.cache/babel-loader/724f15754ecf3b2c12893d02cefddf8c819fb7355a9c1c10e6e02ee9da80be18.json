{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\components\\\\Services\\\\ChatServices\\\\ChatServices.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport \"../../../assets/style/ServicesStyle/ChatServicesStyle/ChatService.css\";\nimport SelectedUserMessages from './SelectedUserMessages';\nimport MessageInput from \"./MessageInput\";\nimport ChatList from './ChatList';\nimport socketService from '../../../utils/socketService';\nimport WelcomeContainer from './WelcomeContainer';\nimport ChatHeader from './ChatHeader';\nimport ChatNavbar from './ChatNavbar';\nimport ActiveUsersList from './ActiveUsersList';\nimport FriendsList from './Friends/FriendsList';\nimport AddFriend from './Friends/AddFriend';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatService = ({\n  onClose\n}) => {\n  _s();\n  // Load initial state from localStorage\n  const [selectedUser, setSelectedUser] = useState(() => {\n    const savedUser = localStorage.getItem('selectedUser');\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n  const [messages, setMessages] = useState(() => {\n    const savedMessages = localStorage.getItem('messages');\n    return savedMessages ? JSON.parse(savedMessages) : {};\n  });\n  const messagesEndRef = useRef(null);\n  const [reactions, setReactions] = useState({});\n  const [openReactionMenuId, setOpenReactionMenuId] = useState(null);\n  const [activeTab, setActiveTab] = useState('chatlist');\n\n  // Save state to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('selectedUser', JSON.stringify(selectedUser));\n  }, [selectedUser]);\n  useEffect(() => {\n    localStorage.setItem('messages', JSON.stringify(messages));\n  }, [messages]);\n  const updateMessageStatus = useCallback((messageObj, newStatus) => {\n    if (selectedUser) {\n      setMessages(prevMessages => ({\n        ...prevMessages,\n        [selectedUser.id]: prevMessages[selectedUser.id].map(msg => msg === messageObj ? {\n          ...msg,\n          status: newStatus\n        } : msg)\n      }));\n    }\n  }, [selectedUser]);\n  const handleSendMessage = useCallback(newMessage => {\n    if (newMessage.trim() && selectedUser) {\n      const newMessageObj = {\n        text: newMessage,\n        sender: \"user\",\n        timestamp: new Date(),\n        status: \"sent\",\n        type: \"text\",\n        id: Date.now()\n      };\n      setMessages(prevMessages => ({\n        ...prevMessages,\n        [selectedUser.id]: [...(prevMessages[selectedUser.id] || []), newMessageObj]\n      }));\n\n      // Simulate message status changes\n      setTimeout(() => updateMessageStatus(newMessageObj, \"delivered\"), 1000);\n      setTimeout(() => updateMessageStatus(newMessageObj, \"seen\"), 2000);\n    }\n  }, [selectedUser, updateMessageStatus]);\n  const handleSendFile = useCallback(file => {\n    if (file && selectedUser) {\n      const newMessageObj = {\n        file: file,\n        sender: \"user\",\n        timestamp: new Date(),\n        status: \"sent\",\n        type: file.type.startsWith(\"image/\") ? \"image\" : \"file\",\n        id: Date.now()\n      };\n      setMessages(prevMessages => ({\n        ...prevMessages,\n        [selectedUser.id]: [...(prevMessages[selectedUser.id] || []), newMessageObj]\n      }));\n\n      // Simulate message status changes\n      setTimeout(() => updateMessageStatus(newMessageObj, \"delivered\"), 1000);\n      setTimeout(() => updateMessageStatus(newMessageObj, \"seen\"), 2000);\n    }\n  }, [selectedUser, updateMessageStatus]);\n  const handleUserSelect = useCallback(user => {\n    setSelectedUser(user);\n    setMessages(prevMessages => {\n      if (!prevMessages[user.id]) {\n        return {\n          ...prevMessages,\n          [user.id]: [{\n            text: `Hii.`,\n            sender: \"other\",\n            timestamp: new Date(Date.now() - 1000000),\n            status: \"seen\",\n            type: \"text\",\n            id: Date.now()\n          }]\n        };\n      }\n      return prevMessages;\n    });\n  }, []);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, selectedUser]);\n\n  // ... existing code ...\n  const formattedTime = date => {\n    const validDate = new Date(date); // Ensure date is a Date object\n    if (!isNaN(validDate)) {\n      return validDate.toLocaleTimeString();\n    }\n    return \"Invalid Date\";\n  };\n  // ... existing code ...\n\n  const handleReaction = useCallback((messageId, reaction) => {\n    setReactions(prevReactions => ({\n      ...prevReactions,\n      [messageId]: reaction === prevReactions[messageId] ? null : reaction\n    }));\n    setOpenReactionMenuId(null);\n  }, []);\n  const toggleReactionMenu = useCallback(messageId => {\n    setOpenReactionMenuId(prevId => prevId === messageId ? null : messageId);\n  }, []);\n  useEffect(() => {\n    socketService.on('connect', () => {\n      console.log('Connected to Socket.IO server');\n    });\n    socketService.on('disconnect', () => {\n      console.log('Disconnected from Socket.IO server');\n    });\n    return () => {\n      socketService.off('connect');\n      socketService.off('disconnect');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container-main-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header-top-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"user-search-bar\",\n          placeholder: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatNavbar, {\n        activeTab: activeTab,\n        setActiveTab: setActiveTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), activeTab === 'chatlist' && /*#__PURE__*/_jsxDEV(ChatList, {\n        selectedUser: selectedUser,\n        handleUserSelect: handleUserSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), activeTab === 'activeusers' && /*#__PURE__*/_jsxDEV(ActiveUsersList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 41\n      }, this), activeTab === 'friends' && /*#__PURE__*/_jsxDEV(FriendsList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 37\n      }, this), activeTab === 'addfriends' && /*#__PURE__*/_jsxDEV(AddFriend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 40\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-main\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n          selectedUser: selectedUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectedUserMessages, {\n          selectedUser: selectedUser,\n          messages: messages,\n          formatTime: formatTime,\n          reactions: reactions,\n          openReactionMenuId: openReactionMenuId,\n          handleReaction: handleReaction,\n          toggleReactionMenu: toggleReactionMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input-container\",\n          children: /*#__PURE__*/_jsxDEV(MessageInput, {\n            onSendMessage: handleSendMessage,\n            onSendFile: handleSendFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(WelcomeContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatService, \"s03X89/wXMDcjJ456TIKVdN3tXQ=\");\n_c = ChatService;\nexport default ChatService;\nvar _c;\n$RefreshReg$(_c, \"ChatService\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","SelectedUserMessages","MessageInput","ChatList","socketService","WelcomeContainer","ChatHeader","ChatNavbar","ActiveUsersList","FriendsList","AddFriend","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatService","onClose","_s","selectedUser","setSelectedUser","savedUser","localStorage","getItem","JSON","parse","messages","setMessages","savedMessages","messagesEndRef","reactions","setReactions","openReactionMenuId","setOpenReactionMenuId","activeTab","setActiveTab","setItem","stringify","updateMessageStatus","messageObj","newStatus","prevMessages","id","map","msg","status","handleSendMessage","newMessage","trim","newMessageObj","text","sender","timestamp","Date","type","now","setTimeout","handleSendFile","file","startsWith","handleUserSelect","user","_messagesEndRef$curre","current","scrollIntoView","behavior","formattedTime","date","validDate","isNaN","toLocaleTimeString","handleReaction","messageId","reaction","prevReactions","toggleReactionMenu","prevId","on","console","log","off","className","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","formatTime","onSendMessage","onSendFile","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/components/Services/ChatServices/ChatServices.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport \"../../../assets/style/ServicesStyle/ChatServicesStyle/ChatService.css\";\r\nimport SelectedUserMessages from './SelectedUserMessages';\r\nimport MessageInput from \"./MessageInput\";\r\nimport ChatList from './ChatList';\r\nimport socketService from '../../../utils/socketService';\r\nimport WelcomeContainer from './WelcomeContainer';\r\nimport ChatHeader from './ChatHeader';\r\nimport ChatNavbar from './ChatNavbar';\r\nimport ActiveUsersList from './ActiveUsersList';\r\nimport FriendsList from './Friends/FriendsList';\r\nimport AddFriend from './Friends/AddFriend';\r\n\r\nconst ChatService = ({ onClose }) => {\r\n  // Load initial state from localStorage\r\n  const [selectedUser, setSelectedUser] = useState(() => {\r\n    const savedUser = localStorage.getItem('selectedUser');\r\n    return savedUser ? JSON.parse(savedUser) : null;\r\n  });\r\n\r\n  const [messages, setMessages] = useState(() => {\r\n    const savedMessages = localStorage.getItem('messages');\r\n    return savedMessages ? JSON.parse(savedMessages) : {};\r\n  });\r\n\r\n  const messagesEndRef = useRef(null);\r\n  const [reactions, setReactions] = useState({});\r\n  const [openReactionMenuId, setOpenReactionMenuId] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('chatlist');\r\n\r\n  // Save state to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedUser', JSON.stringify(selectedUser));\r\n  }, [selectedUser]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('messages', JSON.stringify(messages));\r\n  }, [messages]);\r\n\r\n  const updateMessageStatus = useCallback(\r\n    (messageObj, newStatus) => {\r\n      if (selectedUser) {\r\n        setMessages((prevMessages) => ({\r\n          ...prevMessages,\r\n          [selectedUser.id]: prevMessages[selectedUser.id].map((msg) =>\r\n            msg === messageObj ? { ...msg, status: newStatus } : msg\r\n          ),\r\n        }));\r\n      }\r\n    },\r\n    [selectedUser]\r\n  );\r\n\r\n  const handleSendMessage = useCallback(\r\n    (newMessage) => {\r\n      if (newMessage.trim() && selectedUser) {\r\n        const newMessageObj = {\r\n          text: newMessage,\r\n          sender: \"user\",\r\n          timestamp: new Date(),\r\n          status: \"sent\",\r\n          type: \"text\",\r\n          id: Date.now(),\r\n        };\r\n        setMessages((prevMessages) => ({\r\n          ...prevMessages,\r\n          [selectedUser.id]: [\r\n            ...(prevMessages[selectedUser.id] || []),\r\n            newMessageObj,\r\n          ],\r\n        }));\r\n\r\n        // Simulate message status changes\r\n        setTimeout(() => updateMessageStatus(newMessageObj, \"delivered\"), 1000);\r\n        setTimeout(() => updateMessageStatus(newMessageObj, \"seen\"), 2000);\r\n      }\r\n    },\r\n    [selectedUser, updateMessageStatus]\r\n  );\r\n\r\n  const handleSendFile = useCallback(\r\n    (file) => {\r\n      if (file && selectedUser) {\r\n        const newMessageObj = {\r\n          file: file,\r\n          sender: \"user\",\r\n          timestamp: new Date(),\r\n          status: \"sent\",\r\n          type: file.type.startsWith(\"image/\") ? \"image\" : \"file\",\r\n          id: Date.now(),\r\n        };\r\n        setMessages((prevMessages) => ({\r\n          ...prevMessages,\r\n          [selectedUser.id]: [\r\n            ...(prevMessages[selectedUser.id] || []),\r\n            newMessageObj,\r\n          ],\r\n        }));\r\n\r\n        // Simulate message status changes\r\n        setTimeout(() => updateMessageStatus(newMessageObj, \"delivered\"), 1000);\r\n        setTimeout(() => updateMessageStatus(newMessageObj, \"seen\"), 2000);\r\n      }\r\n    },\r\n    [selectedUser, updateMessageStatus]\r\n  );\r\n\r\n  const handleUserSelect = useCallback((user) => {\r\n    setSelectedUser(user);\r\n    setMessages((prevMessages) => {\r\n      if (!prevMessages[user.id]) {\r\n        return {\r\n          ...prevMessages,\r\n          [user.id]: [\r\n            {\r\n              text: `Hii.`,\r\n              sender: \"other\",\r\n              timestamp: new Date(Date.now() - 1000000),\r\n              status: \"seen\",\r\n              type: \"text\",\r\n              id: Date.now(),\r\n            }\r\n          ],\r\n        };\r\n      }\r\n      return prevMessages;\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages, selectedUser]);\r\n\r\n// ... existing code ...\r\nconst formattedTime = (date) => {\r\n  const validDate = new Date(date); // Ensure date is a Date object\r\n  if (!isNaN(validDate)) {\r\n    return validDate.toLocaleTimeString();\r\n  }\r\n  return \"Invalid Date\";\r\n};\r\n// ... existing code ...\r\n\r\n  const handleReaction = useCallback((messageId, reaction) => {\r\n    setReactions(prevReactions => ({\r\n      ...prevReactions,\r\n      [messageId]: reaction === prevReactions[messageId] ? null : reaction\r\n    }));\r\n    setOpenReactionMenuId(null);\r\n  }, []);\r\n\r\n  const toggleReactionMenu = useCallback((messageId) => {\r\n    setOpenReactionMenuId((prevId) => (prevId === messageId ? null : messageId));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socketService.on('connect', () => {\r\n      console.log('Connected to Socket.IO server');\r\n    });\r\n\r\n    socketService.on('disconnect', () => {\r\n      console.log('Disconnected from Socket.IO server');\r\n    });\r\n\r\n    return () => {\r\n      socketService.off('connect');\r\n      socketService.off('disconnect');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chat-container-main-wrapper\">\r\n      <div className=\"chat-sidebar\">\r\n        <div className=\"chat-header-top-bar\">\r\n          <input type=\"text\" className=\"user-search-bar\" placeholder=\"Search\" />\r\n        </div>\r\n        <ChatNavbar activeTab={activeTab} setActiveTab={setActiveTab} />\r\n        {activeTab === 'chatlist' && (\r\n          <ChatList selectedUser={selectedUser} handleUserSelect={handleUserSelect} />\r\n        )}\r\n        {activeTab === 'activeusers' && <ActiveUsersList />}\r\n        {activeTab === 'friends' && <FriendsList />}\r\n        {activeTab === 'addfriends' && <AddFriend />} {/* Render AddFriend here */}\r\n      </div>\r\n      \r\n      <div className=\"chat-main\">\r\n        {selectedUser ? (\r\n          <>\r\n            <ChatHeader selectedUser={selectedUser} />\r\n\r\n            <SelectedUserMessages\r\n              selectedUser={selectedUser}\r\n              messages={messages}\r\n              formatTime={formatTime}\r\n              reactions={reactions}\r\n              openReactionMenuId={openReactionMenuId}\r\n              handleReaction={handleReaction}\r\n              toggleReactionMenu={toggleReactionMenu}\r\n            />\r\n\r\n            <div className=\"chat-input-container\">\r\n              <MessageInput\r\n                onSendMessage={handleSendMessage}\r\n                onSendFile={handleSendFile}\r\n              />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <WelcomeContainer />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}