{"ast":null,"code":"// utils/api.js\n\nimport { refreshAccessToken } from './auth';\nexport const apiCall = async (url, options = {}) => {\n  let accessToken = localStorage.getItem('accessToken');\n  if (!accessToken) {\n    throw new Error('No access token found');\n  }\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${accessToken}`,\n    ...options.headers\n  };\n  const response = await fetch(url, {\n    ...options,\n    headers\n  });\n  if (response.status === 401) {\n    try {\n      accessToken = await refreshAccessToken();\n      headers['Authorization'] = `Bearer ${accessToken}`;\n      const retryResponse = await fetch(url, {\n        ...options,\n        headers\n      });\n      return await retryResponse.json();\n    } catch (err) {\n      throw new Error('Failed to refresh token');\n    }\n  }\n  return await response.json();\n};","map":{"version":3,"names":["refreshAccessToken","apiCall","url","options","accessToken","localStorage","getItem","Error","headers","response","fetch","status","retryResponse","json","err"],"sources":["C:/Users/thesh/Desktop/LOGIN_SINGUP - Copy/LOGIN_SINGUP - Copy/frontend/src/utils/api.js"],"sourcesContent":["// utils/api.js\r\n\r\nimport { refreshAccessToken } from './auth';\r\n\r\nexport const apiCall = async (url, options = {}) => {\r\n  let accessToken = localStorage.getItem('accessToken');\r\n\r\n  if (!accessToken) {\r\n    throw new Error('No access token found');\r\n  }\r\n\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `Bearer ${accessToken}`,\r\n    ...options.headers,\r\n  };\r\n\r\n  const response = await fetch(url, {\r\n    ...options,\r\n    headers,\r\n  });\r\n\r\n  if (response.status === 401) {\r\n    try {\r\n      accessToken = await refreshAccessToken();\r\n      headers['Authorization'] = `Bearer ${accessToken}`;\r\n      const retryResponse = await fetch(url, {\r\n        ...options,\r\n        headers,\r\n      });\r\n      return await retryResponse.json();\r\n    } catch (err) {\r\n      throw new Error('Failed to refresh token');\r\n    }\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n"],"mappings":"AAAA;;AAEA,SAASA,kBAAkB,QAAQ,QAAQ;AAE3C,OAAO,MAAMC,OAAO,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAClD,IAAIC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EAErD,IAAI,CAACF,WAAW,EAAE;IAChB,MAAM,IAAIG,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EAEA,MAAMC,OAAO,GAAG;IACd,cAAc,EAAE,kBAAkB;IAClC,eAAe,EAAE,UAAUJ,WAAW,EAAE;IACxC,GAAGD,OAAO,CAACK;EACb,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAG,EAAE;IAChC,GAAGC,OAAO;IACVK;EACF,CAAC,CAAC;EAEF,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IAC3B,IAAI;MACFP,WAAW,GAAG,MAAMJ,kBAAkB,CAAC,CAAC;MACxCQ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUJ,WAAW,EAAE;MAClD,MAAMQ,aAAa,GAAG,MAAMF,KAAK,CAACR,GAAG,EAAE;QACrC,GAAGC,OAAO;QACVK;MACF,CAAC,CAAC;MACF,OAAO,MAAMI,aAAa,CAACC,IAAI,CAAC,CAAC;IACnC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAM,IAAIP,KAAK,CAAC,yBAAyB,CAAC;IAC5C;EACF;EAEA,OAAO,MAAME,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}