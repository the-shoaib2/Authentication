{"ast":null,"code":"import axiosInstance from '../../../../utils/axiosConfig';\nconst API_URL = 'http://localhost:8080/chat-services';\nconst createAuthHeaders = token => ({\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nexport const fetchUsers = async token => {\n  const response = await axiosInstance.get(`${API_URL}/all-users`, createAuthHeaders(token));\n  return response.data;\n};\nexport const fetchFriendRequests = async token => {\n  const response = await axiosInstance.get(`${API_URL}/friend-requests`, createAuthHeaders(token));\n  return response.data;\n};\nexport const sendFriendRequest = async (token, userId) => {\n  const response = await axiosInstance.post(`${API_URL}/friend-requests`, {\n    receiverId: userId\n  }, createAuthHeaders(token));\n  return response.data;\n};\nexport const cancelFriendRequest = async (token, requestId) => {\n  const response = await axiosInstance.post(`${API_URL}/friend-requests/cancel`, {\n    requestId\n  }, createAuthHeaders(token));\n  return response.data;\n};\nexport const acceptFriendRequest = async (token, requestId) => {\n  const response = await axiosInstance.post(`${API_URL}/friend-requests/accept`, {\n    requestId\n  }, createAuthHeaders(token));\n  return response.data;\n};\nexport const rejectFriendRequest = async (token, requestId) => {\n  const response = await axiosInstance.post(`${API_URL}/friend-requests/reject`, {\n    requestId\n  }, createAuthHeaders(token));\n  return response.data;\n};\nexport const fetchFriends = async token => {\n  const response = await axiosInstance.get(`${API_URL}/friends`, createAuthHeaders(token));\n  return response.data;\n};","map":{"version":3,"names":["axiosInstance","API_URL","createAuthHeaders","token","headers","Authorization","fetchUsers","response","get","data","fetchFriendRequests","sendFriendRequest","userId","post","receiverId","cancelFriendRequest","requestId","acceptFriendRequest","rejectFriendRequest","fetchFriends"],"sources":["C:/Users/thesh/Desktop/Authentication - Copy/frontend/src/components/Services/ChatServices/API/FriendsAPI.js"],"sourcesContent":["import axiosInstance from '../../../../utils/axiosConfig';\r\n\r\nconst API_URL = 'http://localhost:8080/chat-services';\r\n\r\nconst createAuthHeaders = (token) => ({\r\n    headers: {\r\n        Authorization: `Bearer ${token}`,\r\n    },\r\n});\r\n\r\nexport const fetchUsers = async (token) => {\r\n    const response = await axiosInstance.get(`${API_URL}/all-users`, createAuthHeaders(token));\r\n    return response.data;\r\n};\r\n\r\nexport const fetchFriendRequests = async (token) => {\r\n    const response = await axiosInstance.get(`${API_URL}/friend-requests`, createAuthHeaders(token));\r\n    return response.data;\r\n};\r\n\r\nexport const sendFriendRequest = async (token, userId) => {\r\n    const response = await axiosInstance.post(`${API_URL}/friend-requests`, { receiverId: userId }, createAuthHeaders(token));\r\n    return response.data;\r\n};\r\n\r\nexport const cancelFriendRequest = async (token, requestId) => {\r\n    const response = await axiosInstance.post(`${API_URL}/friend-requests/cancel`, { requestId }, createAuthHeaders(token));\r\n    return response.data;\r\n};\r\n\r\nexport const acceptFriendRequest = async (token, requestId) => {\r\n    const response = await axiosInstance.post(`${API_URL}/friend-requests/accept`, { requestId }, createAuthHeaders(token));\r\n    return response.data;\r\n};\r\n\r\nexport const rejectFriendRequest = async (token, requestId) => {\r\n    const response = await axiosInstance.post(`${API_URL}/friend-requests/reject`, { requestId }, createAuthHeaders(token));\r\n    return response.data;\r\n};\r\n\r\nexport const fetchFriends = async (token) => {\r\n    const response = await axiosInstance.get(`${API_URL}/friends`, createAuthHeaders(token));\r\n    return response.data;\r\n};\r\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,+BAA+B;AAEzD,MAAMC,OAAO,GAAG,qCAAqC;AAErD,MAAMC,iBAAiB,GAAIC,KAAK,KAAM;EAClCC,OAAO,EAAE;IACLC,aAAa,EAAE,UAAUF,KAAK;EAClC;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMG,UAAU,GAAG,MAAOH,KAAK,IAAK;EACvC,MAAMI,QAAQ,GAAG,MAAMP,aAAa,CAACQ,GAAG,CAAC,GAAGP,OAAO,YAAY,EAAEC,iBAAiB,CAACC,KAAK,CAAC,CAAC;EAC1F,OAAOI,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAG,MAAOP,KAAK,IAAK;EAChD,MAAMI,QAAQ,GAAG,MAAMP,aAAa,CAACQ,GAAG,CAAC,GAAGP,OAAO,kBAAkB,EAAEC,iBAAiB,CAACC,KAAK,CAAC,CAAC;EAChG,OAAOI,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAG,MAAAA,CAAOR,KAAK,EAAES,MAAM,KAAK;EACtD,MAAML,QAAQ,GAAG,MAAMP,aAAa,CAACa,IAAI,CAAC,GAAGZ,OAAO,kBAAkB,EAAE;IAAEa,UAAU,EAAEF;EAAO,CAAC,EAAEV,iBAAiB,CAACC,KAAK,CAAC,CAAC;EACzH,OAAOI,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMM,mBAAmB,GAAG,MAAAA,CAAOZ,KAAK,EAAEa,SAAS,KAAK;EAC3D,MAAMT,QAAQ,GAAG,MAAMP,aAAa,CAACa,IAAI,CAAC,GAAGZ,OAAO,yBAAyB,EAAE;IAAEe;EAAU,CAAC,EAAEd,iBAAiB,CAACC,KAAK,CAAC,CAAC;EACvH,OAAOI,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMQ,mBAAmB,GAAG,MAAAA,CAAOd,KAAK,EAAEa,SAAS,KAAK;EAC3D,MAAMT,QAAQ,GAAG,MAAMP,aAAa,CAACa,IAAI,CAAC,GAAGZ,OAAO,yBAAyB,EAAE;IAAEe;EAAU,CAAC,EAAEd,iBAAiB,CAACC,KAAK,CAAC,CAAC;EACvH,OAAOI,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMS,mBAAmB,GAAG,MAAAA,CAAOf,KAAK,EAAEa,SAAS,KAAK;EAC3D,MAAMT,QAAQ,GAAG,MAAMP,aAAa,CAACa,IAAI,CAAC,GAAGZ,OAAO,yBAAyB,EAAE;IAAEe;EAAU,CAAC,EAAEd,iBAAiB,CAACC,KAAK,CAAC,CAAC;EACvH,OAAOI,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMU,YAAY,GAAG,MAAOhB,KAAK,IAAK;EACzC,MAAMI,QAAQ,GAAG,MAAMP,aAAa,CAACQ,GAAG,CAAC,GAAGP,OAAO,UAAU,EAAEC,iBAAiB,CAACC,KAAK,CAAC,CAAC;EACxF,OAAOI,QAAQ,CAACE,IAAI;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}