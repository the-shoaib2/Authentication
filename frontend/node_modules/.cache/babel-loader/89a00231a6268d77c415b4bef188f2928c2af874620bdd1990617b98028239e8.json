{"ast":null,"code":"import axiosInstance from './axiosConfig';\nexport const fetchLoggedInUser = async () => {\n  const response = await axiosInstance.get('/Users/me');\n  return response.data;\n};\nexport const signupUser = async formData => {\n  const response = await axiosInstance.post(\"/auth/signup\", formData, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    withCredentials: true\n  });\n  return response.data;\n};\nexport const loginUser = async (emailOrUsername, password) => {\n  const response = await axiosInstance.post(\"/auth/login\", {\n    emailOrUsername,\n    password\n  });\n  return response.data;\n};\nexport const logoutUser = async () => {\n  const response = await axiosInstance.post(\"/auth/logout\", {}, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    },\n    withCredentials: true\n  });\n  if (response.status === 200) {\n    clearAuthData();\n  }\n  return response;\n};\nexport const deleteUser = async userId => {\n  const response = await axiosInstance.delete(`/auth/delete/${userId}`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return response;\n};\nexport const refreshToken = async () => {\n  const refreshToken = localStorage.getItem('refreshToken');\n  if (!refreshToken) {\n    console.error('No refresh token provided');\n    return false;\n  }\n  try {\n    const response = await axiosInstance.post('/auth/refresh', {\n      refreshToken: refreshToken\n    });\n    if (response.status === 200) {\n      localStorage.setItem('token', response.data.accessToken);\n      return true;\n    } else {\n      clearAuthData();\n      return false;\n    }\n  } catch (error) {\n    console.error('Error refreshing token:', error);\n    return false;\n  }\n};\nexport const checkAuthentication = async () => {\n  const token = localStorage.getItem('token');\n  if (!token) return false;\n  // Optionally, you can add a token validation logic here\n  return true;\n};\nconst clearAuthData = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('refreshToken');\n  // Clear cookies if necessary\n  const cookies = document.cookie.split(\"; \");\n  for (let cookie of cookies) {\n    const eqPos = cookie.indexOf(\"=\");\n    const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n    document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\n  }\n};","map":{"version":3,"names":["axiosInstance","fetchLoggedInUser","response","get","data","signupUser","formData","post","headers","withCredentials","loginUser","emailOrUsername","password","logoutUser","Authorization","localStorage","getItem","status","clearAuthData","deleteUser","userId","delete","refreshToken","console","error","setItem","accessToken","checkAuthentication","token","removeItem","cookies","document","cookie","split","eqPos","indexOf","name","substr"],"sources":["C:/Users/thesh/Desktop/Authentication - Copy/frontend/src/utils/ApiService.js"],"sourcesContent":["import axiosInstance from './axiosConfig';\r\n\r\nexport const fetchLoggedInUser = async () => {\r\n    const response = await axiosInstance.get('/Users/me');\r\n    return response.data;\r\n};\r\n\r\nexport const signupUser = async (formData) => {\r\n    const response = await axiosInstance.post(\"/auth/signup\", formData, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        withCredentials: true, \r\n    });\r\n    return response.data;\r\n};\r\n\r\nexport const loginUser = async (emailOrUsername, password) => {\r\n    const response = await axiosInstance.post(\"/auth/login\", {\r\n        emailOrUsername,\r\n        password\r\n    });\r\n    return response.data;\r\n};\r\n\r\nexport const logoutUser = async () => {\r\n    const response = await axiosInstance.post(\"/auth/logout\", {}, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        withCredentials: true,\r\n    });\r\n    if (response.status === 200) {\r\n        clearAuthData();\r\n    }\r\n    return response;\r\n};\r\n\r\nexport const deleteUser = async (userId) => {\r\n    const response = await axiosInstance.delete(`/auth/delete/${userId}`, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n    });\r\n    return response;\r\n};\r\n\r\nexport const refreshToken = async () => {\r\n    const refreshToken = localStorage.getItem('refreshToken');\r\n    if (!refreshToken) {\r\n        console.error('No refresh token provided');\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        const response = await axiosInstance.post('/auth/refresh', {\r\n            refreshToken: refreshToken,\r\n        });\r\n        if (response.status === 200) {\r\n            localStorage.setItem('token', response.data.accessToken);\r\n            return true;\r\n        } else {\r\n            clearAuthData();\r\n            return false;\r\n        }\r\n    } catch (error) {\r\n        console.error('Error refreshing token:', error);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const checkAuthentication = async () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) return false;\r\n    // Optionally, you can add a token validation logic here\r\n    return true;\r\n};\r\n\r\nconst clearAuthData = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('refreshToken');\r\n    // Clear cookies if necessary\r\n    const cookies = document.cookie.split(\"; \");\r\n    for (let cookie of cookies) {\r\n        const eqPos = cookie.indexOf(\"=\");\r\n        const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\r\n        document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}