{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\Authentication\\\\frontend\\\\src\\\\components\\\\Services\\\\ChatServices\\\\ChatList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../../../assets/style/ServicesStyle/ChatServicesStyle/ChatList.css\";\nimport { fetchFriends } from '../API/FriendsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatList = ({\n  selectedUser,\n  handleUserSelect\n}) => {\n  _s();\n  const [friends, setFriends] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const fetchFriendsData = async () => {\n      try {\n        const data = await fetchFriends(token);\n        setFriends(data.friends || []);\n      } catch (error) {\n        console.error(\"Error fetching friends:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFriendsData();\n  }, []);\n\n  // Sort friends by lastMessageTime first, then by addedAt in descending order\n  const sortedFriends = friends.sort((a, b) => {\n    if (b.lastMessageTime - a.lastMessageTime !== 0) {\n      return b.lastMessageTime - a.lastMessageTime; // Sort by last message time\n    }\n    return b.addedAt - a.addedAt; // Sort by added date if last message times are equal\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading friends...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-sidebar\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"chat-list\",\n      children: sortedFriends.map(friend => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `chat-list-item ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === friend.id ? \"active\" : \"\"}`,\n        onClick: () => handleUserSelect(friend),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-item-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: friend.avatar,\n              alt: friend.name,\n              className: \"chat-avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `chat-name ${friend.unread > 0 ? \"unread\" : \"\"}`,\n                children: friend.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"chat-time\",\n                children: friend.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-footer\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"chat-last-message\",\n                children: friend.lastMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), friend.unread > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"unread-badge\",\n                children: friend.unread\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, friend.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatList, \"GluWeJ1iRXfQhrdorhvHk0aSAeM=\");\n_c = ChatList;\nexport default ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","useEffect","useState","fetchFriends","jsxDEV","_jsxDEV","ChatList","selectedUser","handleUserSelect","_s","friends","setFriends","loading","setLoading","token","localStorage","getItem","fetchFriendsData","data","error","console","sortedFriends","sort","a","b","lastMessageTime","addedAt","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","friend","id","onClick","src","avatar","alt","name","unread","time","lastMessage","_c","$RefreshReg$"],"sources":["C:/Users/thesh/Desktop/Authentication/frontend/src/components/Services/ChatServices/ChatList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../../../assets/style/ServicesStyle/ChatServicesStyle/ChatList.css\";\r\nimport { fetchFriends } from '../API/FriendsAPI';\r\n\r\nconst ChatList = ({ selectedUser, handleUserSelect }) => {\r\n  const [friends, setFriends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const fetchFriendsData = async () => {\r\n      try {\r\n        const data = await fetchFriends(token);\r\n        setFriends(data.friends || []);\r\n      } catch (error) {\r\n        console.error(\"Error fetching friends:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchFriendsData();\r\n  }, []);\r\n\r\n  // Sort friends by lastMessageTime first, then by addedAt in descending order\r\n  const sortedFriends = friends.sort((a, b) => {\r\n    if (b.lastMessageTime - a.lastMessageTime !== 0) {\r\n      return b.lastMessageTime - a.lastMessageTime; // Sort by last message time\r\n    }\r\n    return b.addedAt - a.addedAt; // Sort by added date if last message times are equal\r\n  });\r\n\r\n  if (loading) {\r\n    return <div>Loading friends...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-sidebar\">\r\n      <ul className=\"chat-list\">\r\n        {sortedFriends.map((friend) => (\r\n          <li\r\n            key={friend.id}\r\n            className={`chat-list-item ${selectedUser?.id === friend.id ? \"active\" : \"\"}`}\r\n            onClick={() => handleUserSelect(friend)}\r\n          >\r\n            <div className=\"chat-item-content\">\r\n              <div className=\"avatar-container\">\r\n                <img src={friend.avatar} alt={friend.name} className=\"chat-avatar\" />\r\n              </div>\r\n              <div className=\"chat-info\">\r\n                <div className=\"chat-header\">\r\n                  <span className={`chat-name ${friend.unread > 0 ? \"unread\" : \"\"}`}>\r\n                    {friend.name}\r\n                  </span>\r\n                  <span className=\"chat-time\">{friend.time}</span>\r\n                </div>\r\n                <div className=\"chat-footer\">\r\n                  <span className=\"chat-last-message\">\r\n                    {friend.lastMessage}\r\n                  </span>\r\n                  {friend.unread > 0 && (\r\n                    <span className=\"unread-badge\">{friend.unread}</span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}